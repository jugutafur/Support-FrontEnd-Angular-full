{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class RestComponent {\n  constructor() {}\n}\nRestComponent.ɵfac = function RestComponent_Factory(t) {\n  return new (t || RestComponent)();\n};\nRestComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RestComponent,\n  selectors: [[\"app-rest\"]],\n  decls: 140,\n  vars: 0,\n  consts: [[\"href\", \"https://developer.marvel.com/docs#!/public/getCreatorCollection_get_0\"], [\"href\", \"https://docs.thecatapi.com/\"], [\"href\", \"https://developers.facebook.com/docs\"], [\"href\", \"https://developer.twitter.com/en\"], [1, \"container\"], [1, \"table\", \"table-striped\", \"table-hover\", \"table-bordered\", \"align-middle\"], [\"scope\", \"col\"], [\"src\", \"../../../../../assets/arquitectura/REST/RequestResponse.png\", \"alt\", \"RequestResponse\"], [\"src\", \"../../../../../assets/arquitectura/REST/ElementosRESTful.png\", \"alt\", \"\"], [\"colspan\", \"3\", 1, \"titulo\"], [\"src\", \"../../../../../assets/arquitectura/REST/PropiedadesREST.png\", \"alt\", \"PropiedadesREST\"]],\n  template: function RestComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"a\", 0);\n      i0.ɵɵtext(2, \" Api marvel\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"a\", 1);\n      i0.ɵɵtext(4, \" api TheCatApi\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"a\", 2);\n      i0.ɵɵtext(6, \" Api facebook\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"a\", 3);\n      i0.ɵɵtext(8, \" Api twitter\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\", 4)(10, \"table\", 5)(11, \"thead\")(12, \"tr\")(13, \"th\", 6);\n      i0.ɵɵtext(14, \"Referencia\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"th\", 6);\n      i0.ɵɵtext(16, \"Descripcion\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"th\", 6);\n      i0.ɵɵtext(18, \"Ejemplo\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(19, \"tbody\")(20, \"tr\")(21, \"td\");\n      i0.ɵɵtext(22, \"Deficiones\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"td\")(24, \"p\")(25, \"strong\");\n      i0.ɵɵtext(26, \"Aplication programmin interface : interfaces de progrtmacion de aplicaciones\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(27, \"p\")(28, \"strong\");\n      i0.ɵɵtext(29, \"API:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(30, \" conjunto de funciones, metodos, subrutinas que ofrece o expone un software para que interactue o consuma el mismo u otro diferente\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"p\")(32, \"strong\");\n      i0.ɵɵtext(33, \"Protocolo\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(34, \" es el conjunto de reglas en las que se van comunicar dos Entidades. Entre computaoras es atravez del modelo TCP/IP \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"p\")(36, \"strong\");\n      i0.ɵɵtext(37, \"HTTP\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(38, \"es un Protocolo de comunicacion entre aplicaciones basado en el intercambio de texto. El servido devuelve los datos en codigo HTML\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(39, \"td\")(40, \"p\")(41, \"strong\");\n      i0.ɵɵtext(42, \"Metodos o Verbos(acciones) HTTP\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(43, \"p\")(44, \"strong\");\n      i0.ɵɵtext(45, \"GET:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(46, \" obtener un recurso desde el cliente \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(47, \"p\")(48, \"strong\");\n      i0.ɵɵtext(49, \"POST\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(50, \" solicitud desde el cliente hacia el servidor para Crear\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(51, \"p\")(52, \"strong\");\n      i0.ɵɵtext(53, \"PUT:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(54, \" en este caso podemos actualizar todos los propiedades del recurso \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(55, \"p\")(56, \"strong\");\n      i0.ɵɵtext(57, \"PATCH:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(58, \"actualizar parcialmente un recurso\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(59, \"p\")(60, \"strong\");\n      i0.ɵɵtext(61, \"HEADER:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(62, \"consultar la existencia de un recurso \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(63, \"p\")(64, \"strong\");\n      i0.ɵɵtext(65, \"DELETE:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(66, \"elimina un recurso \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(67, \"p\")(68, \"strong\");\n      i0.ɵɵtext(69, \"OPTION:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(70, \"este solo funciona en lado del navagador: valida o permite el acceso hacia oro dominio, realiza una distincion. \");\n      i0.ɵɵelement(71, \"br\");\n      i0.ɵɵelementStart(72, \"strong\");\n      i0.ɵɵtext(73, \" Nota:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(74, \" CORS: asegura el dominio, porque delimita las solicitudes dentro el mismo dominio y restringue el intercambio de recursos de origin cruzado.\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(75, \"tr\")(76, \"td\")(77, \"strong\");\n      i0.ɵɵtext(78, \"REST: acronimo Representational State Transfer. transferencia de estado Representational \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(79, \"br\");\n      i0.ɵɵtext(80, \" nota:mientras HTTP es una transferencia de archivos en REST es tranferencia de recursos \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(81, \"td\")(82, \"strong\");\n      i0.ɵɵtext(83, \"https =s \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(84, \" subido al servidor/ viaja con cifrado segruro \");\n      i0.ɵɵelement(85, \"br\");\n      i0.ɵɵelementStart(86, \"strong\");\n      i0.ɵɵtext(87, \" Cookies y Tokens:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(88, \" cadena de caracteres que se genera al logiarnos y son devueltos en cada peticion y deben ser enviados en el Request porque representa los permisos para ciertas soicitudes, pueden ser generadas por la aplicacion, navegador, o por el servidor. estas cookies tienen atributos que contienen variables\");\n      i0.ɵɵelement(89, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(90, \"td\");\n      i0.ɵɵelement(91, \"img\", 7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(92, \"tr\")(93, \"td\");\n      i0.ɵɵtext(94, \"REST definicion general: estilo de aquitetura de software enfocado en el intercambio de recursos basados en HTPP \");\n      i0.ɵɵelement(95, \"br\");\n      i0.ɵɵtext(96, \" RESTful es una API que esta dise\\u00F1ada alrededror de los conceptos de REST: \");\n      i0.ɵɵelement(97, \"br\");\n      i0.ɵɵtext(98, \" Recurso, URI, ACCION \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(99, \"td\")(100, \"strong\");\n      i0.ɵɵtext(101, \"Como Funciona una REST\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(102, \" es un conjunto de principios que definen la forma de realizar las operaciones CRUD. En la arquiterura Cliente servidor actuan de forma independiente, siempre y cuando la interfaz sea la misma al procesar una solicitud y una respuesta. el servidor almacena la informacion y la pone a disposicion del usuario, mientas que el usuario toma la informacion y la muestra al usuario o la utiliza para realizar posteriores peticiones de mas informacion. \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(103, \"td\");\n      i0.ɵɵelement(104, \"img\", 8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(105, \"tr\")(106, \"td\")(107, \"strong\");\n      i0.ɵɵtext(108, \"definiciones terminos\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(109, \"td\")(110, \"strong\");\n      i0.ɵɵtext(111, \"URI:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(112, \" Uniform Resource Locator (Localizador de Recursos Uniforme) \");\n      i0.ɵɵelement(113, \"br\");\n      i0.ɵɵelementStart(114, \"strong\");\n      i0.ɵɵtext(115, \"URN:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(116, \" El Nombre de Recurso Uniforme o URN (Uniform Resource Name) \");\n      i0.ɵɵelement(117, \"br\");\n      i0.ɵɵelementStart(118, \"strong\");\n      i0.ɵɵtext(119, \"CONTENT TYPES:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(120, \" representa el formato en el que el servidor esta devolvierdo ela informacion para que el cliente o navegador sepa como procesarla \");\n      i0.ɵɵelement(121, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(122, \"td\", 9);\n      i0.ɵɵelement(123, \"img\", 10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(124, \"tr\");\n      i0.ɵɵelement(125, \"td\")(126, \"td\")(127, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(128, \"tr\");\n      i0.ɵɵelement(129, \"td\")(130, \"td\")(131, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(132, \"tr\");\n      i0.ɵɵelement(133, \"td\")(134, \"td\")(135, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(136, \"tr\");\n      i0.ɵɵelement(137, \"td\")(138, \"td\")(139, \"td\");\n      i0.ɵɵelementEnd()()()();\n    }\n  },\n  styles: [\".titulo[_ngcontent-%COMP%] {\\n  text-align: center;\\n  font-size: 25px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29yZS9jb21wb25lbnRzL2FycXVpdGVjdHVyYS9yZXN0L3Jlc3QuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxrQkFBQTtFQUNBLGVBQUE7QUFDRiIsInNvdXJjZXNDb250ZW50IjpbIi50aXR1bG97XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGZvbnQtc2l6ZTogMjVweDtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["RestComponent","constructor","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\HP\\Desktop\\juanTafur\\jugutafur\\Support-FrontEnd-Angular-full\\src\\app\\core\\components\\arquitectura\\rest\\rest.component.ts","C:\\Users\\HP\\Desktop\\juanTafur\\jugutafur\\Support-FrontEnd-Angular-full\\src\\app\\core\\components\\arquitectura\\rest\\rest.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-rest',\r\n  templateUrl: './rest.component.html',\r\n  styleUrls: ['./rest.component.scss']\r\n})\r\nexport class RestComponent  {\r\n\r\n  constructor() { }\r\n\r\n}\r\n","<div>\r\n    <a href=\"https://developer.marvel.com/docs#!/public/getCreatorCollection_get_0\"> Api marvel</a>\r\n    <a href=\"https://docs.thecatapi.com/\"> api TheCatApi</a>\r\n    <a href=\"https://developers.facebook.com/docs\"> Api facebook</a>\r\n    <a href=\"https://developer.twitter.com/en\"> Api twitter</a>\r\n</div>\r\n\r\n<div class=\"container\">\r\n    <table class=\"table table-striped table-hover table-bordered align-middle\">\r\n        <thead>\r\n            <tr>\r\n                <th scope=\"col\">Referencia</th>\r\n                <th scope=\"col\">Descripcion</th>\r\n                <th scope=\"col\">Ejemplo</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n\r\n            <tr>\r\n                <td>Deficiones</td>\r\n                <td>\r\n                    <p><strong>Aplication programmin interface : interfaces de progrtmacion de aplicaciones</strong></p>\r\n                    <p> <strong>API:</strong>  conjunto de funciones, metodos, subrutinas que ofrece o expone un software para que\r\n                        interactue o consuma  el mismo u otro diferente</p>\r\n                    <p><strong>Protocolo</strong>  es el conjunto de reglas en las que se van comunicar dos Entidades. Entre computaoras es\r\n                        atravez del modelo TCP/IP </p>\r\n                     <p><strong>HTTP</strong>es un Protocolo de comunicacion entre aplicaciones basado en el intercambio de\r\n                         texto. El servido devuelve los datos en codigo HTML</p>\r\n                    </td>\r\n                <td>\r\n                    <p><strong>Metodos o Verbos(acciones) HTTP</strong></p>\r\n                    <p><strong>GET:</strong> obtener un recurso desde el cliente </p>\r\n                    <p><strong>POST</strong> solicitud desde el cliente hacia el servidor para Crear</p>\r\n                    <p><strong>PUT:</strong> en este caso podemos actualizar todos los propiedades del recurso </p>\r\n                    <p><strong>PATCH:</strong>actualizar parcialmente un recurso</p>\r\n                    <p><strong>HEADER:</strong>consultar la existencia de un recurso </p>\r\n                    <p><strong>DELETE:</strong>elimina un recurso </p>\r\n                    <p><strong>OPTION:</strong>este solo funciona en lado del navagador: valida o permite el acceso hacia oro dominio,\r\n                     realiza una distincion. <br>\r\n                     <strong> Nota:</strong> CORS: asegura el dominio, porque delimita las solicitudes dentro\r\n                     el mismo dominio y restringue el intercambio de  recursos de origin cruzado.</p>\r\n                </td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td><strong>REST: acronimo Representational State Transfer. transferencia  de estado Representational </strong><br>\r\n                    nota:mientras HTTP es  una transferencia de archivos en REST es tranferencia de recursos\r\n                </td>\r\n                <td>\r\n                    <strong>https =s </strong> subido al servidor/ viaja con cifrado segruro <br>\r\n                    <strong> Cookies y Tokens:</strong> cadena de caracteres que se genera al logiarnos y son devueltos\r\n                    en cada peticion y deben ser enviados en el Request porque representa  los permisos para ciertas soicitudes,\r\n                    pueden ser generadas por la aplicacion, navegador, o por el servidor. estas cookies tienen atributos que contienen variables<br>\r\n\r\n                </td>\r\n                <td> <img src=\"../../../../../assets/arquitectura/REST/RequestResponse.png\" alt=\"RequestResponse\"></td>\r\n            </tr>\r\n\r\n\r\n            <tr>\r\n                <td>REST definicion general: estilo de aquitetura de software enfocado en el intercambio de  recursos basados en HTPP <br>\r\n                    RESTful es una API que esta diseñada alrededror de los conceptos de REST: <br>\r\n                    Recurso, URI, ACCION\r\n                </td>\r\n                <td><strong>Como Funciona una REST</strong> es un conjunto de principios que definen la forma de realizar las operaciones CRUD. En la arquiterura Cliente servidor\r\n                    actuan de forma independiente, siempre y cuando la interfaz sea la misma al procesar una solicitud y una respuesta. el servidor almacena la informacion y la\r\n                    pone a disposicion del usuario, mientas que el usuario toma la informacion y la muestra al usuario o la utiliza para realizar\r\n                    posteriores peticiones de mas informacion.\r\n\r\n                </td>\r\n                <td><img src=\"../../../../../assets/arquitectura/REST/ElementosRESTful.png\" alt=\"\"></td>\r\n            </tr>\r\n            <tr>\r\n                <td>\r\n                    <strong>definiciones terminos</strong>\r\n                </td>\r\n                 <td>\r\n                    <strong>URI:</strong> Uniform Resource Locator (Localizador de Recursos Uniforme) <br>\r\n                    <strong>URN:</strong>  El Nombre de Recurso Uniforme o URN (Uniform Resource Name) <br>\r\n                    <strong>CONTENT TYPES:</strong> representa el formato en el que el servidor esta devolvierdo ela informacion\r\n                    para que el cliente o navegador sepa como procesarla <br>\r\n                </td>\r\n\r\n                <td colspan=\"3\" class=\"titulo\"><img src=\"../../../../../assets/arquitectura/REST/PropiedadesREST.png\" alt=\"PropiedadesREST\"></td>\r\n\r\n            </tr>\r\n\r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n  </div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}