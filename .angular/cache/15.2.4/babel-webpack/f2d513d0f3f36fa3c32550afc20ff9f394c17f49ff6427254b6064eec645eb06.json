{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class SoapComponent {\n  constructor() {}\n  ngOnInit() {}\n}\nSoapComponent.ɵfac = function SoapComponent_Factory(t) {\n  return new (t || SoapComponent)();\n};\nSoapComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SoapComponent,\n  selectors: [[\"app-soap\"]],\n  decls: 210,\n  vars: 0,\n  consts: [[1, \"container\"], [1, \"table\", \"table-striped\", \"table-hover\", \"table-bordered\", \"align-middle\"], [\"scope\", \"col\"], [\"href\", \"https://innova20.wordpress.com/2017/05/09/soa-y-soap-no-es-lo-mismo/#:~:text=Visto%20todo%20lo%20anterior%2C%20podr%C3%ADamos,de%20mensajer%C3%ADa%20de%20la%20misma.\"], [\"src\", \"../../../../../assets/arquitectura/soap/Soat.png\", \"alt\", \"soap\"], [\"href\", \"https://www.youtube.com/watch?v=9gmY7z9ev0U&list=PL0VBNmf13bYCfhmksjoIxxszW4ix-Ol59\"], [\"src\", \"../../../../../assets/arquitectura/soap/SoapUI.PNG\", \"alt\", \"Enfoques\", \"title\", \"Enfoques\"], [\"src\", \"../../../../../assets/arquitectura/soap/SoapUI1.PNG\", \"alt\", \"tools\", \"title\", \"tools\"], [\"src\", \"../../../../../assets/arquitectura/soap/SoapUI2.PNG\", \"alt\", \"UI\", \"title\", \"UI\"], [\"src\", \"../../../../../assets/arquitectura/soap/SoapUI3.PNG\", \"alt\", \"Test\", \"title\", \"Test\"]],\n  template: function SoapComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"table\", 1)(2, \"thead\")(3, \"tr\")(4, \"th\", 2);\n      i0.ɵɵtext(5, \"Referencia\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"th\", 2);\n      i0.ɵɵtext(7, \"Descripcion\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"th\", 2);\n      i0.ɵɵtext(9, \"Ejemplo\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(10, \"tbody\")(11, \"tr\")(12, \"td\")(13, \"a\", 3);\n      i0.ɵɵtext(14, \"Diferencia entre SOA y SOAP\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"td\");\n      i0.ɵɵtext(16, \" La diferencia es que SOA es un paradigma de arquitectura orientada a servicios y SOAP es una tipolog\\u00EDa de mensaje. \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"tr\")(19, \"td\");\n      i0.ɵɵtext(20, \"Que es Soa\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"td\");\n      i0.ɵɵtext(22, \" Services Oriented Architecture \");\n      i0.ɵɵelement(23, \"br\")(24, \"br\");\n      i0.ɵɵtext(25, \" En un primer momento, se definieron 8 principios b\\u00E1sicos de que deber\\u00EDa cumplir SOA. Posteriormente, con la evoluci\\u00F3n de los servicios, se a\\u00F1adi\\u00F3 la \\u00ABinteroperabilidad\\u00BB como un nuevo principio: \");\n      i0.ɵɵelement(26, \"br\")(27, \"br\");\n      i0.ɵɵelementStart(28, \"strong\");\n      i0.ɵɵtext(29, \"1. Contratos de servicio estandarizados:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(30, \" para que los servicios interactuen entre ellos, estos deben de hacerlo mediante un contrato formal que describa cada servicio y defina los t\\u00E9rminos en los que ser\\u00E1 entregada la informaci\\u00F3n\");\n      i0.ɵɵelement(31, \"br\")(32, \"br\");\n      i0.ɵɵelementStart(33, \"strong\");\n      i0.ɵɵtext(34, \"2. Servicios con bajo acoplamiento:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(35, \" los servicios deben ser dise\\u00F1ados para interactuar entre ellos de forma aut\\u00F3noma, evitando dependencias entre los mismos\");\n      i0.ɵɵelement(36, \"br\")(37, \"br\");\n      i0.ɵɵelementStart(38, \"strong\");\n      i0.ɵɵtext(39, \"3. Abstracci\\u00F3n:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(40, \" contar\\u00E1n con una parte visible del servicio y su contrato. De esta forma, los consumidores del servicio, se abstraer\\u00E1n de la l\\u00F3gica del servicio y la tecnolog\\u00EDa utilizada en el mismo\");\n      i0.ɵɵelement(41, \"br\")(42, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(43, \"td\")(44, \"strong\");\n      i0.ɵɵtext(45, \"4. Reusabilidad:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(46, \" todos los servicios deben ser dise\\u00F1ados para el soporte potencial de la reutilizaci\\u00F3n de l\\u00F3gicas de negocio existentes. El fin de \\u00E9stos servicios no es sustituir a las mismas\");\n      i0.ɵɵelement(47, \"br\")(48, \"br\");\n      i0.ɵɵelementStart(49, \"strong\");\n      i0.ɵɵtext(50, \"5. Autonomia:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(51, \" la l\\u00F3gica del servicio debe ser aut\\u00F3noma y no tener dependencia de la l\\u00F3gica de otros servicios. Un servicio debe poder ser ejecutado de manera independiente\");\n      i0.ɵɵelement(52, \"br\")(53, \"br\");\n      i0.ɵɵelementStart(54, \"strong\");\n      i0.ɵɵtext(55, \"6. Sin estado:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(56, \" los servicios deben ser dise\\u00F1ados para maximizar el bajo acoplamiento y su escalabilidad. El manejo del estado en los mismos podr\\u00EDa impedir estas caracter\\u00EDsticas\");\n      i0.ɵɵelement(57, \"br\")(58, \"br\");\n      i0.ɵɵelementStart(59, \"strong\");\n      i0.ɵɵtext(60, \"7. Capacidad de descubrimiento:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(61, \" los servicios deben contener descripciones para ser descubiertos y entendidos por humanos y los consumidores del servicio, permiti\\u00E9ndoles emplear la l\\u00F3gica descrita en los mismos\");\n      i0.ɵɵelement(62, \"br\")(63, \"br\");\n      i0.ɵɵelementStart(64, \"strong\");\n      i0.ɵɵtext(65, \"8. Composici\\u00F3n:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(66, \" los servicios podr\\u00EDan estar a su vez compuestos por otros servicios. De esta manera se podr\\u00EDan definir diferentes modelos granulares de servicio. Permitir\\u00EDa de esta forma capas de abstraci\\u00F3n de servicios por medio de la agrupaci\\u00F3n a alto nivel de servicios complejos a bajo nivel\");\n      i0.ɵɵelement(67, \"br\")(68, \"br\");\n      i0.ɵɵelementStart(69, \"strong\");\n      i0.ɵɵtext(70, \"9. Interoperabilidad:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(71, \" se trata de la capacidad de poder orquestar servicios para que trabajen entre s\\u00ED. La falta de alguno de los principios anteriores, repercutir\\u00EDa definitivamente en este \\u00FAltimo, haciendo imposible el mismo \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(72, \"tr\")(73, \"td\");\n      i0.ɵɵtext(74, \"SOA\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(75, \"td\");\n      i0.ɵɵtext(76, \"arquitetura donse se distribuye la logica en servecios que luego son consumidos atravez de interfaces \");\n      i0.ɵɵelement(77, \"br\");\n      i0.ɵɵtext(78, \" los servicios normalmente estan relacionados aunidades de negocios o areas de la compa\\u00F1ia por su complejidadd necesitan de un software orquestador y administrador \");\n      i0.ɵɵelement(79, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(80, \"td\");\n      i0.ɵɵelement(81, \"img\", 4);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(82, \"tr\")(83, \"td\");\n      i0.ɵɵtext(84, \"Que es Soap\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(85, \"td\");\n      i0.ɵɵtext(86, \" Simple object Access Protocol \");\n      i0.ɵɵelement(87, \"br\")(88, \"br\");\n      i0.ɵɵtext(89, \" formato de mensajer\\u00EDa m\\u00E1s compatible con el protocolo para su uso con servicios Web XML \");\n      i0.ɵɵelement(90, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(91, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(92, \"tr\")(93, \"td\")(94, \"strong\")(95, \"a\", 5);\n      i0.ɵɵtext(96, \"SOAP\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(97, \"br\")(98, \"br\")(99, \"br\");\n      i0.ɵɵtext(100, \" Herramienta para analizar Web Services \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(101, \"td\");\n      i0.ɵɵtext(102, \" SoapUI: fundada en 2005 por smartUI, open source, enfocada en 3 enfoques \");\n      i0.ɵɵelement(103, \"br\")(104, \"br\");\n      i0.ɵɵelementStart(105, \"strong\");\n      i0.ɵɵtext(106, \"* Enfoque Tools\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(107, \"br\")(108, \"br\");\n      i0.ɵɵtext(109, \" properties: Poder obtener o grabar datos en un formulario que tiene SoapUI llamado \");\n      i0.ɵɵelementStart(110, \"strong\");\n      i0.ɵɵtext(111, \"properties\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(112, \"br\");\n      i0.ɵɵtext(113, \" scripting: agregar bloque de codigo sin necesidad de compilar la cual se ejecuta en memoria ya sea por \");\n      i0.ɵɵelementStart(114, \"strong\");\n      i0.ɵɵtext(115, \"groovy script o javascript\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(116, \"br\");\n      i0.ɵɵtext(117, \" Apliaciones Java: permite agregar una Apliacion desarrollada en Java \");\n      i0.ɵɵelement(118, \"br\");\n      i0.ɵɵtext(119, \" SopaUI runner : es la consola de SoapUi es ejecutar sin la interfaz de Usuario \");\n      i0.ɵɵelement(120, \"br\");\n      i0.ɵɵtext(121, \" Reportes: Evidenciar las pruebas \");\n      i0.ɵɵelement(122, \"br\")(123, \"br\");\n      i0.ɵɵelementStart(124, \"strong\");\n      i0.ɵɵtext(125, \"* Enfoque UI\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(126, \"br\")(127, \"br\");\n      i0.ɵɵtext(128, \" Workspace: \");\n      i0.ɵɵelement(129, \"br\");\n      i0.ɵɵtext(130, \" Project:\");\n      i0.ɵɵelement(131, \"br\");\n      i0.ɵɵtext(132, \" TestSuite:\");\n      i0.ɵɵelement(133, \"br\");\n      i0.ɵɵtext(134, \" TestCase:\");\n      i0.ɵɵelement(135, \"br\");\n      i0.ɵɵtext(136, \" Steps:\");\n      i0.ɵɵelement(137, \"br\")(138, \"br\");\n      i0.ɵɵelementStart(139, \"strong\");\n      i0.ɵɵtext(140, \"* Enfoque Test\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(141, \"br\")(142, \"br\");\n      i0.ɵɵtext(143, \" Functional Testing: \");\n      i0.ɵɵelement(144, \"br\");\n      i0.ɵɵtext(145, \" Load Testing: \");\n      i0.ɵɵelement(146, \"br\");\n      i0.ɵɵtext(147, \" Security Testing: \");\n      i0.ɵɵelement(148, \"br\");\n      i0.ɵɵtext(149, \" Automation Testing: \");\n      i0.ɵɵelement(150, \"br\");\n      i0.ɵɵtext(151, \" Mock Testing \");\n      i0.ɵɵelement(152, \"br\");\n      i0.ɵɵtext(153, \" Script Testing: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(154, \"td\");\n      i0.ɵɵtext(155, \" 1. Enfoques \");\n      i0.ɵɵelement(156, \"img\", 6)(157, \"br\")(158, \"br\");\n      i0.ɵɵtext(159, \" Tools \");\n      i0.ɵɵelement(160, \"br\")(161, \"img\", 7)(162, \"br\")(163, \"br\");\n      i0.ɵɵtext(164, \" UI\");\n      i0.ɵɵelement(165, \"br\")(166, \"img\", 8)(167, \"br\")(168, \"br\");\n      i0.ɵɵtext(169, \" Test\");\n      i0.ɵɵelement(170, \"br\")(171, \"img\", 9)(172, \"br\")(173, \"br\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(174, \"tr\");\n      i0.ɵɵelement(175, \"td\")(176, \"td\")(177, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(178, \"tr\");\n      i0.ɵɵelement(179, \"td\")(180, \"td\")(181, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(182, \"tr\");\n      i0.ɵɵelement(183, \"td\")(184, \"td\")(185, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(186, \"tr\");\n      i0.ɵɵelement(187, \"td\")(188, \"td\")(189, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(190, \"tr\");\n      i0.ɵɵelement(191, \"td\")(192, \"td\")(193, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(194, \"tr\");\n      i0.ɵɵelement(195, \"td\")(196, \"td\")(197, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(198, \"tr\");\n      i0.ɵɵelement(199, \"td\")(200, \"td\")(201, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(202, \"tr\");\n      i0.ɵɵelement(203, \"td\")(204, \"td\")(205, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(206, \"tr\");\n      i0.ɵɵelement(207, \"td\")(208, \"td\")(209, \"td\");\n      i0.ɵɵelementEnd()()()();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["SoapComponent","constructor","ngOnInit","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\HP\\Desktop\\juanTafur\\jugutafur\\Support-FrontEnd-Angular-full\\src\\app\\core\\components\\arquitectura\\soap\\soap.component.ts","C:\\Users\\HP\\Desktop\\juanTafur\\jugutafur\\Support-FrontEnd-Angular-full\\src\\app\\core\\components\\arquitectura\\soap\\soap.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-soap',\r\n  templateUrl: './soap.component.html',\r\n  styleUrls: ['./soap.component.scss']\r\n})\r\nexport class SoapComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <table class=\"table table-striped table-hover table-bordered align-middle\">\r\n      <thead>\r\n          <tr>\r\n              <th scope=\"col\">Referencia</th>\r\n              <th scope=\"col\">Descripcion</th>\r\n              <th scope=\"col\">Ejemplo</th>\r\n          </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td><a href=\"https://innova20.wordpress.com/2017/05/09/soa-y-soap-no-es-lo-mismo/#:~:text=Visto%20todo%20lo%20anterior%2C%20podr%C3%ADamos,de%20mensajer%C3%ADa%20de%20la%20misma.\">Diferencia entre SOA y SOAP</a></td>\r\n          <td>\r\n            La diferencia es que SOA es un paradigma de arquitectura orientada a servicios y SOAP es una tipología de mensaje.\r\n          </td>\r\n          <td></td>\r\n        </tr>\r\n        <tr>\r\n          <td>Que es Soa</td>\r\n          <td>\r\n            Services Oriented Architecture <br><br>\r\n            En un primer momento, se definieron 8 principios básicos de que debería cumplir SOA. Posteriormente, con la evolución de los servicios, se añadió la «interoperabilidad» como un nuevo principio: <br><br>\r\n            <strong>1. Contratos de servicio estandarizados:</strong> para que los servicios interactuen entre ellos, estos deben de hacerlo mediante un contrato formal que describa cada servicio y defina los términos en los que será entregada la información<br><br>\r\n            <strong>2. Servicios con bajo acoplamiento:</strong> los servicios deben ser diseñados para interactuar entre ellos de forma autónoma, evitando dependencias entre los mismos<br><br>\r\n            <strong>3. Abstracción:</strong> contarán con una parte visible del servicio y su contrato. De esta forma, los consumidores del servicio, se abstraerán de la lógica del servicio y la tecnología utilizada en el mismo<br><br>\r\n          </td>\r\n          <td>\r\n            <strong>4. Reusabilidad:</strong> todos los servicios deben ser diseñados para el soporte potencial de la reutilización de lógicas de negocio existentes. El fin de éstos servicios no es sustituir a las mismas<br><br>\r\n            <strong>5. Autonomia:</strong> la lógica del servicio debe ser autónoma y no tener dependencia de la lógica de otros servicios. Un servicio debe poder ser ejecutado de manera independiente<br><br>\r\n            <strong>6. Sin estado:</strong> los servicios deben ser diseñados para maximizar el bajo acoplamiento y su escalabilidad. El manejo del estado en los mismos podría impedir estas características<br><br>\r\n            <strong>7. Capacidad de descubrimiento:</strong> los servicios deben contener descripciones para ser descubiertos y entendidos por humanos y los consumidores del servicio, permitiéndoles emplear la lógica descrita en los mismos<br><br>\r\n            <strong>8. Composición:</strong> los servicios podrían estar a su vez compuestos por otros servicios. De esta manera se podrían definir diferentes modelos granulares de servicio. Permitiría de esta forma capas de abstración de servicios por medio de la agrupación a alto nivel de servicios complejos a bajo nivel<br><br>\r\n            <strong>9. Interoperabilidad:</strong> se trata de la capacidad de poder orquestar servicios para que trabajen entre sí. La falta de alguno de los principios anteriores, repercutiría definitivamente en este último, haciendo imposible el mismo\r\n          </td>\r\n        </tr>\r\n\r\n        <tr>\r\n          <td>SOA</td>\r\n          <td>arquitetura donse se distribuye la logica en servecios que luego son consumidos atravez de interfaces <br>\r\n              los servicios normalmente estan relacionados aunidades de negocios o areas de la compañia por su complejidadd necesitan de un\r\n              software orquestador y administrador <br>\r\n          </td>\r\n          <td><img src=\"../../../../../assets/arquitectura/soap/Soat.png\" alt=\"soap\"></td>\r\n        </tr>\r\n\r\n        <tr>\r\n          <td>Que es Soap</td>\r\n          <td>\r\n            Simple object Access Protocol <br><br>\r\n            formato de mensajería más compatible con el protocolo para su uso con servicios Web XML <br>\r\n          </td>\r\n          <td></td>\r\n        </tr>\r\n\r\n          <tr>\r\n              <td><strong><a href=\"https://www.youtube.com/watch?v=9gmY7z9ev0U&list=PL0VBNmf13bYCfhmksjoIxxszW4ix-Ol59\">SOAP</a></strong><br><br><br>\r\n                  Herramienta para analizar Web Services\r\n              </td>\r\n              <td>\r\n                  SoapUI: fundada en 2005 por smartUI, open source, enfocada en 3 enfoques <br><br>\r\n                  <strong>* Enfoque Tools</strong><br><br>\r\n                  properties: Poder obtener o grabar datos en un formulario que tiene SoapUI llamado <strong>properties</strong><br>\r\n                  scripting: agregar bloque de codigo sin necesidad de compilar la cual se ejecuta en memoria ya sea por <strong>groovy script o javascript</strong> <br>\r\n                  Apliaciones Java: permite agregar una Apliacion desarrollada en Java <br>\r\n                  SopaUI runner : es la consola de SoapUi es ejecutar sin la interfaz de Usuario <br>\r\n                  Reportes: Evidenciar las pruebas <br><br>\r\n                  <strong>* Enfoque UI</strong><br><br>\r\n                  Workspace: <br>\r\n                  Project:<br>\r\n                  TestSuite:<br>\r\n                  TestCase:<br>\r\n                  Steps:<br><br>\r\n                  <strong>* Enfoque Test</strong><br><br>\r\n                  Functional Testing:  <br>\r\n                  Load Testing: <br>\r\n                  Security Testing: <br>\r\n                  Automation Testing: <br>\r\n                  Mock Testing <br>\r\n                  Script Testing:\r\n              </td>\r\n              <td>\r\n                  1. Enfoques\r\n                  <img\r\n                  src=\"../../../../../assets/arquitectura/soap/SoapUI.PNG\"\r\n                  alt=\"Enfoques\"\r\n                  title=\"Enfoques\"><br><br>\r\n                  Tools <br>\r\n                  <img\r\n                  src=\"../../../../../assets/arquitectura/soap/SoapUI1.PNG\"\r\n                  alt=\"tools\"\r\n                  title=\"tools\"><br><br>\r\n                  UI<br>\r\n                  <img\r\n                  src=\"../../../../../assets/arquitectura/soap/SoapUI2.PNG\"\r\n                  alt=\"UI\"\r\n                  title=\"UI\"><br><br>\r\n                  Test<br>\r\n                  <img\r\n                  src=\"../../../../../assets/arquitectura/soap/SoapUI3.PNG\"\r\n                  alt=\"Test\"\r\n                  title=\"Test\"><br><br>\r\n              </td>\r\n          </tr>\r\n\r\n          <tr>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n          </tr>\r\n\r\n          <tr>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n          </tr>\r\n\r\n          <tr>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n          </tr>\r\n          <tr>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n          </tr>\r\n\r\n          <tr>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n          </tr>\r\n          <tr>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n          </tr>\r\n\r\n          <tr>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n          </tr>\r\n          <tr>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n          </tr>\r\n\r\n          <tr>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n          </tr>\r\n      </tbody>\r\n  </table>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}