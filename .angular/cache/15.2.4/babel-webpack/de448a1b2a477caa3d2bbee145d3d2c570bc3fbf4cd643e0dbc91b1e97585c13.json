{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class GormComponent {}\nGormComponent.ɵfac = function GormComponent_Factory(t) {\n  return new (t || GormComponent)();\n};\nGormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: GormComponent,\n  selectors: [[\"app-gorm\"]],\n  decls: 71,\n  vars: 0,\n  consts: [[1, \"container\"], [1, \"table\", \"table-striped\", \"table-hover\", \"table-bordered\", \"align-middle\"], [\"scope\", \"col\"]],\n  template: function GormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"table\", 1)(2, \"thead\")(3, \"tr\")(4, \"th\", 2);\n      i0.ɵɵtext(5, \"Referencia\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"th\", 2);\n      i0.ɵɵtext(7, \"Descripcion\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"th\", 2);\n      i0.ɵɵtext(9, \"Ejemplo\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(10, \"tbody\")(11, \"tr\")(12, \"td\")(13, \"strong\");\n      i0.ɵɵtext(14, \"Grom Object Relational Mapping\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"td\");\n      i0.ɵɵtext(16, \" GORM es objeto aplicaci\\u00F3n Grails \\u2018relacional cartograf\\u00EDa (ORM). Bajo el cap\\u00F3 se utiliza Hibernate 3 (una soluci\\u00F3n muy popular y flexible ORM c\\u00F3digo abierto) y gracias a la naturaleza din\\u00E1mica de Groovy con su tipificaci\\u00F3n est\\u00E1tica y din\\u00E1mica, junto con la convenci\\u00F3n de Grails, hay mucho menos configuraci\\u00F3n involucrada en la creaci\\u00F3n del dominio Grails clases \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"tr\");\n      i0.ɵɵelement(19, \"td\");\n      i0.ɵɵelementStart(20, \"td\");\n      i0.ɵɵtext(21, \"Un ORM es la forma de abstraer la BD en un objeto, siendo una capa de abstraccion que te permite trabajar con objetos \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(22, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"tr\");\n      i0.ɵɵelement(24, \"td\")(25, \"td\")(26, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"tr\");\n      i0.ɵɵelement(28, \"td\")(29, \"td\")(30, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"tr\");\n      i0.ɵɵelement(32, \"td\")(33, \"td\")(34, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"tr\");\n      i0.ɵɵelement(36, \"td\")(37, \"td\")(38, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(39, \"tr\");\n      i0.ɵɵelement(40, \"td\")(41, \"td\")(42, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(43, \"tr\");\n      i0.ɵɵelement(44, \"td\")(45, \"td\")(46, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(47, \"tr\");\n      i0.ɵɵelement(48, \"td\")(49, \"td\")(50, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(51, \"tr\");\n      i0.ɵɵelement(52, \"td\")(53, \"td\")(54, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(55, \"tr\");\n      i0.ɵɵelement(56, \"td\")(57, \"td\")(58, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(59, \"tr\");\n      i0.ɵɵelement(60, \"td\")(61, \"td\")(62, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(63, \"tr\");\n      i0.ɵɵelement(64, \"td\")(65, \"td\")(66, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(67, \"tr\");\n      i0.ɵɵelement(68, \"td\")(69, \"td\")(70, \"td\");\n      i0.ɵɵelementEnd()()()();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";AAOA,OAAM,MAAOA,aAAa;;mBAAbA,aAAa;AAAA;;QAAbA,aAAa;EAAAC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCP1BC,8BAAuB;MAISA,0BAAU;MAAAA,iBAAK;MAC/BA,6BAAgB;MAAAA,2BAAW;MAAAA,iBAAK;MAChCA,6BAAgB;MAAAA,uBAAO;MAAAA,iBAAK;MAGpCA,8BAAO;MAEaA,+CAA8B;MAAAA,iBAAS;MACnDA,2BAAI;MACAA,4bACJ;MAAAA,iBAAK;MACLA,sBAAS;MACbA,iBAAK;MAELA,2BAAI;MACAA,sBAAS;MACTA,2BAAI;MAAAA,uIAAsH;MAAAA,iBAAK;MAC/HA,sBAAS;MACbA,iBAAK;MACLA,2BAAI;MACAA,sBAAS;MAGbA,iBAAK;MAELA,2BAAI;MACAA,sBAAS;MAGbA,iBAAK;MACLA,2BAAI;MACAA,sBAAS;MAGbA,iBAAK;MAELA,2BAAI;MACAA,sBAAS;MAGbA,iBAAK;MACLA,2BAAI;MACAA,sBAAS;MAGbA,iBAAK;MAELA,2BAAI;MACAA,sBAAS;MAGbA,iBAAK;MACLA,2BAAI;MACAA,sBAAS;MAGbA,iBAAK;MAELA,2BAAI;MACAA,sBAAS;MAGbA,iBAAK;MACLA,2BAAI;MACAA,sBAAS;MAGbA,iBAAK;MAELA,2BAAI;MACAA,sBAAS;MAGbA,iBAAK;MACLA,2BAAI;MACAA,sBAAS;MAGbA,iBAAK;MAELA,2BAAI;MACAA,sBAAS;MAGbA,iBAAK","names":["GormComponent","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\HP\\Desktop\\JuanTafur\\Support-FrontEnd-Angular-full\\src\\app\\core\\components\\librerias\\gorm\\gorm.component.ts","C:\\Users\\HP\\Desktop\\JuanTafur\\Support-FrontEnd-Angular-full\\src\\app\\core\\components\\librerias\\gorm\\gorm.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-gorm',\r\n  templateUrl: './gorm.component.html',\r\n  styleUrls: ['./gorm.component.scss']\r\n})\r\nexport class GormComponent  {\r\n\r\n\r\n}\r\n","<div class=\"container\">\r\n    <table class=\"table table-striped table-hover table-bordered align-middle\">\r\n        <thead>\r\n            <tr>\r\n                <th scope=\"col\">Referencia</th>\r\n                <th scope=\"col\">Descripcion</th>\r\n                <th scope=\"col\">Ejemplo</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr>\r\n                <td><strong>Grom Object Relational Mapping</strong></td>\r\n                <td>\r\n                    GORM es objeto aplicación Grails ‘relacional cartografía (ORM). Bajo el capó se utiliza Hibernate 3 (una solución muy popular y flexible ORM código abierto) y gracias a la naturaleza dinámica de Groovy con su tipificación estática y dinámica, junto con la convención de Grails, hay mucho menos configuración involucrada en la creación del dominio Grails clases\r\n                </td>\r\n                <td></td>\r\n            </tr>\r\n                \r\n            <tr>\r\n                <td></td>\r\n                <td>Un ORM es la forma de abstraer la BD en un objeto, siendo una capa de abstraccion que te permite trabajar con objetos </td>\r\n                <td></td>\r\n            </tr>\r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n                \r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n                \r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n                \r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n                \r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n                \r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n                \r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}