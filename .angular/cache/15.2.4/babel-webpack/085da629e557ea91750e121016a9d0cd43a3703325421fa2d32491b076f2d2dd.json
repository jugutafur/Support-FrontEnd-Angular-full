{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class JavaServerFacesComponent {\n  constructor() {\n    this.busqueda = 0;\n    this.abrellave = \"{\";\n    this.cierrallave = \"}\";\n    this.abreDiamante = \"<\";\n    this.cierraDiamante = \">\";\n    this.abreParentesis = \"(\";\n    this.cierraParentesis = \")\";\n    this.abreCuadro = \"[\";\n    this.cierraCuadro = \"]\";\n  }\n}\nJavaServerFacesComponent.ɵfac = function JavaServerFacesComponent_Factory(t) {\n  return new (t || JavaServerFacesComponent)();\n};\nJavaServerFacesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: JavaServerFacesComponent,\n  selectors: [[\"app-java-server-faces\"]],\n  decls: 719,\n  vars: 26,\n  consts: [[1, \"container\"], [1, \"table\", \"table-striped\", \"table-hover\", \"table-bordered\", \"align-middle\"], [\"scope\", \"col\"], [\"href\", \"https://dzone.com/articles/named-vs-managedbean-laquo-glenware\"], [\"href\", \"https://www.adictosaltrabajo.com/2013/02/08/cdi-weld-arquilian/\"], [\"src\", \"../../../../../assets/framework/JavaServerFaces/EventsAndListeners.png\", \"alt\", \"EventsAndListeners\", \"title\", \"EventsAndListeners\"], [\"href\", \"https://www.youtube.com/watch?v=dZnXn-ecwp8&t=29s\"], [\"src\", \"../../../../../assets/framework/JavaServerFaces/EstructuraJSF.png\", \"alt\", \"EstructuraJSF\", \"title\", \"EstructuraJSF\"], [\"src\", \"../../../../../assets/framework/JavaServerFaces/ConfiguracionJSF.png\", \"alt\", \"ConfiguracionJSF\", \"title\", \"ConfiguracionJSF\"], [\"src\", \"../../../../../assets/framework/JavaServerFaces/JSF-1MapeoDeJavaBeans.png\", \"alt\", \"1MapeoDeJavaBeans\", \"title\", \"1MapeoDeJavaBeans\"], [\"href\", \"https://desarrolloweb.com/articulos/831.php\"], [\"src\", \"../../../../../assets/framework/JavaServerFaces/Servlet.png\", \"alt\", \"Servlet\", \"title\", \"Servlet\"], [\"src\", \"../../../../../assets/framework/JavaServerFaces/JSF1.png\", \"alt\", \"JSF1\", \"title\", \"JSF1\"], [\"src\", \"../../../../../assets/framework/JavaServerFaces/JSFArquitectura.png\", \"alt\", \"JSFArquitectura\", \"title\", \"JSFArquitectura\"], [\"src\", \"../../../../../assets/framework/JavaServerFaces/JSFCicloVida0.png\", \"alt\", \"JSFCicloVida0\", \"title\", \"JSFCicloVida0\"], [\"src\", \"../../../../../assets/framework/JavaServerFaces/JSFCicloVida.png\", \"alt\", \"JSFCicloVida\", \"title\", \"JSFCicloVida\"], [\"src\", \"../../../../../assets/framework/JavaServerFaces/JSFCicloVida2.png\", \"alt\", \"JSFCicloVida2\", \"title\", \"JSFCicloVida2\"], [\"src\", \"../../../../../assets/framework/JavaServerFaces/JSFFacesContext.png\", \"alt\", \"JSFFacesContext\", \"title\", \"JSFFacesContext\"], [\"src\", \"../../../../../assets/framework/JavaServerFaces/JSFGeneral.png\", \"alt\", \"JSFGeneral\", \"title\", \"JSFGeneral\"], [\"src\", \"../../../../../assets/framework/JavaServerFaces/SettingJSF.png\", \"alt\", \"SettingJSF\", \"title\", \"SettingJSF\"], [\"src\", \"../../../../../assets/framework/JavaServerFaces/JSFManagedBean.png\", \"alt\", \"JSFManagedBean\", \"title\", \"JSFManagedBean\"], [\"src\", \"../../../../../assets/framework/JavaServerFaces/JSFManagedBean2.png\", \"alt\", \"JSFManagedBean2\", \"title\", \"JSFManagedBean2\"], [\"src\", \"../../../../../assets/framework/JavaServerFaces/Scope.png\", \"alt\", \"Scope\", \"title\", \"Scope\"], [\"src\", \"../../../../../assets/framework/JavaServerFaces/JSFScope.png\", \"alt\", \"JSFScope\", \"title\", \"JSFScope\"], [\"src\", \"../../../../../assets/framework/JavaServerFaces/JSFNavegacionExplicito.png\", \"alt\", \"JSFNavegacionExplicito\", \"title\", \"JSFNavegacionExplicito\"], [\"src\", \"../../../../../assets/framework/JavaServerFaces/JSFNavegacionImplicito.png\", \"alt\", \"JSFNavegacionImplicito\", \"title\", \"JSFNavegacionImplicito\"], [\"src\", \"../../../../../assets/librerias/primefaces/libreriasParaJSF.png\", \"alt\", \"libreriasParaJSF\", \"title\", \"libreriasParaJSF\"], [\"src\", \"../../../../../assets/framework/JavaServerFaces/libreriasJSF.png\", \"alt\", \"libreriasJSF\", \"title\", \"libreriasJSF\"], [\"href\", \"http://codejavu.blogspot.com/2017/12/componentes-basicos-java-server-pages.html\"], [\"href\", \"https://www.adictosaltrabajo.com/2016/06/10/facelets-entendiendo-los-templates-de-jsf/\"], [\"src\", \"../../../../../assets/framework/JavaServerFaces/facelets.png\", \"alt\", \"facelets\", \"title\", \"facelets\"], [\"src\", \"../../../../../assets/framework/JavaServerFaces/Etiquetas.png\", \"alt\", \"Etiquetas\", \"title\", \"Etiquetas\"], [\"href\", \"https://stackoverflow.com/questions/17544141/purpose-of-the-houtputlabel-and-its-for-attribute\"]],\n  template: function JavaServerFacesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"table\", 1)(2, \"thead\")(3, \"tr\")(4, \"th\", 2);\n      i0.ɵɵtext(5, \"Referencia\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"th\", 2);\n      i0.ɵɵtext(7, \"Descripcion\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"th\", 2);\n      i0.ɵɵtext(9, \"Ejemplo\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(10, \"tbody\")(11, \"tr\")(12, \"td\");\n      i0.ɵɵtext(13, \"Defenicion JSF\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"td\");\n      i0.ɵɵtext(15, \"La tecnologia JavaServerFaces es un \");\n      i0.ɵɵelementStart(16, \"strong\");\n      i0.ɵɵtext(17, \" framewok de interfaz de componentes de usuario de lado del servidor\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(18, \" para las aplicaciones web basadas en la tecnologia java, que semplifica el desarrollo de la interfaz de usuario, logrando aspectos de dise\\u00F1o mas elegante para la creacion de aplicaciones JSF con XHTML. \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"tr\")(21, \"td\")(22, \"strong\")(23, \"a\", 3);\n      i0.ɵɵtext(24, \" CDI \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(25, \"br\")(26, \"br\");\n      i0.ɵɵelementStart(27, \"a\", 4);\n      i0.ɵɵtext(28, \"Ver info superImportante\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(29, \"td\");\n      i0.ɵɵtext(30, \" La especificaci\\u00F3n CDI Beans \\u2013 (CDI: Contexts and Dependency Injection), define el marco de trabajo de inyecci\\u00F3n de dependencias utilizado de forma est\\u00E1ndar en la plataforma Java EE siendo un elemento fundamental de la misma. Su funcionamiento y cometido es equivalente al sistema de inyecci\\u00F3n de dependencias de Spring. \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"td\")(32, \"strong\");\n      i0.ɵɵtext(33, \"@Named\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(34, \" //para declarar un Bean en lugar de \");\n      i0.ɵɵelementStart(35, \"strong\");\n      i0.ɵɵtext(36, \"@ManagedBean\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(37, \" ya que esta ultima esta en desuso \");\n      i0.ɵɵelement(38, \"br\");\n      i0.ɵɵtext(39, \" Estas anotaciones proporcionan inyecciones de dependencia \");\n      i0.ɵɵelement(40, \"br\")(41, \"br\");\n      i0.ɵɵelementStart(42, \"strong\");\n      i0.ɵɵtext(43, \"@ManagedBean\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(44, \" \\u2013 javax.faces.bean.ManagedBean \\u2013 gestionado por contenedor JSF \");\n      i0.ɵɵelement(45, \"br\");\n      i0.ɵɵelementStart(46, \"strong\");\n      i0.ɵɵtext(47, \"@Named\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(48, \" \\u2013 javax.faces.bean \\u2013 Bean CDI administrado por el servidor de aplicaciones \");\n      i0.ɵɵelement(49, \"br\")(50, \"br\");\n      i0.ɵɵtext(51, \" Esto significa que los beans @Named son visibles para todo el contenedor JEE, mientras que @ManagedBean solo son visibles para el contenedor JSF. El problema de la visibilidad se cubre en esta tabla: \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(52, \"tr\");\n      i0.ɵɵelement(53, \"td\");\n      i0.ɵɵelementStart(54, \"td\");\n      i0.ɵɵtext(55, \" * \");\n      i0.ɵɵelementStart(56, \"strong\");\n      i0.ɵɵtext(57, \"Componentes de interfaz de usuario IU\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(58, \"br\");\n      i0.ɵɵtext(59, \" - Componetes que generan datos \");\n      i0.ɵɵelement(60, \"br\");\n      i0.ɵɵtext(61, \" -- No editables \");\n      i0.ɵɵelement(62, \"br\");\n      i0.ɵɵtext(63, \" -- editables \");\n      i0.ɵɵelement(64, \"br\")(65, \"br\");\n      i0.ɵɵtext(66, \" - Componentes que generan acciones \");\n      i0.ɵɵelement(67, \"br\")(68, \"br\");\n      i0.ɵɵtext(69, \" * \");\n      i0.ɵɵelementStart(70, \"strong\");\n      i0.ɵɵtext(71, \"Un modelo de renderizado\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(72, \"br\")(73, \"br\");\n      i0.ɵɵtext(74, \" * \");\n      i0.ɵɵelementStart(75, \"strong\");\n      i0.ɵɵtext(76, \"Un modelo para el manejo de eventos y listeners\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(77, \"br\");\n      i0.ɵɵtext(78, \" JSf Maneja 2 tipos de eventos \");\n      i0.ɵɵelement(79, \"br\")(80, \"br\");\n      i0.ɵɵtext(81, \" -Eventos de Aplicacion \");\n      i0.ɵɵelement(82, \"br\");\n      i0.ɵɵtext(83, \" --Generados por componentes UI \");\n      i0.ɵɵelement(84, \"br\");\n      i0.ɵɵtext(85, \" --Hay 2 tipos: ActionEvent o Value Change Event \");\n      i0.ɵɵelement(86, \"br\")(87, \"br\");\n      i0.ɵɵtext(88, \" -Eventos de Ciclo de Vida \");\n      i0.ɵɵelement(89, \"br\");\n      i0.ɵɵtext(90, \" --Se clasifican en Eventos de Fase y Eventos de Sistema \");\n      i0.ɵɵelement(91, \"br\")(92, \"br\");\n      i0.ɵɵtext(93, \" * \");\n      i0.ɵɵelementStart(94, \"strong\");\n      i0.ɵɵtext(95, \"Un modelo de conversion y validacion de datos\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(96, \"br\")(97, \"br\");\n      i0.ɵɵtext(98, \" * \");\n      i0.ɵɵelementStart(99, \"strong\");\n      i0.ɵɵtext(100, \"Un modelo para el soporte Ajax\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(101, \"br\")(102, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(103, \"td\");\n      i0.ɵɵelement(104, \"img\", 5)(105, \"br\")(106, \"br\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(107, \"tr\")(108, \"td\")(109, \"a\", 6);\n      i0.ɵɵtext(110, \"Info proyecto JSF\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(111, \"br\")(112, \"br\");\n      i0.ɵɵelementStart(113, \"strong\");\n      i0.ɵɵtext(114, \"Todo proyecto JSF debe tener un archivo de web.xml \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(115, \" EN el encontramos los servlet y mas importante en los tags de servlet name y mapping encontramos el servlet el \");\n      i0.ɵɵelementStart(116, \"strong\");\n      i0.ɵɵtext(117, \"Faces Servlet\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(118, \" de esta manera indicamos que nuestra aplicacion usa JSF ademas \");\n      i0.ɵɵelementStart(119, \"strong\");\n      i0.ɵɵtext(120, \"que debemos agregar la dependencia necesario en el pom.xml y build.gradle \");\n      i0.ɵɵelement(121, \"br\")(122, \"br\");\n      i0.ɵɵtext(123, \" como visto en la imagen 2\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(124, \"td\");\n      i0.ɵɵtext(125, \" * Es una especificacion, parte de Java EE que define un marco de trabajo MVC pare el desarrolo de aplicaciones web basado en un modelo de componentes de interfaz de usuario del lado del servidor \");\n      i0.ɵɵelement(126, \"br\");\n      i0.ɵɵtext(127, \" * JSF nacio en el 2004 por SUN pensado para la parte web. \");\n      i0.ɵɵelement(128, \"br\");\n      i0.ɵɵtext(129, \" * Permite el uso de JavaScript \");\n      i0.ɵɵelement(130, \"br\");\n      i0.ɵɵtext(131, \" * Resuelve Validaciones, Conversiones, Mensajes de error e Internacionalizacion \");\n      i0.ɵɵelement(132, \"br\");\n      i0.ɵɵtext(133, \" * Desarrollo de componentes propios \");\n      i0.ɵɵelement(134, \"br\");\n      i0.ɵɵtext(135, \" * La presentacion esta en JSP y XHTML \");\n      i0.ɵɵelement(136, \"br\");\n      i0.ɵɵtext(137, \" * \");\n      i0.ɵɵelementStart(138, \"strong\");\n      i0.ɵɵtext(139, \"Programacion orientada a eventos\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(140, \"br\");\n      i0.ɵɵtext(141, \" * \");\n      i0.ɵɵelementStart(142, \"strong\");\n      i0.ɵɵtext(143, \"Etiquetas enriquezidas \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(144, \"por lado del servidor para que en el lado del cliente tenga \");\n      i0.ɵɵelementStart(145, \"strong\");\n      i0.ɵɵtext(146, \"HTML\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(147, \" * \");\n      i0.ɵɵelementStart(148, \"strong\");\n      i0.ɵɵtext(149, \"Flujos de navegacion\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(150, \" en base a cadenas de control. Estos flujos es posible definirlos desde java o con un archivo llamado \");\n      i0.ɵɵelementStart(151, \"strong\");\n      i0.ɵɵtext(152, \"faces-config\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(153, \" siendo esta ultima mejor ya que en un solo archivo se centraliza la navegacion de la aplicacion \");\n      i0.ɵɵelement(154, \"br\");\n      i0.ɵɵtext(155, \" * \");\n      i0.ɵɵelementStart(156, \"strong\");\n      i0.ɵɵtext(157, \"Soporte de peticiones asincronas (AJAX)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(158, \" todos los frameworks que programan aplicaciones web como spring web y JSF tienen mejorado esta parte de comunicacion entre el servidor y el cliente \");\n      i0.ɵɵelement(159, \"br\");\n      i0.ɵɵtext(160, \" * JSF es la tecnologia que avala \");\n      i0.ɵɵelementStart(161, \"strong\");\n      i0.ɵɵtext(162, \"Oracle\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(163, \" para las apliaciones web es por ello que este framework tiene soporte nativo para \");\n      i0.ɵɵelementStart(164, \"strong\");\n      i0.ɵɵtext(165, \"WebSphere y GlassFish \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(166, \"lo que significa que no es necesario agregar librerias a nuestro servidor ya que este ya las contiene \");\n      i0.ɵɵelement(167, \"br\");\n      i0.ɵɵtext(168, \" * facil integracion con standalone en Apache Tomcat solo es necesario agregar las librerias necesarias \");\n      i0.ɵɵelement(169, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(170, \"td\");\n      i0.ɵɵtext(171, \" 1. \");\n      i0.ɵɵelement(172, \"img\", 7)(173, \"br\")(174, \"br\");\n      i0.ɵɵtext(175, \" 2. \");\n      i0.ɵɵelement(176, \"img\", 8)(177, \"br\")(178, \"br\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(179, \"tr\")(180, \"td\");\n      i0.ɵɵtext(181, \"Archivos\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(182, \"td\")(183, \"strong\");\n      i0.ɵɵtext(184, \"faces-config.xml (META-INF) \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(185, \"br\");\n      i0.ɵɵtext(186, \" * Contine las reglas de navegacion \");\n      i0.ɵɵelement(187, \"br\");\n      i0.ɵɵtext(188, \" * la configuracion de Internacionalizacion \");\n      i0.ɵɵelement(189, \"br\");\n      i0.ɵɵtext(190, \" * Antes en JSF-1 este archivo se mapeaban los beans ademas de la ruta y su Scope \");\n      i0.ɵɵelement(191, \"br\");\n      i0.ɵɵelementStart(192, \"strong\");\n      i0.ɵɵtext(193, \"web.xml (WEB-INF)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(194, \"br\");\n      i0.ɵɵtext(195, \" * Contiene los Servlets (name y el mapping) \");\n      i0.ɵɵelement(196, \"br\");\n      i0.ɵɵtext(197, \" * El archivo por el cual arranca la aplicacion (welcome file list)\");\n      i0.ɵɵelement(198, \"br\");\n      i0.ɵɵelementStart(199, \"strong\");\n      i0.ɵɵtext(200, \"Pom.xml (Project Object Model)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(201, \"br\");\n      i0.ɵɵtext(202, \" * Contiene la inyeccion de todas las dependencias necesarias para que funcione el proyecto \");\n      i0.ɵɵelement(203, \"br\");\n      i0.ɵɵtext(204, \" * La version del proyecto \");\n      i0.ɵɵelement(205, \"br\");\n      i0.ɵɵtext(206, \" * El nombre del proyecto \");\n      i0.ɵɵelement(207, \"br\");\n      i0.ɵɵtext(208, \" * El paquete que dara por salida \");\n      i0.ɵɵelement(209, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(210, \"td\");\n      i0.ɵɵtext(211, \" En versiones JSF-1 \");\n      i0.ɵɵelement(212, \"img\", 9)(213, \"br\")(214, \"br\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(215, \"tr\")(216, \"td\");\n      i0.ɵɵtext(217, \"Java Server Faces\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(218, \"td\");\n      i0.ɵɵtext(219, \" Java server faces es un framework de aplicaciones web basado en java, permite simplificar la construcci\\u00F3n de interfaces de usuario para aplicaciones web mediante el uso de componentes gr\\u00E1ficos y la vinculaci\\u00F3n del patr\\u00F3n MVC \");\n      i0.ɵɵelement(220, \"br\")(221, \"br\");\n      i0.ɵɵtext(222, \" Dentro de las caracteristicas descritas en la segunda imagen se menciona una capa superior \");\n      i0.ɵɵelementStart(223, \"strong\");\n      i0.ɵɵtext(224, \"Java API los servlet\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(225, \" esto quiere decir que todo lo que hagamos con Java para la web va a emplear servlets en segundo plano, lo que hagamos con Spring, JSF etc.. \");\n      i0.ɵɵelement(226, \"br\")(227, \"br\");\n      i0.ɵɵelementStart(228, \"strong\");\n      i0.ɵɵtext(229, \" JSF es una especificaci\\u00F3n o framework que hace parte de JEE que define un marco de trabajo MVC para el desarrollo de aplicaciones web basado en un modelo de componentes de interzas de usuario del lado del servidor \");\n      i0.ɵɵelement(230, \"br\")(231, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(232, \"strong\");\n      i0.ɵɵtext(233, \"JSF\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(234, \": Java Server Faces usa JSP, una de las diferencias entre JSP y JSF es que JSF todo son formularios y JSP son link \");\n      i0.ɵɵelementStart(235, \"strong\");\n      i0.ɵɵtext(236, \"para el redireccionamiento\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(237, \"br\");\n      i0.ɵɵelementStart(238, \"strong\");\n      i0.ɵɵtext(239, \"JSP\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(240, \": Java Server Pages = Es una tecnologia orientada a crear paginas web con programacion Java en el Servidor, estas estan compuetas con HTML/XML mezclado con etiquetas especiales para programar scripts de servidor en sintaxis java \");\n      i0.ɵɵelement(241, \"br\")(242, \"br\");\n      i0.ɵɵelementStart(243, \"strong\");\n      i0.ɵɵtext(244, \"ASP\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(245, \": Active Server Pages = Es una plataforma de desarrollo creada por Microsoft \");\n      i0.ɵɵelementStart(246, \"strong\");\n      i0.ɵɵtext(247, \"usado para el desarrollo de las tecnologias de servidor\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(248, \" lo anterior significa que lo que desarrollemos en PHP, ASP, JSF, JSP son paginas que estan dentro del servidor y que son dinamicas es decir solo van a generar HTML para que el navegador interprete y renderize \");\n      i0.ɵɵelementStart(249, \"strong\");\n      i0.ɵɵtext(250, \"Solo con la informacion necesaria\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(251, \"br\")(252, \"br\");\n      i0.ɵɵelementStart(253, \"strong\");\n      i0.ɵɵtext(254, \"ASP.NET\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(255, \": no es lo mismo ASP que ASP.NET, lo segundo es la evolucion de lo primero ademas ASP solo permite programar en Visual Basic en cambio ASP.NET permite varios lenguajes como C# \");\n      i0.ɵɵelement(256, \"br\")(257, \"br\");\n      i0.ɵɵtext(258, \" Tal y como ve\\u00EDamos en la sesi\\u00F3n anterior, y defini\\u00E9ndolo de una forma muy simple, JSF es un framework orientado a recoger datos del usuario, pasarlos a la capa del modelo de la aplicaci\\u00F3n, realizar las acciones correspondientes en la aplicaci\\u00F3n y pintar los datos resultantes. Todo ello en un entorno web, con peticiones HTTP y p\\u00E1ginas HTML. \");\n      i0.ɵɵelement(259, \"br\")(260, \"br\");\n      i0.ɵɵtext(261, \" Los datos se introducen y se muestran en forma de texto, y se almacenan en un formato dependiente de la aplicaci\\u00F3n. Por ejemplo, una fecha se puede representar con un formato dd-mm-aaaa mientras que su representaci\\u00F3n interna puede ser un objeto de la clase java.util.Date . Para realizar esta conversi\\u00F3n entre el texto y el formato interno, se asocian al componente validadores y conversores . ver info \");\n      i0.ɵɵelementStart(262, \"a\", 10);\n      i0.ɵɵtext(263, \"Link 1\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(264, \"td\");\n      i0.ɵɵtext(265, \" 1. \");\n      i0.ɵɵelement(266, \"img\", 11)(267, \"br\")(268, \"br\");\n      i0.ɵɵtext(269, \" 2. \");\n      i0.ɵɵelement(270, \"img\", 12)(271, \"br\")(272, \"br\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(273, \"tr\")(274, \"td\");\n      i0.ɵɵtext(275, \"Arquitectura\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(276, \"td\");\n      i0.ɵɵtext(277, \" los clientes hacen request estas entran a los controladores(los Managed Beans) estos delegan roles a los modelos, un modelo detecta y devuelve el controlador el controlador genera una vista y esta vista va a estar amarrada al modelo para dar finalmente un response al cliente \");\n      i0.ɵɵelement(278, \"br\")(279, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(280, \"td\");\n      i0.ɵɵelement(281, \"img\", 13)(282, \"br\")(283, \"br\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(284, \"tr\")(285, \"td\");\n      i0.ɵɵtext(286, \"Ciclo de vida\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(287, \"td\");\n      i0.ɵɵtext(288, \" Empieza desde el Faces Request hasta el Faces Response \");\n      i0.ɵɵelement(289, \"br\")(290, \"br\");\n      i0.ɵɵtext(291, \" Restore view en esta etapa se restaura el arbol de componentes botones, inputs , form etc.. una vez obtenido el arbol de componetes se procesan todos los valores a sociados a los mismos, se validan datos actualiza los modelos este paso pasa primero por los controladores finalmente invoka la aplicacion llamando al gestor que es el \");\n      i0.ɵɵelementStart(292, \"strong\");\n      i0.ɵɵtext(293, \"Java Bean \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(294, \"Este se encarga de traer todos los componentes asociados en conjunto con la informacion que viene los objetos para renderizarla en un navagador por medio de un servidor que para nuestro caso es Tomcat \");\n      i0.ɵɵelement(295, \"br\")(296, \"br\");\n      i0.ɵɵtext(297, \" Primero dectecta el evento de la persona que esta interactuando en la pagina y por medio del protocolo HTTP crea el FacesRequest llega al motor JSF recupera la informacion atraves de los Beans, crea el arbol de componentes genera el archivo xml con los datos lo lleva a nuestra pagina a nuestro navegador y atraves del DOM y con ayuda de JavaScript y JavaServerFaces pinta la informacion \");\n      i0.ɵɵelement(298, \"br\")(299, \"br\");\n      i0.ɵɵelementStart(300, \"strong\");\n      i0.ɵɵtext(301, \"Un servlet de la clase javax.faces.webapp.FacesServlet es el motor de cualquier aplicaci\\u00F3n JSF\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(302, \"br\")(303, \"br\")(304, \"img\", 14)(305, \"br\")(306, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(307, \"td\");\n      i0.ɵɵtext(308, \" 1. \");\n      i0.ɵɵelement(309, \"img\", 15)(310, \"br\")(311, \"br\");\n      i0.ɵɵtext(312, \" 2. \");\n      i0.ɵɵelement(313, \"img\", 16)(314, \"br\")(315, \"br\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(316, \"tr\")(317, \"td\");\n      i0.ɵɵtext(318, \"Facelets Context\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(319, \"td\")(320, \"strong\");\n      i0.ɵɵtext(321, \"P.E Process Event parametros del Envarioment \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(322, \" los facelets son templates de html con xml = xhtml que tiene tags de contenido dinamico quien llena este contenido es el cliente \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(323, \"td\");\n      i0.ɵɵelement(324, \"img\", 17)(325, \"br\")(326, \"br\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(327, \"tr\")(328, \"td\");\n      i0.ɵɵtext(329, \"Funcionamiento General\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(330, \"td\");\n      i0.ɵɵtext(331, \" Empieza por el faces request luego se crea el FacesServlet \");\n      i0.ɵɵelementStart(332, \"strong\");\n      i0.ɵɵtext(333, \"declarado en el archivo web.xml \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(334, \"se genera su FacesContext este crea una instancia unica por cada request luego FacesServlet delega el procesamiento al ciclo de vida luego cada fase puede acceder y modificar su contenido en el FacesContext luego envia la respesta al FacesServlet y este ultimo solicita al FacesContext ejecutar la fase de render response para finalmente generar el Faces response \");\n      i0.ɵɵelement(335, \"br\")(336, \"br\");\n      i0.ɵɵtext(337, \" Ahora tener en cuenta que en el archivo de Web.xml \");\n      i0.ɵɵelementStart(338, \"strong\");\n      i0.ɵɵtext(339, \"Web Deployment Definition (es un fichero en el formato est\\u00E1ndar para aplicaciones web con servlets, que contiene la configuraci\\u00F3n global a toda(s) la(s) aplicacion(es) )\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(340, \" Se encuentra definidos los servlets faces : \");\n      i0.ɵɵelement(341, \"br\")(342, \"br\");\n      i0.ɵɵtext(343);\n      i0.ɵɵelement(344, \"br\");\n      i0.ɵɵtext(345);\n      i0.ɵɵelement(346, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(347, \"td\");\n      i0.ɵɵelement(348, \"img\", 18)(349, \"br\")(350, \"br\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(351, \"tr\")(352, \"td\");\n      i0.ɵɵtext(353, \"Anotaciones\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(354, \"td\");\n      i0.ɵɵtext(355, \" los controllers son llamados de diferente manera dependiendo del framewok usado \");\n      i0.ɵɵelement(356, \"br\")(357, \"br\");\n      i0.ɵɵtext(358, \" los controladores en JSF son \");\n      i0.ɵɵelementStart(359, \"strong\");\n      i0.ɵɵtext(360, \"managed Beans\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(361, \"br\");\n      i0.ɵɵtext(362, \" los controladores en Spring son \");\n      i0.ɵɵelementStart(363, \"strong\");\n      i0.ɵɵtext(364, \"Controllers\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(365, \"br\");\n      i0.ɵɵtext(366, \" los controladores en Stratus son \");\n      i0.ɵɵelementStart(367, \"strong\");\n      i0.ɵɵtext(368, \"...\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(369, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(370, \"td\");\n      i0.ɵɵelement(371, \"img\", 19)(372, \"br\")(373, \"br\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(374, \"tr\")(375, \"td\");\n      i0.ɵɵtext(376, \"ManagedBean //Anotaciones\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(377, \"td\");\n      i0.ɵɵtext(378, \" * Clases Java de respaldo para las operaciones a realizar en las paginas web, que soportan la logica del negocio \");\n      i0.ɵɵelement(379, \"br\");\n      i0.ɵɵtext(380, \" * Requieren ser invocados con la expresion \");\n      i0.ɵɵelementStart(381, \"strong\");\n      i0.ɵɵtext(382);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(383, \" * Esta clase debe estar mappeada en un archivo de configuracion \\\"faces-config.xml\\\"(JSF 1) o atraves de anotaciones (JSF 2+) \");\n      i0.ɵɵelement(384, \"br\");\n      i0.ɵɵtext(385, \" * Dicho lo anterior este archivo de configuracion contiene la caracterizacion del comportamiento, la ubicacion y los datos de la clase los tag: \");\n      i0.ɵɵelement(386, \"br\")(387, \"br\");\n      i0.ɵɵelementStart(388, \"strong\");\n      i0.ɵɵtext(389, \"managed-bean :\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(390, \" Es un apodo o alias a la clase que vamos a mapear \");\n      i0.ɵɵelement(391, \"br\")(392, \"br\");\n      i0.ɵɵelementStart(393, \"strong\");\n      i0.ɵɵtext(394, \"managed-class :\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(395, \" Es la ruta en donde esta ubicada la clase \");\n      i0.ɵɵelement(396, \"br\")(397, \"br\");\n      i0.ɵɵelementStart(398, \"strong\");\n      i0.ɵɵtext(399, \"managed-scope :\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(400, \" Describimos el ambito de la clase, ademas el comportamiento, \");\n      i0.ɵɵelement(401, \"br\")(402, \"br\");\n      i0.ɵɵelementStart(403, \"strong\");\n      i0.ɵɵtext(404, \"navigation-rule :\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(405, \" Son las reglas de navegacion debemos indicar que salida dara la pagina y despues indicar hacia donde se debe dirigir \");\n      i0.ɵɵelement(406, \"br\")(407, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(408, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(409, \"tr\")(410, \"td\");\n      i0.ɵɵtext(411, \"Managed Bean \");\n      i0.ɵɵelementStart(412, \"strong\");\n      i0.ɵɵtext(413, \"Modelo\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(414, \"td\");\n      i0.ɵɵtext(415, \" Hay dos maneras de configurar los Managed Bean \");\n      i0.ɵɵelement(416, \"br\")(417, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(418, \"td\");\n      i0.ɵɵtext(419, \" 1. \");\n      i0.ɵɵelement(420, \"img\", 20)(421, \"br\")(422, \"br\");\n      i0.ɵɵtext(423, \" 2. \");\n      i0.ɵɵelement(424, \"img\", 21)(425, \"br\")(426, \"br\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(427, \"tr\")(428, \"td\");\n      i0.ɵɵtext(429, \"Scope\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(430, \"td\");\n      i0.ɵɵtext(431, \" El alcance \");\n      i0.ɵɵelement(432, \"br\")(433, \"br\");\n      i0.ɵɵelementStart(434, \"strong\");\n      i0.ɵɵtext(435, \"@RequestScoped \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(436, \" = en cada peticion que haga el usuario hacia el controlador se va a estar creando un nuevo objeto (por ejemplo cuando haces una busqueda donde el dato a buscar sea diferente en cada momento) \");\n      i0.ɵɵelement(437, \"br\")(438, \"br\");\n      i0.ɵɵelementStart(439, \"strong\");\n      i0.ɵɵtext(440, \"@ViewScoped \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(441, \"= Este vive a nivel de pagina es decir cuando el usuario da refresh a la pagina o cambia de pagina el bean vuelve a generarse\");\n      i0.ɵɵelement(442, \"br\")(443, \"br\");\n      i0.ɵɵelementStart(444, \"strong\");\n      i0.ɵɵtext(445, \"@SessionScoped \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(446, \" = va a estar a nivel de session, es decir no se va a destruir este bean hasta que se destruya la sesiion del usuario (mantener las credenciales del usuario \");\n      i0.ɵɵelementStart(447, \"strong\");\n      i0.ɵɵtext(448, \"(usuario y contrase\\u00F1a)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(449, \" ) \");\n      i0.ɵɵelement(450, \"br\")(451, \"br\");\n      i0.ɵɵelementStart(452, \"strong\");\n      i0.ɵɵtext(453, \"@ApplicationScoped \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(454, \"= Esta activo en toda la aplicacion, por lo general se emplea para objetos que no van a cambiar como una lista de paises \");\n      i0.ɵɵelement(455, \"br\")(456, \"br\")(457, \"img\", 22)(458, \"br\")(459, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(460, \"td\")(461, \"strong\");\n      i0.ɵɵtext(462, \"@ViewScope\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(463, \" Que el alcance del Bean a a ser a nivel de vista en el momento que el usuario de refresh a la pagina los datos del Bean \");\n      i0.ɵɵelementStart(464, \"strong\");\n      i0.ɵɵtext(465, \"desaparecen: Se Destruyen el ManagedBean y se crea uno nuevo\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(466, \"img\", 23)(467, \"br\")(468, \"br\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(469, \"tr\")(470, \"td\");\n      i0.ɵɵtext(471, \"Navegacion\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(472, \"td\");\n      i0.ɵɵtext(473, \" hay dos formas de navegar entre las vistas del proyecto de manera explicita e implicita \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(474, \"td\");\n      i0.ɵɵtext(475, \" 1. \");\n      i0.ɵɵelement(476, \"img\", 24)(477, \"br\")(478, \"br\");\n      i0.ɵɵtext(479, \" 2. \");\n      i0.ɵɵelement(480, \"img\", 25)(481, \"br\")(482, \"br\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(483, \"tr\")(484, \"td\");\n      i0.ɵɵtext(485, \"Librerias\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(486, \"td\");\n      i0.ɵɵtext(487, \" para usar de mejor manera podemos emplear diferentes librerias como las mencionadas en la imagen puedes encontrar un poco mas de informacion dentro de este proyecto en el apartada de librerias \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(488, \"td\");\n      i0.ɵɵtext(489, \" 1. \");\n      i0.ɵɵelement(490, \"img\", 26)(491, \"br\")(492, \"br\");\n      i0.ɵɵtext(493, \" 2. \");\n      i0.ɵɵelement(494, \"img\", 27)(495, \"br\")(496, \"br\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(497, \"tr\")(498, \"td\")(499, \"a\", 28);\n      i0.ɵɵtext(500, \"Etiquetas\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(501, \"td\");\n      i0.ɵɵtext(502, \" * h:commandLink action=\\\"la pagina a la cual debe redireccionar\\\" value=\\\"el texto a mostrar\\\"// link \");\n      i0.ɵɵelement(503, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(504, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(505, \"tr\")(506, \"td\");\n      i0.ɵɵelement(507, \"a\", 29);\n      i0.ɵɵtext(508, \"Facelets\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(509, \"td\");\n      i0.ɵɵtext(510, \" El template ser\\u00E1 para nosotros una hoja de papel ya escrita, con una serie de agujeros que nos permiten ver lo que hay debajo. El cliente ser\\u00E1 otra hoja que pondremos debajo y del que solo veremos el contenido que no tape el template. \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(511, \"td\");\n      i0.ɵɵelement(512, \"img\", 30)(513, \"br\")(514, \"br\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(515, \"tr\")(516, \"td\");\n      i0.ɵɵtext(517, \"Etiquetas\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(518, \"td\");\n      i0.ɵɵelementStart(519, \"td\");\n      i0.ɵɵelement(520, \"img\", 31)(521, \"br\")(522, \"br\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(523, \"tr\")(524, \"td\")(525, \"a\", 32);\n      i0.ɵɵtext(526, \"Diferencia entre outputLabel y outputText\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(527, \"td\");\n      i0.ɵɵtext(528, \" La diferencia radica en el HTML generado label puede contener un atributo llamado for que cuando hacae macth con un id de igual valor estos dos tag se relacionan \");\n      i0.ɵɵelement(529, \"br\")(530, \"br\");\n      i0.ɵɵtext(531, \" Ahora bien no se debe usar solo para mostrar un texto de la siguiente manera \");\n      i0.ɵɵelement(532, \"br\");\n      i0.ɵɵtext(533);\n      i0.ɵɵelement(534, \"br\")(535, \"br\");\n      i0.ɵɵtext(536, \" Donde no se usa el atributo for. Para estos casos se debe usar \");\n      i0.ɵɵelementStart(537, \"strong\");\n      i0.ɵɵtext(538, \"outputText\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(539, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(540, \"tr\")(541, \"td\");\n      i0.ɵɵtext(542, \"Diferencia entre action y actionListener\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(543, \"td\");\n      i0.ɵɵtext(544, \" los dos pueden contener valores que retornan el metodo declarado en el action \");\n      i0.ɵɵelementStart(545, \"strong\");\n      i0.ɵɵtext(546, \"PEROooooooo\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(547, \"br\")(548, \"br\");\n      i0.ɵɵelementStart(549, \"strong\");\n      i0.ɵɵtext(550, \"action = \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(551, \"Es usado para cuando el valor que tiene va a Re-direccionar a otra vista \");\n      i0.ɵɵelement(552, \"br\");\n      i0.ɵɵelementStart(553, \"strong\");\n      i0.ɵɵtext(554, \"actionListener =\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(555, \" No Re-direcciona a otra Vista solo ejecuta el metodo \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(556, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(557, \"tr\")(558, \"td\");\n      i0.ɵɵtext(559, \"Etiquetas\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(560, \"td\")(561, \"strong\");\n      i0.ɵɵtext(562, \"insertar CSS (SIN NO TE ACTUALIZA LOS CAMBIOS EN EL NAVEGADOR CTRL+F5)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(563, \"br\");\n      i0.ɵɵtext(564);\n      i0.ɵɵelement(565, \"br\");\n      i0.ɵɵtext(566);\n      i0.ɵɵelement(567, \"br\");\n      i0.ɵɵtext(568);\n      i0.ɵɵelement(569, \"br\")(570, \"br\");\n      i0.ɵɵelementStart(571, \"strong\");\n      i0.ɵɵtext(572, \"link\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(573, \"br\");\n      i0.ɵɵtext(574);\n      i0.ɵɵelementStart(575, \"strong\");\n      i0.ɵɵtext(576, \"DEBE LLEVAR LA EXTENCION\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(577, \"br\")(578, \"br\");\n      i0.ɵɵtext(579);\n      i0.ɵɵelementStart(580, \"strong\");\n      i0.ɵɵtext(581, \"Es opcional el /\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(582, \"br\")(583, \"br\");\n      i0.ɵɵtext(584);\n      i0.ɵɵelement(585, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(586, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(587, \"tr\");\n      i0.ɵɵelement(588, \"td\")(589, \"td\")(590, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(591, \"tr\");\n      i0.ɵɵelement(592, \"td\")(593, \"td\")(594, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(595, \"tr\");\n      i0.ɵɵelement(596, \"td\")(597, \"td\")(598, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(599, \"tr\");\n      i0.ɵɵelement(600, \"td\")(601, \"td\")(602, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(603, \"tr\");\n      i0.ɵɵelement(604, \"td\")(605, \"td\")(606, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(607, \"tr\");\n      i0.ɵɵelement(608, \"td\")(609, \"td\")(610, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(611, \"tr\");\n      i0.ɵɵelement(612, \"td\")(613, \"td\")(614, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(615, \"tr\");\n      i0.ɵɵelement(616, \"td\")(617, \"td\")(618, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(619, \"tr\");\n      i0.ɵɵelement(620, \"td\")(621, \"td\")(622, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(623, \"tr\");\n      i0.ɵɵelement(624, \"td\")(625, \"td\")(626, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(627, \"tr\");\n      i0.ɵɵelement(628, \"td\")(629, \"td\")(630, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(631, \"tr\");\n      i0.ɵɵelement(632, \"td\")(633, \"td\")(634, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(635, \"tr\");\n      i0.ɵɵelement(636, \"td\")(637, \"td\")(638, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(639, \"tr\");\n      i0.ɵɵelement(640, \"td\")(641, \"td\")(642, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(643, \"tr\");\n      i0.ɵɵelement(644, \"td\")(645, \"td\")(646, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(647, \"tr\");\n      i0.ɵɵelement(648, \"td\")(649, \"td\")(650, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(651, \"tr\");\n      i0.ɵɵelement(652, \"td\")(653, \"td\")(654, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(655, \"tr\");\n      i0.ɵɵelement(656, \"td\")(657, \"td\")(658, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(659, \"tr\");\n      i0.ɵɵelement(660, \"td\")(661, \"td\")(662, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(663, \"tr\");\n      i0.ɵɵelement(664, \"td\")(665, \"td\")(666, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(667, \"tr\");\n      i0.ɵɵelement(668, \"td\")(669, \"td\")(670, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(671, \"tr\");\n      i0.ɵɵelement(672, \"td\")(673, \"td\")(674, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(675, \"tr\");\n      i0.ɵɵelement(676, \"td\")(677, \"td\")(678, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(679, \"tr\");\n      i0.ɵɵelement(680, \"td\")(681, \"td\")(682, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(683, \"tr\");\n      i0.ɵɵelement(684, \"td\")(685, \"td\")(686, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(687, \"tr\");\n      i0.ɵɵelement(688, \"td\")(689, \"td\")(690, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(691, \"tr\");\n      i0.ɵɵelement(692, \"td\")(693, \"td\")(694, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(695, \"tr\");\n      i0.ɵɵelement(696, \"td\")(697, \"td\")(698, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(699, \"tr\");\n      i0.ɵɵelement(700, \"td\")(701, \"td\")(702, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(703, \"tr\");\n      i0.ɵɵelement(704, \"td\")(705, \"td\")(706, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(707, \"tr\");\n      i0.ɵɵelement(708, \"td\")(709, \"td\")(710, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(711, \"tr\");\n      i0.ɵɵelement(712, \"td\")(713, \"td\")(714, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(715, \"tr\");\n      i0.ɵɵelement(716, \"td\")(717, \"td\")(718, \"td\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(343);\n      i0.ɵɵtextInterpolate2(\" 1. La definition = \", ctx.abreDiamante, \"servlet\", ctx.cierraDiamante, \" \");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate2(\" 2. El Mapping = \", ctx.abreDiamante, \"servlet-mapping\", ctx.cierraDiamante, \" \");\n      i0.ɵɵadvance(37);\n      i0.ɵɵtextInterpolate2(\"EL = \", ctx.abrellave, \"#bean.atributo\", ctx.cierrallave, \"\");\n      i0.ɵɵadvance(151);\n      i0.ɵɵtextInterpolate4(\" \", ctx.abreDiamante, \"h:outputLabel value=\\\"#\", ctx.abrellave, \"bean.message\", ctx.cierrallave, \"\\\" /\", ctx.cierraDiamante, \" \");\n      i0.ɵɵadvance(31);\n      i0.ɵɵtextInterpolate2(\" * \", ctx.abreDiamante, \"link rel=\\\"stylesheet\\\" href=\\\"resources/musicShop/css/default.css\\\"/\", ctx.cierraDiamante, \" \");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate4(\" * \", ctx.abreDiamante, \"link href=\\\"#\", ctx.abrellave, \"facesContext.externalContext.requestContextPath\", ctx.cierrallave, \"/resources/css/default.css\\\" rel=\\\"stylesheet\\\" type=\\\"text/css\\\" /\", ctx.cierraDiamante, \" \");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate2(\" * \", ctx.abreDiamante, \"h:outputStylesheet library=\\\"resources\\\" name=\\\"resources/css/default.css\\\"/\", ctx.cierraDiamante, \"\");\n      i0.ɵɵadvance(6);\n      i0.ɵɵtextInterpolate4(\" * \", ctx.abreDiamante, \"h:outputLink value=\\\"shopping-cart.xhtml\\\" \", ctx.cierraDiamante, \"Shoopping cart \", ctx.abreDiamante, \"/h:outputLink \", ctx.cierraDiamante, \" \");\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate2(\" * \", ctx.abreDiamante, \"h:commandLink action=\\\"/index\\\" value=\\\"index\\\" /\", ctx.cierraDiamante, \" \");\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate2(\" * \", ctx.abreDiamante, \"h:commandButton action=\\\"/index\\\" value=\\\"ir al inicio\\\" /\", ctx.cierraDiamante, \" \");\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["JavaServerFacesComponent","constructor","abrellave","cierrallave","abreDiamante","cierraDiamante","abreParentesis","cierraParentesis","abreCuadro","cierraCuadro","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\HP\\Desktop\\juanTafur\\jugutafur\\Support-FrontEnd-Angular-full\\src\\app\\core\\components\\framewoks\\java-server-faces\\java-server-faces.component.ts","C:\\Users\\HP\\Desktop\\juanTafur\\jugutafur\\Support-FrontEnd-Angular-full\\src\\app\\core\\components\\framewoks\\java-server-faces\\java-server-faces.component.html"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-java-server-faces',\n  templateUrl: './java-server-faces.component.html',\n  styleUrls: ['./java-server-faces.component.scss']\n})\nexport class JavaServerFacesComponent {\n\n  busqueda: number = 0;\n\n  public abrellave: string;\n  public cierrallave: string;\n  public abreDiamante: string;\n  public cierraDiamante: string;\n  public abreParentesis: string;\n  public cierraParentesis: string;\n  public abreCuadro: string;\n  public cierraCuadro: string;\n\n  constructor() {\n    this.abrellave= \"{\";\n    this.cierrallave=\"}\";\n    this.abreDiamante= \"<\";\n    this.cierraDiamante= \">\";\n    this.abreParentesis= \"(\";\n    this.cierraParentesis= \")\";\n    this.abreCuadro= \"[\";\n    this.cierraCuadro= \"]\";\n  }\n}\n","<div class=\"container\">\r\n  <table class=\"table table-striped table-hover table-bordered align-middle\">\r\n      <thead>\r\n          <tr>\r\n              <th scope=\"col\">Referencia</th>\r\n              <th scope=\"col\">Descripcion</th>\r\n              <th scope=\"col\">Ejemplo</th>\r\n          </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>Defenicion JSF</td>\r\n          <td>La tecnologia JavaServerFaces es un <strong> framewok de interfaz de componentes de usuario de lado del servidor</strong>\r\n            para las aplicaciones web basadas en la tecnologia java, que semplifica  el desarrollo de la interfaz de usuario, \r\n            logrando aspectos de diseño mas elegante para la creacion de aplicaciones JSF con XHTML.\r\n          </td>\r\n          <td></td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <strong><a href=\"https://dzone.com/articles/named-vs-managedbean-laquo-glenware\"> CDI </a></strong><br><br>\r\n            <a href=\"https://www.adictosaltrabajo.com/2013/02/08/cdi-weld-arquilian/\">Ver info superImportante</a>\r\n\r\n          </td>\r\n          <td>\r\n            La especificación CDI Beans – (CDI: Contexts and Dependency Injection), define el marco de trabajo de inyección de dependencias utilizado de forma estándar en la plataforma Java EE siendo un elemento fundamental de la misma. Su funcionamiento y cometido es equivalente al sistema de inyección de dependencias de Spring.\r\n          </td>\r\n          <td>\r\n            <strong>@Named</strong> //para declarar un Bean en lugar de <strong>@ManagedBean</strong> ya que esta ultima esta en desuso <br>\r\n            Estas anotaciones proporcionan inyecciones de dependencia <br><br>\r\n            <strong>@ManagedBean</strong> – javax.faces.bean.ManagedBean – gestionado por contenedor JSF <br>\r\n            <strong>@Named</strong> – javax.faces.bean – Bean CDI administrado por el servidor de aplicaciones <br><br>\r\n            Esto significa que los beans @Named son visibles para todo el contenedor JEE, mientras que @ManagedBean solo son visibles para el contenedor JSF. El problema de la visibilidad se cubre en esta tabla:\r\n          </td>\r\n        </tr>\r\n\r\n          <tr>\r\n            <td></td>\r\n            <td>\r\n              * <strong>Componentes de interfaz de usuario IU</strong> <br>\r\n              - Componetes que generan datos <br>\r\n              -- No editables <br>\r\n              -- editables <br><br>\r\n              - Componentes que generan acciones <br><br>\r\n              * <strong>Un modelo de renderizado</strong> <br><br>\r\n              * <strong>Un modelo para el manejo de eventos y listeners</strong><br>\r\n              JSf Maneja 2 tipos de eventos <br><br>\r\n              -Eventos de Aplicacion <br>\r\n              --Generados por componentes UI <br>\r\n              --Hay 2 tipos: ActionEvent o Value Change Event <br><br>\r\n              -Eventos de Ciclo de Vida <br>\r\n              --Se clasifican en Eventos de Fase y Eventos de Sistema <br><br>\r\n              * <strong>Un modelo de conversion y validacion de datos</strong> <br><br>\r\n              * <strong>Un modelo para el soporte Ajax</strong> <br><br>\r\n            </td>\r\n            <td>\r\n              <img\r\n              src=\"../../../../../assets/framework/JavaServerFaces/EventsAndListeners.png\"\r\n              alt=\"EventsAndListeners\"\r\n              title=\"EventsAndListeners\"><br><br>\r\n            </td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td>\r\n              <a href=\"https://www.youtube.com/watch?v=dZnXn-ecwp8&t=29s\">Info proyecto JSF</a><br><br>\r\n              <strong>Todo proyecto JSF debe tener un archivo de web.xml </strong> EN el encontramos los servlet y mas importante en los tags de servlet name y mapping encontramos el servlet el <strong>Faces Servlet</strong> de esta manera indicamos que nuestra aplicacion usa JSF ademas <strong>que debemos agregar la dependencia necesario en el pom.xml y build.gradle <br><br> como visto en la imagen 2</strong>\r\n            </td>\r\n            <td>\r\n              * Es una especificacion, parte de Java EE que define un marco de trabajo MVC pare el desarrolo de aplicaciones web basado en un modelo de componentes de interfaz de usuario del lado del servidor <br>\r\n              * JSF nacio en el 2004 por SUN pensado para la parte web. <br>\r\n              * Permite el uso de JavaScript <br>\r\n              * Resuelve Validaciones, Conversiones, Mensajes de error e Internacionalizacion <br>\r\n              * Desarrollo de componentes propios <br>\r\n              * La presentacion esta en JSP y XHTML <br>\r\n              * <strong>Programacion orientada a eventos</strong><br>\r\n              * <strong>Etiquetas enriquezidas </strong>por lado del servidor para que en el lado del cliente tenga <strong>HTML</strong>\r\n              * <strong>Flujos de navegacion</strong> en base a cadenas de control. Estos flujos es posible definirlos desde java o con un archivo llamado <strong>faces-config</strong> siendo esta ultima mejor ya que en un solo archivo se centraliza la navegacion de la aplicacion <br>\r\n              * <strong>Soporte de peticiones asincronas (AJAX)</strong> todos los frameworks que programan aplicaciones web como spring web y JSF tienen mejorado esta parte de comunicacion entre el servidor y el cliente <br>\r\n              * JSF es la tecnologia que avala <strong>Oracle</strong> para las apliaciones web es por ello que este framework tiene soporte nativo para <strong>WebSphere y GlassFish </strong>lo que significa que no es necesario agregar librerias a nuestro servidor ya que este ya las contiene <br>\r\n              * facil integracion con standalone en Apache Tomcat solo es necesario agregar las librerias necesarias <br>\r\n            </td>\r\n            <td>\r\n              1.\r\n              <img\r\n              src=\"../../../../../assets/framework/JavaServerFaces/EstructuraJSF.png\"\r\n              alt=\"EstructuraJSF\"\r\n              title=\"EstructuraJSF\"><br><br>\r\n              2.\r\n              <img\r\n              src=\"../../../../../assets/framework/JavaServerFaces/ConfiguracionJSF.png\"\r\n              alt=\"ConfiguracionJSF\"\r\n              title=\"ConfiguracionJSF\"><br><br>\r\n            </td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td>Archivos</td>\r\n            <td>\r\n              <strong>faces-config.xml (META-INF) </strong><br>\r\n              * Contine las reglas de navegacion <br>\r\n              * la configuracion de Internacionalizacion <br>\r\n              * Antes en JSF-1 este archivo se mapeaban los beans ademas de la ruta y su Scope <br>\r\n              <strong>web.xml (WEB-INF)</strong><br>\r\n              * Contiene los Servlets (name y el mapping) <br>\r\n              * El archivo por el cual arranca la aplicacion (welcome file list)<br>\r\n              <strong>Pom.xml  (Project Object Model)</strong> <br>\r\n              * Contiene la inyeccion de todas las dependencias necesarias para que funcione el proyecto <br>\r\n              * La version del proyecto <br>\r\n              * El nombre del proyecto <br>\r\n              * El paquete que dara por salida <br>\r\n            </td>\r\n            <td>\r\n              En versiones JSF-1\r\n              <img\r\n              src=\"../../../../../assets/framework/JavaServerFaces/JSF-1MapeoDeJavaBeans.png\"\r\n              alt=\"1MapeoDeJavaBeans\"\r\n              title=\"1MapeoDeJavaBeans\"><br><br>\r\n            </td>\r\n          </tr>\r\n\r\n          <tr>\r\n              <td>Java Server Faces</td>\r\n              <td>\r\n                Java server faces es un framework de aplicaciones web basado en java, permite simplificar la construcción de interfaces de usuario para aplicaciones web mediante el uso de componentes gráficos y la vinculación del patrón MVC <br><br>\r\n                Dentro de las caracteristicas descritas en la segunda imagen se menciona una capa superior <strong>Java API los servlet</strong> esto quiere decir que todo lo que hagamos con Java para la web va a emplear servlets en segundo plano, lo que hagamos con Spring, JSF etc.. <br><br>\r\n                <strong>\r\n                JSF es una especificación o framework que hace parte de JEE que define un marco de trabajo MVC para el desarrollo de aplicaciones web basado en un modelo de componentes de interzas de usuario del lado del servidor <br><br></strong>\r\n                <strong>JSF</strong>: Java Server Faces usa JSP, una de las diferencias entre JSP y JSF es que JSF todo son formularios y JSP son link <strong>para el redireccionamiento</strong><br>\r\n                <strong>JSP</strong>: Java Server Pages = Es una tecnologia orientada a crear paginas web con programacion Java en el Servidor, estas estan compuetas con HTML/XML mezclado con etiquetas especiales para programar scripts de servidor en sintaxis java <br><br>\r\n                <strong>ASP</strong>: Active Server Pages = Es una plataforma de desarrollo creada por Microsoft <strong>usado para el desarrollo de las tecnologias de servidor</strong> lo anterior significa que lo que desarrollemos en PHP, ASP, JSF, JSP son paginas que estan dentro del servidor y que son dinamicas es decir solo van a generar HTML para que el navegador interprete y renderize <strong>Solo con la informacion necesaria</strong> <br><br>\r\n                <strong>ASP.NET</strong>: no es lo mismo ASP que ASP.NET, lo segundo es la evolucion de lo primero ademas ASP solo permite programar en Visual Basic en cambio ASP.NET permite varios lenguajes como C# <br><br>\r\n                Tal y como veíamos en la sesión anterior, y definiéndolo de una forma muy simple, JSF es un framework orientado a recoger datos del usuario, pasarlos a la capa del modelo de la aplicación, realizar las acciones correspondientes en la aplicación y pintar los datos resultantes. Todo ello en un entorno web, con peticiones HTTP y páginas HTML.\r\n                <br><br>\r\n                Los datos se introducen y se muestran en forma de texto, y se almacenan en un formato dependiente de la aplicación. Por ejemplo, una fecha se puede representar con un formato dd-mm-aaaa mientras que su representación interna puede ser un objeto de la clase java.util.Date . Para realizar esta conversión entre el texto y el formato interno, se asocian al componente validadores y conversores .\r\n                ver info <a href=\"https://desarrolloweb.com/articulos/831.php\">Link 1</a>\r\n              </td>\r\n              <td>\r\n                1.\r\n                <img\r\n                src=\"../../../../../assets/framework/JavaServerFaces/Servlet.png\"\r\n                alt=\"Servlet\"\r\n                title=\"Servlet\"><br><br>\r\n                2.\r\n                <img\r\n                src=\"../../../../../assets/framework/JavaServerFaces/JSF1.png\"\r\n                alt=\"JSF1\"\r\n                title=\"JSF1\"><br><br>\r\n              </td>\r\n          </tr>\r\n\r\n          <tr>\r\n              <td>Arquitectura</td>\r\n              <td>\r\n                los clientes hacen request estas entran a los controladores(los Managed Beans) estos delegan roles a los modelos, un modelo detecta y devuelve el controlador el controlador genera una vista y esta vista va a estar amarrada al modelo para dar finalmente un response al cliente <br><br>\r\n              </td>\r\n              <td>\r\n                <img\r\n                src=\"../../../../../assets/framework/JavaServerFaces/JSFArquitectura.png\"\r\n                alt=\"JSFArquitectura\"\r\n                title=\"JSFArquitectura\"><br><br>\r\n              </td>\r\n          </tr>\r\n\r\n          <tr>\r\n              <td>Ciclo de vida</td>\r\n              <td>\r\n                Empieza desde el Faces Request hasta el Faces Response <br><br>\r\n                Restore view en esta etapa se restaura el arbol de componentes botones, inputs , form etc.. una vez obtenido el arbol de componetes se procesan todos los valores a sociados a los mismos, se validan datos actualiza los modelos este paso pasa primero por los controladores finalmente invoka la aplicacion llamando al gestor que es el <strong>Java Bean </strong>Este se encarga de traer todos los componentes asociados en conjunto con la informacion que viene los objetos para renderizarla en un navagador por medio de un servidor que para nuestro caso es Tomcat <br><br>\r\n                Primero dectecta el evento de la persona que esta interactuando en la pagina y por medio del protocolo HTTP crea el FacesRequest llega al motor JSF recupera la informacion atraves de los Beans, crea el arbol de componentes genera el archivo xml con los datos lo lleva a nuestra pagina a nuestro navegador y atraves del DOM y con ayuda de JavaScript y JavaServerFaces pinta la informacion <br><br>\r\n                <strong>Un servlet de la clase javax.faces.webapp.FacesServlet es el motor de cualquier aplicación JSF</strong><br><br>\r\n                <img\r\n                src=\"../../../../../assets/framework/JavaServerFaces/JSFCicloVida0.png\"\r\n                alt=\"JSFCicloVida0\"\r\n                title=\"JSFCicloVida0\"><br><br>\r\n              </td>\r\n              <td>\r\n                1.\r\n                <img\r\n                src=\"../../../../../assets/framework/JavaServerFaces/JSFCicloVida.png\"\r\n                alt=\"JSFCicloVida\"\r\n                title=\"JSFCicloVida\"><br><br>\r\n                2.\r\n                <img\r\n                src=\"../../../../../assets/framework/JavaServerFaces/JSFCicloVida2.png\"\r\n                alt=\"JSFCicloVida2\"\r\n                title=\"JSFCicloVida2\"><br><br>\r\n              </td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td>Facelets Context</td>\r\n            <td>\r\n              <strong>P.E Process Event parametros del Envarioment </strong> los facelets son templates de html con xml = xhtml que tiene tags de contenido dinamico quien llena este contenido es el cliente\r\n            </td>\r\n            <td>\r\n              <img\r\n              src=\"../../../../../assets/framework/JavaServerFaces/JSFFacesContext.png\"\r\n              alt=\"JSFFacesContext\"\r\n              title=\"JSFFacesContext\"><br><br>\r\n            </td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td>Funcionamiento General</td>\r\n            <td>\r\n              Empieza por el faces request luego se crea el FacesServlet <strong>declarado en el archivo web.xml </strong>se genera su FacesContext este crea una instancia unica por cada request luego FacesServlet delega el procesamiento al ciclo de vida luego cada fase puede acceder y modificar su contenido en el FacesContext luego envia la respesta al FacesServlet y este ultimo solicita al FacesContext ejecutar la fase de render response para finalmente generar el Faces response <br><br>\r\n              Ahora tener en cuenta que en el archivo de Web.xml <strong>Web Deployment Definition (es un fichero en el formato estándar para aplicaciones web con servlets, que contiene la configuración global a toda(s) la(s) aplicacion(es) )</strong> Se encuentra definidos los servlets faces : <br><br>\r\n              1. La definition = {{abreDiamante}}servlet{{cierraDiamante}} <br>\r\n              2. El Mapping = {{abreDiamante}}servlet-mapping{{cierraDiamante}} <br>\r\n            </td>\r\n            <td>\r\n              <img\r\n              src=\"../../../../../assets/framework/JavaServerFaces/JSFGeneral.png\"\r\n              alt=\"JSFGeneral\"\r\n              title=\"JSFGeneral\"><br><br>\r\n            </td>\r\n          </tr>\r\n\r\n          <tr>\r\n              <td>Anotaciones</td>\r\n              <td>\r\n                los controllers son llamados de diferente manera dependiendo del framewok usado <br><br>\r\n                los controladores en JSF son <strong>managed Beans</strong><br>\r\n                los controladores en Spring son <strong>Controllers</strong> <br>\r\n                los controladores en Stratus son <strong>...</strong> <br>\r\n              </td>\r\n              <td>\r\n                <img\r\n                src=\"../../../../../assets/framework/JavaServerFaces/SettingJSF.png\"\r\n                alt=\"SettingJSF\"\r\n                title=\"SettingJSF\"><br><br>\r\n              </td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td>ManagedBean //Anotaciones</td>\r\n            <td>\r\n              * Clases Java de respaldo para las operaciones a realizar en las paginas web, que soportan la logica del negocio <br>\r\n              * Requieren ser invocados con la expresion <strong>EL = {{abrellave}}#bean.atributo{{cierrallave}}</strong>\r\n              * Esta clase debe estar mappeada en un archivo de configuracion \"faces-config.xml\"(JSF 1) o atraves de anotaciones (JSF 2+) <br>\r\n              * Dicho lo anterior este archivo de configuracion contiene la caracterizacion del comportamiento, la ubicacion y los datos de la clase los tag: <br><br>\r\n              <strong>managed-bean :</strong> Es un apodo o alias a la clase que vamos a mapear <br><br>\r\n              <strong>managed-class :</strong> Es la ruta en donde esta ubicada la clase <br><br>\r\n              <strong>managed-scope :</strong> Describimos el ambito de la clase, ademas el comportamiento, <br><br>\r\n              <strong>navigation-rule :</strong> Son las reglas de navegacion debemos indicar que salida dara la pagina y despues indicar hacia donde se debe dirigir <br><br>\r\n\r\n            </td>\r\n            <td></td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td>Managed Bean <strong>Modelo</strong></td>\r\n            <td>\r\n              Hay dos maneras de configurar los Managed Bean <br><br>\r\n            </td>\r\n            <td>\r\n              1.\r\n              <img\r\n              src=\"../../../../../assets/framework/JavaServerFaces/JSFManagedBean.png\"\r\n              alt=\"JSFManagedBean\"\r\n              title=\"JSFManagedBean\"><br><br>\r\n              2.\r\n              <img\r\n              src=\"../../../../../assets/framework/JavaServerFaces/JSFManagedBean2.png\"\r\n              alt=\"JSFManagedBean2\"\r\n              title=\"JSFManagedBean2\"><br><br>\r\n            </td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td>Scope</td>\r\n            <td>\r\n              El alcance <br><br>\r\n              <strong>@RequestScoped </strong> = en cada peticion que haga el usuario hacia el controlador se va a estar creando un nuevo objeto (por ejemplo cuando haces una busqueda donde el dato a buscar sea diferente en cada momento) <br><br>\r\n              <strong>@ViewScoped </strong>=  Este vive a nivel de pagina es decir cuando el usuario da refresh a la pagina o cambia de pagina el bean vuelve a generarse<br><br>\r\n              <strong>@SessionScoped  </strong> = va a estar a nivel de session, es decir no se va a destruir este bean hasta que se destruya la sesiion del usuario (mantener las credenciales del usuario <strong>(usuario y contraseña)</strong> ) <br><br>\r\n              <strong>@ApplicationScoped </strong>= Esta activo en toda la aplicacion, por lo general se emplea para objetos que no van a cambiar como una lista de paises <br><br>\r\n              <img\r\n              src=\"../../../../../assets/framework/JavaServerFaces/Scope.png\"\r\n              alt=\"Scope\"\r\n              title=\"Scope\"><br><br>\r\n            </td>\r\n            <td>\r\n              <strong>@ViewScope</strong> Que el alcance del Bean a a ser a nivel de vista en el momento que el usuario de refresh a la pagina los datos del Bean <strong>desaparecen: Se Destruyen el ManagedBean y se crea uno nuevo</strong>\r\n              <img\r\n              src=\"../../../../../assets/framework/JavaServerFaces/JSFScope.png\"\r\n              alt=\"JSFScope\"\r\n              title=\"JSFScope\"><br><br>\r\n            </td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td>Navegacion</td>\r\n            <td>\r\n              hay dos formas de navegar entre las vistas del proyecto de manera explicita e implicita\r\n            </td>\r\n            <td>\r\n              1.\r\n              <img\r\n              src=\"../../../../../assets/framework/JavaServerFaces/JSFNavegacionExplicito.png\"\r\n              alt=\"JSFNavegacionExplicito\"\r\n              title=\"JSFNavegacionExplicito\"><br><br>\r\n              2.\r\n              <img\r\n              src=\"../../../../../assets/framework/JavaServerFaces/JSFNavegacionImplicito.png\"\r\n              alt=\"JSFNavegacionImplicito\"\r\n              title=\"JSFNavegacionImplicito\"><br><br>\r\n            </td>\r\n          </tr>\r\n\r\n          <tr>\r\n              <td>Librerias</td>\r\n              <td>\r\n                para usar de mejor manera podemos emplear diferentes librerias como las mencionadas en la imagen puedes encontrar un poco mas de informacion dentro de este proyecto en el apartada de librerias\r\n              </td>\r\n              <td>\r\n                1.\r\n                <img\r\n                src=\"../../../../../assets/librerias/primefaces/libreriasParaJSF.png\"\r\n                alt=\"libreriasParaJSF\"\r\n                title=\"libreriasParaJSF\"><br><br>\r\n                2.\r\n                <img\r\n                src=\"../../../../../assets/framework/JavaServerFaces/libreriasJSF.png\"\r\n                alt=\"libreriasJSF\"\r\n                title=\"libreriasJSF\"><br><br>\r\n              </td>\r\n          </tr>\r\n          <tr>\r\n              <td><a href=\"http://codejavu.blogspot.com/2017/12/componentes-basicos-java-server-pages.html\">Etiquetas</a></td>\r\n              <td>\r\n                * h:commandLink action=\"la pagina a la cual debe redireccionar\" value=\"el texto a mostrar\"// link <br>\r\n\r\n              </td>\r\n              <td></td>\r\n          </tr>\r\n\r\n          <tr>\r\n              <td><a href=\"https://www.adictosaltrabajo.com/2016/06/10/facelets-entendiendo-los-templates-de-jsf/\"></a>Facelets</td>\r\n              <td>\r\n                El template será para nosotros una hoja de papel ya escrita, con una serie de agujeros que nos permiten ver lo que hay debajo. El cliente será otra hoja que pondremos debajo y del que solo veremos el contenido que no tape el template.\r\n              </td>\r\n              <td>\r\n                <img\r\n                src=\"../../../../../assets/framework/JavaServerFaces/facelets.png\"\r\n                alt=\"facelets\"\r\n                title=\"facelets\"><br><br>\r\n              </td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td>Etiquetas</td>\r\n            <td>\r\n            </td>\r\n            <td>\r\n              <img\r\n              src=\"../../../../../assets/framework/JavaServerFaces/Etiquetas.png\"\r\n              alt=\"Etiquetas\"\r\n              title=\"Etiquetas\"><br><br>\r\n            </td>\r\n          </tr>\r\n\r\n          <tr>\r\n              <td><a href=\"https://stackoverflow.com/questions/17544141/purpose-of-the-houtputlabel-and-its-for-attribute\">Diferencia entre outputLabel y outputText</a></td>\r\n              <td>\r\n                La diferencia radica en el HTML generado label puede contener un atributo llamado for que cuando hacae macth con un id de igual valor estos dos tag se relacionan <br><br>\r\n                Ahora bien no se debe usar solo para mostrar un texto de la siguiente manera  <br>\r\n                {{abreDiamante}}h:outputLabel value=\"#{{abrellave}}bean.message{{cierrallave}}\" /{{cierraDiamante}} <br><br>\r\n                Donde no se usa el atributo for. Para estos casos se debe usar <strong>outputText</strong>\r\n              </td>\r\n              <td></td>\r\n          </tr>\r\n\r\n          <tr>\r\n              <td>Diferencia entre action y actionListener</td>\r\n              <td>\r\n                los dos pueden contener valores que retornan el metodo declarado en el action <strong>PEROooooooo</strong><br><br>\r\n                <strong>action = </strong>Es usado para cuando el valor que tiene va a Re-direccionar a otra vista <br>\r\n                <strong>actionListener =</strong> No Re-direcciona a otra Vista solo ejecuta el metodo\r\n              </td>\r\n              <td></td>\r\n          </tr>\r\n\r\n          <tr>\r\n              <td>Etiquetas</td>\r\n              <td>\r\n                <strong>insertar CSS (SIN NO TE ACTUALIZA LOS CAMBIOS EN EL NAVEGADOR CTRL+F5)</strong> <br>\r\n                * {{abreDiamante}}link rel=\"stylesheet\" href=\"resources/musicShop/css/default.css\"/{{cierraDiamante}} <br>\r\n                * {{abreDiamante}}link href=\"#{{abrellave}}facesContext.externalContext.requestContextPath{{cierrallave}}/resources/css/default.css\" rel=\"stylesheet\" type=\"text/css\" /{{cierraDiamante}} <br>\r\n                * {{abreDiamante}}h:outputStylesheet library=\"resources\" name=\"resources/css/default.css\"/{{cierraDiamante}}<br><br>\r\n                <strong>link</strong><br>\r\n                * {{abreDiamante}}h:outputLink value=\"shopping-cart.xhtml\" {{cierraDiamante}}Shoopping cart {{abreDiamante}}/h:outputLink {{cierraDiamante}} <strong>DEBE LLEVAR LA EXTENCION</strong> <br><br>\r\n                * {{abreDiamante}}h:commandLink action=\"/index\" value=\"index\" /{{cierraDiamante}} <strong>Es opcional el /</strong> <br><br>\r\n                * {{abreDiamante}}h:commandButton action=\"/index\" value=\"ir al inicio\" /{{cierraDiamante}} <br>\r\n              </td>\r\n              <td></td>\r\n          </tr>\r\n\r\n          <tr>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n          </tr>\r\n\r\n          <tr>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n          </tr>\r\n\r\n          <tr>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n          </tr>\r\n\r\n          <tr>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n          </tr>\r\n\r\n          <tr>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n          </tr>\r\n\r\n          <tr>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n          </tr>\r\n\r\n          <tr>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n          </tr>\r\n\r\n          <tr>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n          </tr>\r\n\r\n          <tr>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n          </tr>\r\n\r\n          <tr>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n          </tr>\r\n\r\n          <tr>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n          </tr>\r\n\r\n          <tr>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n          </tr>\r\n\r\n          <tr>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n          </tr>\r\n\r\n          <tr>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n          </tr>\r\n\r\n          <tr>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n          </tr>\r\n\r\n          <tr>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n          </tr>\r\n\r\n          <tr>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n          </tr>\r\n\r\n          <tr>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n          </tr>\r\n\r\n          <tr>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n          </tr>\r\n\r\n          <tr>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n          </tr>\r\n\r\n          <tr>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n          </tr>\r\n\r\n          <tr>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n          </tr>\r\n\r\n          <tr>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n          </tr>\r\n\r\n          <tr>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n          </tr>\r\n\r\n          <tr>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n          </tr>\r\n\r\n          <tr>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n          </tr>\r\n\r\n          <tr>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n          </tr>\r\n\r\n          <tr>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n          </tr>\r\n\r\n          <tr>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n          </tr>\r\n\r\n          <tr>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n          </tr>\r\n\r\n          <tr>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n          </tr>\r\n\r\n          <tr>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n          </tr>\r\n\r\n          <tr>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n          </tr>\r\n      </tbody>\r\n  </table>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}