{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/router\";\nfunction MainBdComponent_li_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\")(1, \"a\", 16);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const menu_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"/\", menu_r1, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(menu_r1);\n  }\n}\nexport class MainBdComponent {\n  constructor() {\n    this.lista = [\"mySQL\", \"PostgreSQL\", \"SQLServer\", \"MongoDB\", \"Oracle\", \"NoSql-Firestore\"];\n  }\n}\nMainBdComponent.ɵfac = function MainBdComponent_Factory(t) {\n  return new (t || MainBdComponent)();\n};\nMainBdComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MainBdComponent,\n  selectors: [[\"app-main-bd\"]],\n  decls: 430,\n  vars: 1,\n  consts: [[4, \"ngFor\", \"ngForOf\"], [\"href\", \"https://generatedata.com/\"], [\"href\", \"https://console.cloud.google.com/getting-started?pli=1\"], [1, \"container\"], [1, \"table\", \"table-striped\", \"table-hover\", \"table-bordered\", \"align-middle\"], [\"scope\", \"col\"], [\"href\", \"https://github.com/carta87/RedSocialAndAPI/blob/master/src/main/java/com/platzi/mensajes_app/datababe/Conexion.java\"], [\"src\", \"../../../../../assets/bd/tipoDato.png\", \"alt\", \"tipoDato\", \"title\", \"tipoDato\"], [\"src\", \"../../../../../assets/bd/BD.png\", \"alt\", \"BD\", \"title\", \"BD\"], [\"src\", \"../../../../../assets/bd/DB2.png\", \"alt\", \"DB2\", \"title\", \"DB2\"], [\"href\", \"https://platzi.com/clases/1566-bd/20197-entidades-y-atributos/\"], [\"src\", \"../../../../../assets/bd/Relacion.png\", \"alt\", \"Relacion\", \"title\", \"Relacion\"], [\"src\", \"../../../../../assets/bd/entidad.jpg\", \"alt\", \"Muestra diagrama ER\", \"title\", \"diagrama ER\"], [\"colspan\", \"3\"], [\"src\", \"../../../../../assets/bd/teroriaConjuntos.png\", \"alt\", \"Relations\", \"title\", \"Relations\"], [\"href\", \"https://www.youtube.com/watch?v=gG4C8S6c7v8\"], [\"routerLinkActive\", \"active\", 3, \"routerLink\"]],\n  template: function MainBdComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"nav\")(2, \"ul\");\n      i0.ɵɵtemplate(3, MainBdComponent_li_3_Template, 3, 2, \"li\", 0);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(4, \"div\")(5, \"h3\");\n      i0.ɵɵtext(6, \"paguinas de interes en el DATABASE:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"a\", 1);\n      i0.ɵɵtext(8, \" para crear datos en las tablas\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"br\");\n      i0.ɵɵelementStart(10, \"a\", 2);\n      i0.ɵɵtext(11, \" servicios administrados en la nube. Gratis!!!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\")(14, \"div\", 3)(15, \"table\", 4)(16, \"thead\")(17, \"tr\")(18, \"th\", 5);\n      i0.ɵɵtext(19, \"Referencia\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"th\", 5);\n      i0.ɵɵtext(21, \"Descripcion\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"th\", 5);\n      i0.ɵɵtext(23, \"Ejemplo\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(24, \"tbody\")(25, \"tr\")(26, \"td\")(27, \"strong\");\n      i0.ɵɵtext(28, \"Diferentes conecciones BD\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(29, \"td\")(30, \"p\");\n      i0.ɵɵtext(31, \"1. \");\n      i0.ɵɵelementStart(32, \"a\", 6);\n      i0.ɵɵtext(33, \" forma sencilla de coneccion de una base datos MySql\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(34, \"td\")(35, \"p\");\n      i0.ɵɵtext(36, \"1. se crea clase donde estaran los datos de la Conexion y en el metodo Main se crea objecto Conexion y se invoca su metodo. Esta es la forma mas sencilla, pero en un proyecto mas elaborado solo se llama el objecto de la conexion la capa DAO que se encarga de realizar las operaciones CRUD. Ademas se utiliza del paquete SQL las clases Conexion, PreparedStatement, ResultSet y ResultSet\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(37, \"tr\")(38, \"td\");\n      i0.ɵɵtext(39, \"Que es una base de datos \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(40, \"td\");\n      i0.ɵɵtext(41, \" Es una coleccion de datos almacenados de forma organizada con una logica coherente \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(42, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(43, \"tr\")(44, \"td\");\n      i0.ɵɵtext(45, \"Ques es un registro \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(46, \"td\");\n      i0.ɵɵtext(47, \" Conjunto de campos que contienen datos relacionados con una misma entidad u obejto \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(48, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(49, \"tr\")(50, \"td\");\n      i0.ɵɵtext(51, \"Que es una consulta\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(52, \"td\");\n      i0.ɵɵtext(53, \" Es una solicitud de informacion contenida en una bd o en una tabla \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(54, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(55, \"tr\")(56, \"td\")(57, \"strong\");\n      i0.ɵɵtext(58, \"Comandos SQL\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(59, \"td\");\n      i0.ɵɵtext(60, \" 1. DDL: Data Defintion Languaje \");\n      i0.ɵɵelement(61, \"br\");\n      i0.ɵɵtext(62, \" 2. DML: Data Manipluation Languaje \");\n      i0.ɵɵelement(63, \"br\");\n      i0.ɵɵtext(64, \" 3. DCL: Data Control Languaje \");\n      i0.ɵɵelement(65, \"br\");\n      i0.ɵɵtext(66, \" 4. TCL: Transaction Control Languaje \");\n      i0.ɵɵelement(67, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(68, \"td\");\n      i0.ɵɵtext(69, \" 1. DDL: CREATE, AFTER, DROP, TRUNCATE,/ COMMENT, RENAME \");\n      i0.ɵɵelement(70, \"br\");\n      i0.ɵɵtext(71, \" 2. DML: SELECT, INSERT, UPDATE, DELETE,/ MERGE, CALL, EXPLAIN PLAN, LOCK TABLE \");\n      i0.ɵɵelement(72, \"br\");\n      i0.ɵɵtext(73, \" 3. DCL: GRANT, ROLLBACK, SAVEPOINT, BEGIN, TRAIN \");\n      i0.ɵɵelement(74, \"br\");\n      i0.ɵɵtext(75, \" 4. TCL: /COMMIT, ROLLBACK, SAVEPOINT, SET Transaction \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(76, \"tr\")(77, \"td\");\n      i0.ɵɵtext(78, \"tipos de consulta\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(79, \"td\");\n      i0.ɵɵtext(80, \" 1. Seleccion : No modifican la informacionde las tablas \");\n      i0.ɵɵelement(81, \"br\");\n      i0.ɵɵtext(82, \" 2. Accion : Si modifican la informacionde las tablas \");\n      i0.ɵɵelement(83, \"br\");\n      i0.ɵɵtext(84, \" 3. Especificas de sql : solo es posible realizarlas programando SQL\");\n      i0.ɵɵelement(85, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(86, \"td\")(87, \"strong\");\n      i0.ɵɵtext(88, \"1. Consultas de Seleccion \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(89, \"br\");\n      i0.ɵɵtext(90, \" 1. Normales \");\n      i0.ɵɵelement(91, \"br\");\n      i0.ɵɵtext(92, \"2. De Referencia Cruzadas \");\n      i0.ɵɵelement(93, \"br\");\n      i0.ɵɵtext(94, \"3. De duplicados \");\n      i0.ɵɵelement(95, \"br\");\n      i0.ɵɵtext(96, \"4. De no coincidencias \");\n      i0.ɵɵelement(97, \"br\")(98, \"br\");\n      i0.ɵɵelementStart(99, \"strong\");\n      i0.ɵɵtext(100, \"2. Consultas de Accion \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(101, \"br\");\n      i0.ɵɵtext(102, \" 1. Actualizacion \");\n      i0.ɵɵelement(103, \"br\");\n      i0.ɵɵtext(104, \"2. Eliminacion \");\n      i0.ɵɵelement(105, \"br\");\n      i0.ɵɵtext(106, \"3. Creacion de tablas \");\n      i0.ɵɵelement(107, \"br\");\n      i0.ɵɵtext(108, \"4. Datos anexados \");\n      i0.ɵɵelement(109, \"br\")(110, \"br\");\n      i0.ɵɵelementStart(111, \"strong\");\n      i0.ɵɵtext(112, \"3. especificas de SQL \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(113, \"br\");\n      i0.ɵɵtext(114, \" 1. Union \");\n      i0.ɵɵelement(115, \"br\");\n      i0.ɵɵtext(116, \"2. Paso de Datos \");\n      i0.ɵɵelement(117, \"br\");\n      i0.ɵɵtext(118, \"3. Creacion de tablas \");\n      i0.ɵɵelement(119, \"br\");\n      i0.ɵɵtext(120, \"4. Datos anexados \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(121, \"tr\")(122, \"td\");\n      i0.ɵɵtext(123, \"Consultas de Agrupacion o totales\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(124, \"td\");\n      i0.ɵɵtext(125, \" En estas consultas 1\\u00B0 se agrupan los registros y 2\\u00B0 realiza la operacion \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(126, \"td\")(127, \"strong\");\n      i0.ɵɵtext(128, \"Funciones de Agreagados\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(129, \"br\")(130, \"br\");\n      i0.ɵɵelementStart(131, \"strong\");\n      i0.ɵɵtext(132, \"AVG: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(133, \" Calcula el promedio \");\n      i0.ɵɵelement(134, \"br\");\n      i0.ɵɵelementStart(135, \"strong\");\n      i0.ɵɵtext(136, \"COUNT: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(137, \"Cuenta los registros \");\n      i0.ɵɵelement(138, \"br\");\n      i0.ɵɵelementStart(139, \"strong\");\n      i0.ɵɵtext(140, \"SUM: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(141, \"Suma los valores \");\n      i0.ɵɵelement(142, \"br\");\n      i0.ɵɵelementStart(143, \"strong\");\n      i0.ɵɵtext(144, \"MAX: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(145, \"Devuelve el maximo \");\n      i0.ɵɵelement(146, \"br\");\n      i0.ɵɵelementStart(147, \"strong\");\n      i0.ɵɵtext(148, \"MIN: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(149, \"Devielve el minimo \");\n      i0.ɵɵelement(150, \"br\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(151, \"tr\")(152, \"td\")(153, \"strong\");\n      i0.ɵɵtext(154, \"3 conceptos \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(155, \"td\");\n      i0.ɵɵtext(156, \" hay tres conceptos entorno a las Bases de Datos \");\n      i0.ɵɵelement(157, \"br\")(158, \"br\");\n      i0.ɵɵtext(159, \" 1. Lenguaje \");\n      i0.ɵɵelement(160, \"br\");\n      i0.ɵɵtext(161, \" 2. motor: Software que provee un conjunto de servicios encargados de administrar una base de datos. PostgreSql, SqlServer, mongoDb...entre otros \");\n      i0.ɵɵelement(162, \"br\");\n      i0.ɵɵtext(163, \" 3. servidor: Es el equipo que provee el hardware para que el motor instale la BD. Computador que tiene un motor de base de datos instalado y en ejecuci\\u00F3n.\");\n      i0.ɵɵelement(164, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(165, \"td\");\n      i0.ɵɵtext(166, \" Ahora bien estas bases de datos como PostgreSQL son \");\n      i0.ɵɵelementStart(167, \"strong\");\n      i0.ɵɵtext(168, \"Objecto-Relacional\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(169, \" esto quiere decir que tienen una estructura como la de programacion orientada a objetos donde tiene herencia, interfaces \");\n      i0.ɵɵelement(170, \"br\")(171, \"br\")(172, \"br\")(173, \"img\", 7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(174, \"tr\")(175, \"td\");\n      i0.ɵɵtext(176, \"Tipos de datos\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(177, \"td\")(178, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(179, \"tr\")(180, \"td\");\n      i0.ɵɵtext(181, \"Standar \");\n      i0.ɵɵelementStart(182, \"strong\");\n      i0.ɵɵtext(183, \"ACID\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(184, \"td\");\n      i0.ɵɵtext(185, \"Es el standar que deben de cumplir las bases de datos\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(186, \"td\");\n      i0.ɵɵtext(187, \" \\u2022 A: Atomicity \\u2013 Atomicidad -> Separar las funciones desarrolladas en la BD como peque\\u00F1as tareas y ejecutarlas como un todo. Si alguna tarea falla se hace un rollback(Se deshacen los cambios) \");\n      i0.ɵɵelement(188, \"br\")(189, \"br\");\n      i0.ɵɵtext(190, \" \\u2022 C: Consistency \\u2013 Consistencia -> Todo lo que se desarroll\\u00F3 en base al objeto relacional. Los datos tienen congruencia \");\n      i0.ɵɵelement(191, \"br\")(192, \"br\");\n      i0.ɵɵtext(193, \" \\u2022 I: Isolation \\u2013 Aislamiento -> Varias tareas ejecut\\u00E1ndose al mismo tiempo dentro de la BD\");\n      i0.ɵɵelement(194, \"br\")(195, \"br\");\n      i0.ɵɵtext(196, \" \\u2022 D: Durability \\u2013 Durabilidad -> Puedes tener seguridad que la informaci\\u00F3n no se perder\\u00E1 por un fallo catastr\\u00F3fico. PostgreSQL guarda la informaci\\u00F3n en una Bit\\u00E1cora\");\n      i0.ɵɵelement(197, \"br\")(198, \"br\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(199, \"tr\")(200, \"td\");\n      i0.ɵɵtext(201, \"Constraints(Restricciones)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(202, \"td\")(203, \"strong\");\n      i0.ɵɵtext(204, \"NOT NULL \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(205, \" : garantiza que los valores de una columna no puedan serlo NULL. \");\n      i0.ɵɵelement(206, \"br\")(207, \"br\");\n      i0.ɵɵelementStart(208, \"strong\");\n      i0.ɵɵtext(209, \"UNIQUE\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(210, \" : garantiza que los valores de una columna sean \\u00FAnicos en las filas de la misma tabla.\");\n      i0.ɵɵelement(211, \"br\")(212, \"br\");\n      i0.ɵɵelementStart(213, \"strong\");\n      i0.ɵɵtext(214, \"PRIMARY KEY\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(215, \" : una columna de clave primaria que identifica de forma exclusiva las filas de una tabla. Una tabla puede tener una y solo una clave principal. La restricci\\u00F3n de clave principal le permite definir la clave principal de una tabla.\");\n      i0.ɵɵelement(216, \"br\")(217, \"br\");\n      i0.ɵɵelementStart(218, \"strong\");\n      i0.ɵɵtext(219, \"CHECK\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(220, \" : una CHECKrestricci\\u00F3n garantiza que los datos deben satisfacer una expresi\\u00F3n booleana.\");\n      i0.ɵɵelement(221, \"br\")(222, \"br\");\n      i0.ɵɵelementStart(223, \"strong\");\n      i0.ɵɵtext(224, \"FOREING KEY\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(225, \" : garantiza que los valores en una columna o un grupo de columnas de una tabla existan en una columna o grupo de columnas en otra tabla. A diferencia de la clave principal, una tabla puede tener muchas claves externas.\");\n      i0.ɵɵelement(226, \"br\")(227, \"br\");\n      i0.ɵɵelementStart(228, \"strong\");\n      i0.ɵɵtext(229, \"Deafult\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(230, \" Coloca un valor por defecto cuando no hay un valor especificado \");\n      i0.ɵɵelement(231, \"br\")(232, \"br\");\n      i0.ɵɵelementStart(233, \"strong\");\n      i0.ɵɵtext(234, \"index \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(235, \"Se crea por columna para permitir busquedas mas rapidas \");\n      i0.ɵɵelement(236, \"br\")(237, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(238, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(239, \"tr\")(240, \"td\");\n      i0.ɵɵtext(241, \"SQL = RBD Bases de Datos Relacionales\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(242, \"td\");\n      i0.ɵɵtext(243, \" SqlServer = Microsoft \");\n      i0.ɵɵelement(244, \"br\");\n      i0.ɵɵtext(245, \" Oracle = Oracle \");\n      i0.ɵɵelement(246, \"br\");\n      i0.ɵɵtext(247, \" MySql(antes era de SunMicroSystem) = Oracle \");\n      i0.ɵɵelement(248, \"br\");\n      i0.ɵɵtext(249, \" MySql(Open Source) = Oracle \");\n      i0.ɵɵelement(250, \"br\");\n      i0.ɵɵtext(251, \" PostgreSQL(Open Source) \");\n      i0.ɵɵelement(252, \"br\");\n      i0.ɵɵtext(253, \" MariaDB \");\n      i0.ɵɵelement(254, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(255, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(256, \"tr\")(257, \"td\");\n      i0.ɵɵtext(258, \"NoSql = BD no relacionales = RDBMS (Relational DataBase Magement System)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(259, \"td\");\n      i0.ɵɵtext(260, \" mainCash \");\n      i0.ɵɵelement(261, \"br\");\n      i0.ɵɵtext(262, \" casandra de \");\n      i0.ɵɵelementStart(263, \"strong\");\n      i0.ɵɵtext(264, \"Facebook\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(265, \"br\");\n      i0.ɵɵtext(266, \" MongoDB \");\n      i0.ɵɵelement(267, \"br\");\n      i0.ɵɵtext(268, \" fireStore \");\n      i0.ɵɵelement(269, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(270, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(271, \"tr\")(272, \"td\");\n      i0.ɵɵtext(273, \"Tecnisismo\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(274, \"td\");\n      i0.ɵɵtext(275, \" * las entidades son las tablas \");\n      i0.ɵɵelementStart(276, \"strong\");\n      i0.ɵɵtext(277, \"rectangulo\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(278, \"br\");\n      i0.ɵɵtext(279, \" * los atributos con los campos \");\n      i0.ɵɵelementStart(280, \"strong\");\n      i0.ɵɵtext(281, \"ovalo\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(282, \"br\");\n      i0.ɵɵtext(283, \" * hay atributos que son multivaluado (tiene multiples valores) \");\n      i0.ɵɵelementStart(284, \"strong\");\n      i0.ɵɵtext(285, \"ovalo doble\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(286, \"br\");\n      i0.ɵɵtext(287, \" * hay atributos que compuestos que en ellos hay otros atributos \");\n      i0.ɵɵelementStart(288, \"strong\");\n      i0.ɵɵtext(289, \"motor\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(290, \" * hay atributos que se pueden inferir de acuerdo a la logica \");\n      i0.ɵɵelementStart(291, \"strong\");\n      i0.ɵɵtext(292, \"ovalo punteado\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(293, \"br\");\n      i0.ɵɵtext(294, \" * el atributo que identifica de manera unica a un objeto es \");\n      i0.ɵɵelementStart(295, \"strong\");\n      i0.ɵɵtext(296, \"subraydo\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(297, \" y este atributo puede ser natural o artificial es decir natural que no se puede separar del objeto(cedula, numero de serie..etc) y el artificial hace referencia al que le asignados de manera apropositamente la diferenciar un objeto del otro ejemplo un \");\n      i0.ɵɵelementStart(298, \"strong\");\n      i0.ɵɵtext(299, \"id\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(300, \"td\");\n      i0.ɵɵelement(301, \"img\", 8)(302, \"br\")(303, \"br\")(304, \"img\", 9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(305, \"tr\")(306, \"td\")(307, \"a\", 10);\n      i0.ɵɵtext(308, \" Entidades fuertes y debiles\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(309, \"td\");\n      i0.ɵɵtext(310, \" la fuerte hace referencia a que no dependen de nadie para existir \");\n      i0.ɵɵelement(311, \"br\");\n      i0.ɵɵtext(312, \" la debil hace si requieren de otras entidades para existir(pueden ser debiles por entidad o por existencia) \");\n      i0.ɵɵelement(313, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(314, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(315, \"tr\")(316, \"td\");\n      i0.ɵɵtext(317, \"Relaciones\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(318, \"td\");\n      i0.ɵɵtext(319, \"Las relaciones, representadas por un rombo, sirven para crear relaciones entre entidades. Por convenci\\u00F3n las relaciones son verbos que conectan entidades. Existen entidades multivaluadas o compuestas que tienen vida propia y se relacionan con otras entidades, por lo que se pueden normalizar (concepto que se explicar\\u00E1 luego) \");\n      i0.ɵɵelement(320, \"br\")(321, \"br\");\n      i0.ɵɵtext(322, \" Cardinalidad \");\n      i0.ɵɵelement(323, \"br\")(324, \"br\");\n      i0.ɵɵtext(325, \" Es una propiedad de las relaciones que indica la cantidad y correspondencia con la que puede estar relacionada una entidad y puede ser uno a uno, uno a varios, varios a uno y varios a varios.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(326, \"td\");\n      i0.ɵɵelement(327, \"img\", 11);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(328, \"tr\")(329, \"td\");\n      i0.ɵɵtext(330, \"Entidad: es algo similar a un objeto (POO) y representa algo en el mundo real, incluso algo abstracto. \");\n      i0.ɵɵelementStart(331, \"p\");\n      i0.ɵɵtext(332, \"Tienen atributos que son las cosas que los hacen ser una entidad y por convenci\\u00F3n se ponen en plural.\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(333, \"td\")(334, \"strong\");\n      i0.ɵɵtext(335, \"Los atributos\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(336, \" son aquellos que tienen atributos ellos mismos. \");\n      i0.ɵɵelement(337, \"br\");\n      i0.ɵɵelementStart(338, \"strong\");\n      i0.ɵɵtext(339, \"Los atributos llave\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(340, \" son aquellos que identifican a la entidad y no pueden ser repetidos. Existen: \");\n      i0.ɵɵelement(341, \"br\");\n      i0.ɵɵelementStart(342, \"p\");\n      i0.ɵɵtext(343, \"\\u2022\\tNaturales: son inherentes al objeto como el n\\u00FAmero de serie \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(344, \"p\");\n      i0.ɵɵtext(345, \"\\u2022\\tClave artificial: no es inherente al objeto y se asigna de manera arbitraria\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(346, \"td\");\n      i0.ɵɵelement(347, \"img\", 12);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(348, \"tr\")(349, \"td\", 13)(350, \"strong\");\n      i0.ɵɵtext(351, \"Teroria conjuntos\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(352, \"p\");\n      i0.ɵɵtext(353, \"Los diagramas de Venn son c\\u00EDrculos que se tocan en alg\\u00FAn punto para ver d\\u00F3nde est\\u00E1 la intersecci\\u00F3n de conjuntos.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(354, \"br\")(355, \"img\", 14);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(356, \"tr\")(357, \"td\")(358, \"strong\");\n      i0.ɵɵtext(359, \"JDBC: Java Data Base Connectivity\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(360, \"td\")(361, \"strong\");\n      i0.ɵɵtext(362, \"Clases\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(363, \"br\");\n      i0.ɵɵelementStart(364, \"strong\");\n      i0.ɵɵtext(365, \"DriverManager:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(366, \" es para cargar un driver (seg\\u00FAn el motor de BD). Nos permite crear una instancia de la conexi\\u00F3n. \");\n      i0.ɵɵelement(367, \"br\");\n      i0.ɵɵelementStart(368, \"strong\");\n      i0.ɵɵtext(369, \"Connection:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(370, \" para establecer conexiones con las bases de datos*.* Genera la sesi\\u00F3n, maneja todo el ciclo de vida de una sesi\\u00F3n cuando nos conectamos a una base de datos. \");\n      i0.ɵɵelement(371, \"br\");\n      i0.ɵɵelementStart(372, \"strong\");\n      i0.ɵɵtext(373, \"Statement:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(374, \" para ejecutar sentencias SQL y enviarlas a las BD. Nos ayuda a traer datos de una tabla. \");\n      i0.ɵɵelement(375, \"br\");\n      i0.ɵɵelementStart(376, \"strong\");\n      i0.ɵɵtext(377, \"PreparedStatement:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(378, \" hace lo mismo que Statement s\\u00F3lo que permite recibir par\\u00E1metros (clausula where). \");\n      i0.ɵɵelement(379, \"br\");\n      i0.ɵɵelementStart(380, \"strong\");\n      i0.ɵɵtext(381, \"ResultSet:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(382, \" para almacenar el resultado de la consulta y almacenarlos en nuestros objetos (modelos). Es una interfaz que nos ayudar\\u00E1 a manejar los datos obtenidos convirtiendo los datos en objetos. \");\n      i0.ɵɵelement(383, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(384, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(385, \"tr\")(386, \"td\")(387, \"strong\");\n      i0.ɵɵtext(388, \"Hibernate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(389, \"br\");\n      i0.ɵɵelementStart(390, \"a\", 15);\n      i0.ɵɵtext(391, \"conexion\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(392, \"td\")(393, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(394, \"tr\");\n      i0.ɵɵelement(395, \"td\")(396, \"td\")(397, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(398, \"tr\");\n      i0.ɵɵelement(399, \"td\")(400, \"td\")(401, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(402, \"tr\");\n      i0.ɵɵelement(403, \"td\")(404, \"td\")(405, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(406, \"tr\");\n      i0.ɵɵelement(407, \"td\")(408, \"td\")(409, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(410, \"tr\");\n      i0.ɵɵelement(411, \"td\")(412, \"td\")(413, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(414, \"tr\");\n      i0.ɵɵelement(415, \"td\")(416, \"td\")(417, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(418, \"tr\");\n      i0.ɵɵelement(419, \"td\")(420, \"td\")(421, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(422, \"tr\");\n      i0.ɵɵelement(423, \"td\")(424, \"td\")(425, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(426, \"tr\");\n      i0.ɵɵelement(427, \"td\")(428, \"td\")(429, \"td\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.lista);\n    }\n  },\n  dependencies: [i1.NgForOf, i2.RouterLink, i2.RouterLinkActive],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","MainBdComponent","constructor","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\HP\\Desktop\\juanTafur\\jugutafur\\Support-FrontEnd-Angular-full\\src\\app\\core\\components\\BD\\main-bd\\main-bd.component.html","C:\\Users\\HP\\Desktop\\juanTafur\\jugutafur\\Support-FrontEnd-Angular-full\\src\\app\\core\\components\\BD\\main-bd\\main-bd.component.ts"],"sourcesContent":["<div>\r\n    <nav>\r\n        <ul>\r\n            <li *ngFor=\"let menu of lista\">\r\n                <a routerLink=\"/{{menu}}\"\r\n                    routerLinkActive=\"active\">{{menu}}</a>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n</div>\r\n<div>\r\n <h3>paguinas de interes en el DATABASE:</h3>\r\n <a href=\"https://generatedata.com/\"> para crear datos en las tablas</a> <br>\r\n <a href=\"https://console.cloud.google.com/getting-started?pli=1\"> servicios administrados en la nube. Gratis!!!</a><br>\r\n\r\n</div>\r\n<div>\r\n    <div class=\"container\">\r\n        <table class=\"table table-striped table-hover table-bordered align-middle\">\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"col\">Referencia</th>\r\n                    <th scope=\"col\">Descripcion</th>\r\n                    <th scope=\"col\">Ejemplo</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    <td><strong>Diferentes conecciones BD</strong></td>\r\n                    <td>\r\n                        <p>1. <a href=\"https://github.com/carta87/RedSocialAndAPI/blob/master/src/main/java/com/platzi/mensajes_app/datababe/Conexion.java\">\r\n                                         forma sencilla de coneccion de una base datos MySql</a></p>\r\n                    </td>\r\n                    <td><p>1. se crea clase donde estaran los datos de la Conexion y en el metodo Main se crea objecto Conexion y se invoca su metodo. Esta es la forma mas sencilla,\r\n                        pero en un proyecto mas elaborado solo se llama el objecto de la conexion la capa DAO que se encarga de realizar las operaciones CRUD.\r\n                        Ademas se utiliza del paquete SQL las clases Conexion, PreparedStatement,  ResultSet y ResultSet</p>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Que es una base de datos </td>\r\n                    <td>\r\n                        Es una coleccion de datos almacenados de forma organizada con una logica coherente\r\n                    </td>\r\n                    <td></td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td>Ques es un registro </td>\r\n                    <td>\r\n                        Conjunto de campos que contienen datos relacionados con una misma entidad u obejto\r\n                    </td>\r\n                    <td></td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td>Que es una consulta</td>\r\n                    <td>\r\n                        Es una solicitud de informacion contenida en una bd o en una tabla\r\n                    </td>\r\n                    <td></td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td><strong>Comandos SQL</strong></td>\r\n                    <td>\r\n                        1. DDL: Data Defintion Languaje <br>\r\n                        2. DML: Data Manipluation Languaje <br>\r\n                        3. DCL: Data Control Languaje <br>\r\n                        4. TCL: Transaction Control Languaje <br>\r\n                    </td>\r\n                    <td>\r\n                        1. DDL: CREATE, AFTER, DROP, TRUNCATE,/ COMMENT, RENAME <br>\r\n                        2. DML: SELECT, INSERT, UPDATE, DELETE,/ MERGE, CALL, EXPLAIN PLAN, LOCK TABLE  <br>\r\n                        3. DCL: GRANT, ROLLBACK, SAVEPOINT, BEGIN, TRAIN <br>\r\n                        4. TCL: /COMMIT, ROLLBACK, SAVEPOINT, SET Transaction\r\n                    </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td>tipos de consulta</td>\r\n                    <td>\r\n                        1. Seleccion : No modifican la informacionde las tablas <br>\r\n                        2. Accion : Si modifican la informacionde las tablas <br>\r\n                        3. Especificas de sql : solo es posible realizarlas programando SQL<br>\r\n                    </td>\r\n                    <td>\r\n                        <strong>1.  Consultas de Seleccion </strong><br> 1. Normales <br>2. De Referencia Cruzadas <br>3. De duplicados <br>4. De no coincidencias <br><br>\r\n                        <strong>2.  Consultas de Accion </strong><br> 1. Actualizacion <br>2. Eliminacion <br>3. Creacion de tablas <br>4. Datos anexados <br><br>\r\n                        <strong>3.  especificas de SQL </strong><br> 1. Union <br>2. Paso de Datos <br>3. Creacion de tablas <br>4. Datos anexados\r\n                    </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td>Consultas de Agrupacion o totales</td>\r\n                    <td>\r\n                        En estas consultas 1° se agrupan los registros y 2° realiza la operacion\r\n                    </td>\r\n                    <td>\r\n                        <strong>Funciones de Agreagados</strong> <br><br>\r\n                        <strong>AVG: </strong> Calcula el promedio <br>\r\n                        <strong>COUNT: </strong>Cuenta los registros <br>\r\n                        <strong>SUM: </strong>Suma los valores <br>\r\n                        <strong>MAX: </strong>Devuelve el maximo <br>\r\n                        <strong>MIN: </strong>Devielve el minimo <br>\r\n                    </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td><strong>3 conceptos </strong></td>\r\n                    <td>\r\n                        hay tres conceptos entorno a las Bases de Datos <br><br>\r\n                        1. Lenguaje <br>\r\n                        2. motor: Software que provee un conjunto de servicios encargados de administrar una base de datos. PostgreSql, SqlServer, mongoDb...entre otros <br>\r\n                        3. servidor: Es el equipo que provee el hardware para que el motor instale la BD. Computador que tiene un motor de base de datos instalado y en ejecución.<br>\r\n                    </td>\r\n                    <td>\r\n                        Ahora bien estas bases de datos como PostgreSQL son <strong>Objecto-Relacional</strong> esto quiere decir que tienen una estructura como la de programacion orientada a objetos donde tiene herencia, interfaces <br><br><br>\r\n                        <img\r\n                        src=\"../../../../../assets/bd/tipoDato.png\"\r\n                        alt=\"tipoDato\"\r\n                        title=\"tipoDato\">\r\n                    </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td>Tipos de datos</td>\r\n                  <td></td>\r\n                  <td></td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td>Standar <strong>ACID</strong></td>\r\n                    <td>Es el standar que deben de cumplir las bases de datos</td>\r\n                    <td>\r\n                        • A: Atomicity – Atomicidad -> Separar las funciones desarrolladas en la BD como pequeñas tareas y ejecutarlas como un todo. Si alguna tarea falla se hace un rollback(Se deshacen los cambios) <br><br>\r\n                        • C: Consistency – Consistencia -> Todo lo que se desarrolló en base al objeto relacional. Los datos tienen congruencia <br><br>\r\n                        • I: Isolation – Aislamiento -> Varias tareas ejecutándose al mismo tiempo dentro de la BD<br><br>\r\n                        • D: Durability – Durabilidad -> Puedes tener seguridad que la información no se perderá por un fallo catastrófico. PostgreSQL guarda la información en una Bitácora<br><br>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Constraints(Restricciones)</td>\r\n                    <td>\r\n                        <strong>NOT NULL </strong> : garantiza que los valores de una columna no puedan serlo NULL. <br><br>\r\n                        <strong>UNIQUE</strong> : garantiza que los valores de una columna sean únicos en las filas de la misma tabla.<br><br>\r\n                        <strong>PRIMARY KEY</strong> : una columna de clave primaria que identifica de forma exclusiva las filas de una tabla. Una tabla puede tener una y solo una clave principal. La restricción de clave principal le permite definir la clave principal de una tabla.<br><br>\r\n                        <strong>CHECK</strong> : una CHECKrestricción garantiza que los datos deben satisfacer una expresión booleana.<br><br>\r\n                        <strong>FOREING KEY</strong> : garantiza que los valores en una columna o un grupo de columnas de una tabla existan en una columna o grupo de columnas en otra tabla. A diferencia de la clave principal, una tabla puede tener muchas claves externas.<br><br>\r\n                        <strong>Deafult</strong> Coloca un valor por defecto cuando no hay un valor especificado <br><br>\r\n                        <strong>index </strong>Se crea por columna para permitir busquedas mas rapidas <br><br>\r\n                    </td>\r\n                    <td></td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td>SQL = RBD Bases de Datos Relacionales</td>\r\n                    <td>\r\n                      SqlServer = Microsoft <br>\r\n                      Oracle = Oracle <br>\r\n                      MySql(antes era de SunMicroSystem) = Oracle <br>\r\n                      MySql(Open Source) = Oracle <br>\r\n                      PostgreSQL(Open Source) <br>\r\n                      MariaDB <br>\r\n                    </td>\r\n                    <td></td>\r\n                </tr>\r\n                <tr>\r\n                    <td>NoSql = BD no relacionales  = RDBMS (Relational DataBase Magement System)</td>\r\n                    <td>\r\n                      mainCash <br>\r\n                      casandra de <strong>Facebook</strong> <br>\r\n                      MongoDB <br>\r\n                      fireStore <br>\r\n                    </td>\r\n                    <td></td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td>Tecnisismo</td>\r\n                    <td>\r\n                      * las entidades son las tablas <strong>rectangulo</strong> <br>\r\n                      * los atributos con los campos <strong>ovalo</strong> <br>\r\n                      * hay atributos que son multivaluado (tiene multiples valores) <strong>ovalo doble</strong><br>\r\n                      * hay atributos que compuestos que en ellos hay otros atributos <strong>motor</strong>\r\n                      * hay atributos que se pueden inferir de acuerdo a la logica <strong>ovalo punteado</strong><br>\r\n                      * el atributo que identifica de manera unica a un objeto es <strong>subraydo</strong> y este atributo puede ser natural o artificial es decir natural que no se puede separar del objeto(cedula, numero de serie..etc) y el artificial hace referencia al que le asignados de manera apropositamente la diferenciar un objeto del otro ejemplo un <strong>id</strong>\r\n                    </td>\r\n                    <td>\r\n                      <img\r\n                      src=\"../../../../../assets/bd/BD.png\"\r\n                      alt=\"BD\"\r\n                      title=\"BD\"><br><br>\r\n                      <img\r\n                      src=\"../../../../../assets/bd/DB2.png\"\r\n                      alt=\"DB2\"\r\n                      title=\"DB2\">\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td> <a href=\"https://platzi.com/clases/1566-bd/20197-entidades-y-atributos/\">\r\n                      Entidades fuertes y debiles</a>\r\n                    </td>\r\n                    <td>\r\n                      la fuerte hace referencia a que no dependen de nadie para existir <br>\r\n                      la debil hace si requieren de otras entidades para existir(pueden ser debiles por entidad o por existencia) <br>\r\n                    </td>\r\n                    <td></td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td>Relaciones</td>\r\n                    <td>Las relaciones, representadas por un rombo, sirven para crear relaciones entre entidades. Por convención las relaciones son verbos que conectan entidades. Existen entidades multivaluadas o compuestas que tienen vida propia y se relacionan con otras entidades, por lo que se pueden normalizar (concepto que se explicará luego) <br><br>\r\n\r\n                    Cardinalidad <br><br>\r\n\r\n                    Es una propiedad de las relaciones que indica la cantidad y correspondencia con la que puede estar relacionada una entidad y puede ser uno a uno, uno a varios, varios a uno y varios a varios.</td>\r\n                    <td>\r\n                      <img\r\n                      src=\"../../../../../assets/bd/Relacion.png\"\r\n                      alt=\"Relacion\"\r\n                      title=\"Relacion\">\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Entidad: es algo similar a un objeto (POO) y representa algo en el mundo real, incluso algo abstracto.\r\n                        <p>Tienen atributos que son las cosas que los hacen ser una entidad y por convención se ponen en plural.</p> </td>\r\n                    <td>\r\n                        <strong>Los atributos</strong> son aquellos que tienen atributos ellos mismos. <br>\r\n                        <strong>Los atributos llave</strong> son aquellos que identifican a la entidad y no pueden ser repetidos. Existen: <br>\r\n                        <p>•\tNaturales: son inherentes al objeto como el número de serie </p>\r\n                        <p>•\tClave artificial: no es inherente al objeto y se asigna de manera arbitraria</p>\r\n                        </td>\r\n                    <td>\r\n                        <img src=\"../../../../../assets/bd/entidad.jpg\" alt=\"Muestra diagrama ER\" title=\"diagrama ER\">\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td colspan=\"3\">\r\n                        <strong>Teroria conjuntos</strong>\r\n                            <p>Los diagramas de Venn son círculos que se tocan en algún punto para ver dónde está la intersección de conjuntos.</p>\r\n                        <br>\r\n                        <img\r\n                        src=\"../../../../../assets/bd/teroriaConjuntos.png\"\r\n                        alt=\"Relations\"\r\n                        title=\"Relations\">\r\n                    </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td><strong>JDBC: Java Data Base Connectivity</strong></td>\r\n                    <td><strong>Clases</strong> <br>\r\n                        <strong>DriverManager:</strong> es para cargar un driver (según el motor de BD). Nos permite crear una instancia de la conexión. <br>\r\n                        <strong>Connection:</strong> para establecer conexiones con las bases de datos*.* Genera la sesión, maneja todo el ciclo de vida de una sesión cuando nos conectamos a una base de datos. <br>\r\n                        <strong>Statement:</strong> para ejecutar sentencias SQL y enviarlas a las BD. Nos ayuda a traer datos de una tabla. <br>\r\n                        <strong>PreparedStatement:</strong> hace lo mismo que Statement sólo que permite recibir parámetros (clausula where). <br>\r\n                        <strong>ResultSet:</strong> para almacenar el resultado de la consulta y almacenarlos en nuestros objetos (modelos). Es una interfaz que nos ayudará a manejar los datos obtenidos convirtiendo los datos en objetos. <br>\r\n                    </td>\r\n                    <td></td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td><strong>Hibernate</strong> <br><a href=\"https://www.youtube.com/watch?v=gG4C8S6c7v8\">conexion</a> </td>\r\n                  <td></td>\r\n                  <td></td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td></td>\r\n                    <td></td>\r\n                    <td></td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td></td>\r\n                  <td></td>\r\n                  <td></td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td></td>\r\n                    <td></td>\r\n                    <td></td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td></td>\r\n                  <td></td>\r\n                  <td></td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td></td>\r\n                    <td></td>\r\n                    <td></td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td></td>\r\n                  <td></td>\r\n                  <td></td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td></td>\r\n                    <td></td>\r\n                    <td></td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td></td>\r\n                  <td></td>\r\n                  <td></td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td></td>\r\n                    <td></td>\r\n                    <td></td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-main-bd',\r\n  templateUrl: './main-bd.component.html',\r\n  styleUrls: ['./main-bd.component.scss']\r\n})\r\nexport class MainBdComponent  {\r\n\r\n  lista =  [\"mySQL\", \"PostgreSQL\", \"SQLServer\", \"MongoDB\", \"Oracle\", \"NoSql-Firestore\"]\r\n  constructor() { }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}