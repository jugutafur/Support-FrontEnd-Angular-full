{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/router\";\nfunction MainTransversalesComponent_li_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\")(1, \"a\", 7);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const menu_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"/\", menu_r1, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(menu_r1);\n  }\n}\nexport class MainTransversalesComponent {\n  constructor() {\n    this.lista = [\"Fundamentos Programacion\", \"Settings\", \"Terminal\", \"Docker\", \"Redes\", \"CodeWarrior\", \"Analis de Datos\", \"WordPress\"];\n  }\n}\nMainTransversalesComponent.ɵfac = function MainTransversalesComponent_Factory(t) {\n  return new (t || MainTransversalesComponent)();\n};\nMainTransversalesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MainTransversalesComponent,\n  selectors: [[\"app-main-transversales\"]],\n  decls: 169,\n  vars: 1,\n  consts: [[4, \"ngFor\", \"ngForOf\"], [1, \"container\"], [1, \"table\", \"table-striped\", \"table-hover\", \"table-bordered\", \"align-middle\"], [\"scope\", \"col\"], [\"src\", \"../../../../../assets/backend/injectar.png\", \"alt\", \"injectar\", \"title\", \"injectar\"], [\"href\", \"https://platzi.com/clases/1630-mejor-codigo/22211-dependency-inversion-principle/\"], [\"href\", \"https://www.youtube.com/watch?v=lOg2IuQIp-s\"], [\"routerLinkActive\", \"active\", 3, \"routerLink\"]],\n  template: function MainTransversalesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"nav\")(2, \"ul\");\n      i0.ɵɵtemplate(3, MainTransversalesComponent_li_3_Template, 3, 2, \"li\", 0);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(4, \"div\", 1)(5, \"table\", 2)(6, \"thead\")(7, \"tr\")(8, \"th\", 3);\n      i0.ɵɵtext(9, \"Referencia\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"th\", 3);\n      i0.ɵɵtext(11, \"Descripcion\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"th\", 3);\n      i0.ɵɵtext(13, \"Ejemplo\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(14, \"tbody\")(15, \"tr\")(16, \"td\");\n      i0.ɵɵtext(17, \"Consideraciones\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"td\");\n      i0.ɵɵtext(19, \" Conjunto de componentes que \");\n      i0.ɵɵelementStart(20, \"strong\");\n      i0.ɵɵtext(21, \"Microsoft \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(22, \"pone a disposicion para el manejo de BD que van desde simples archivos de texto y hojas de excel hasta bases de datos complejas como oracle, SqlServer entre otros \");\n      i0.ɵɵelement(23, \"br\")(24, \"br\");\n      i0.ɵɵtext(25, \" * ADO es un conjunto de paquetes de software que \");\n      i0.ɵɵelementStart(26, \"strong\");\n      i0.ɵɵtext(27, \"Microsoft\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(28, \" pone a la disposicion o un framework para manejar BD\");\n      i0.ɵɵelement(29, \"br\")(30, \"br\");\n      i0.ɵɵtext(31, \" * OLEDB (Object Linking and Embedding for DataBases) (Enlace o encrustacion para bases de datos) class ---- implements(interface, interface, ...) extends(class) \");\n      i0.ɵɵelement(32, \"br\")(33, \"br\");\n      i0.ɵɵtext(34, \" Una clase puede implementar cuantas interfaces quiera \");\n      i0.ɵɵelementStart(35, \"strong\");\n      i0.ɵɵtext(36, \"PEROOO\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(37, \" solo puede extender 1 \");\n      i0.ɵɵelement(38, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(39, \"td\");\n      i0.ɵɵelement(40, \"img\", 4)(41, \"br\")(42, \"br\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(43, \"tr\")(44, \"td\");\n      i0.ɵɵtext(45, \"Principio \");\n      i0.ɵɵelementStart(46, \"strong\")(47, \"a\", 5);\n      i0.ɵɵtext(48, \"SOLID\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(49, \"td\")(50, \"a\", 6);\n      i0.ɵɵtext(51, \"Ver mas info\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(52, \"br\")(53, \"br\");\n      i0.ɵɵelementStart(54, \"u\");\n      i0.ɵɵtext(55, \"*S: Single Responsibility Principle (SRP)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(56, \"br\");\n      i0.ɵɵtext(57, \" Principio de responsabilidad unica o tambien conocido como principio de alta cohesion \");\n      i0.ɵɵelement(58, \"br\")(59, \"br\");\n      i0.ɵɵtext(60, \" Una clase solo debe tener una razon para existir y una unica responsabilidad \");\n      i0.ɵɵelement(61, \"br\")(62, \"br\");\n      i0.ɵɵelementStart(63, \"u\");\n      i0.ɵɵtext(64, \"*O: Open/Closed Principle (OCP)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(65, \"br\");\n      i0.ɵɵtext(66, \" Principio de abierto y cerrado \");\n      i0.ɵɵelement(67, \"br\")(68, \"br\");\n      i0.ɵɵtext(69, \" Una entidad de software debe quedar abierta para su extension y cerrada para su modificacion \");\n      i0.ɵɵelement(70, \"br\")(71, \"br\");\n      i0.ɵɵelementStart(72, \"u\");\n      i0.ɵɵtext(73, \"*L: Liskov Substitution Principle (LSP)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(74, \"br\");\n      i0.ɵɵtext(75, \" Principio de sustitucion de Liskov \");\n      i0.ɵɵelement(76, \"br\")(77, \"br\");\n      i0.ɵɵtext(78, \" Cada clase que hereda de otra puede usarse como su padre sin necesidad de conocer las diferencias entre ellas. La idea es que un padre herada a un hijo y ya .... el principio de sustitucion de Liskov aparece cuando en algun punto del codigo uno objeto requiera del padre y en esta caso pueda usar al hijo para funcionar ya que no habria diferncia \");\n      i0.ɵɵelement(79, \"br\")(80, \"br\");\n      i0.ɵɵelementStart(81, \"u\");\n      i0.ɵɵtext(82, \"*I: Interface Segregation Principle (ISP)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(83, \"br\");\n      i0.ɵɵtext(84, \" El principio de segregaci\\u00F3n de la interfaz \");\n      i0.ɵɵelement(85, \"br\")(86, \"br\");\n      i0.ɵɵtext(87, \" establece que los clientes de un programa dado s\\u00F3lo deber\\u00EDan conocer de \\u00E9ste aquellos m\\u00E9todos que realmente usan, y no aquellos que no necesitan usar. \");\n      i0.ɵɵelement(88, \"br\")(89, \"br\");\n      i0.ɵɵelementStart(90, \"u\");\n      i0.ɵɵtext(91, \"*D: Dependency Inversion Principle (DIP)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(92, \"br\");\n      i0.ɵɵtext(93, \" Una abstracci\\u00F3n se enfoca en la visi\\u00F3n externa de un objeto, separa el comportamiento espec\\u00EDfico de un objeto, a esta divisi\\u00F3n que realiza se le conoce como la barrera de abstracci\\u00F3n, la cu\\u00E1l se consigue aplicando el principio de m\\u00EDnimo compromiso. . \");\n      i0.ɵɵelement(94, \"br\")(95, \"br\");\n      i0.ɵɵtext(96, \" Pero\\u2026 \\u00BFQu\\u00E9 es el principio de m\\u00EDnimo compromiso? Se refiere al proceso por el cu\\u00E1l la interfaz de un objeto muestra su comportamiento espec\\u00EDfico y nada m\\u00E1s, absolutamente nada m\\u00E1s. \");\n      i0.ɵɵelement(97, \"br\")(98, \"br\");\n      i0.ɵɵtext(99, \" Ahora bien hay clases de alto nivel y otras de bajo nivel, las clases de alto nivel son las encargadas de llevar a cabo la logica del negocio y las de bajo nivel existen para ayudar a las de alto nivel cumplan con su proposito \");\n      i0.ɵɵelement(100, \"br\")(101, \"br\");\n      i0.ɵɵtext(102, \"Los modulos o clases de alto nivel no deben depender de los de bajo nivel ambos deben depender de abstracciones \");\n      i0.ɵɵelement(103, \"br\")(104, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(105, \"td\");\n      i0.ɵɵtext(106, \" S: Single Responsibility Principle (SRP)\");\n      i0.ɵɵelement(107, \"br\");\n      i0.ɵɵtext(108, \" O: Open/Closed Principle (OCP)\");\n      i0.ɵɵelement(109, \"br\");\n      i0.ɵɵtext(110, \" L: Liskov Substitution Principle (LSP)\");\n      i0.ɵɵelement(111, \"br\");\n      i0.ɵɵtext(112, \" I: Interface Segregation Principle (ISP)\");\n      i0.ɵɵelement(113, \"br\");\n      i0.ɵɵtext(114, \" D: Dependency Inversion Principle (DIP)\");\n      i0.ɵɵelement(115, \"br\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(116, \"tr\")(117, \"td\");\n      i0.ɵɵtext(118, \"inyeccion de depencias(DI)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(119, \"td\");\n      i0.ɵɵtext(120, \" Inyectar una depedencia es pasar la depedencia a la clase que lo necesita en lugar de crearla dentro del mismo componente o clase \");\n      i0.ɵɵelement(121, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(122, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(123, \"tr\")(124, \"td\");\n      i0.ɵɵtext(125, \"Inversion de Control (IoC)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(126, \"td\");\n      i0.ɵɵtext(127, \" Se trata de que un frameworl toma el control de los objetos y sea el quien cree o instacie los objetos \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(128, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(129, \"tr\");\n      i0.ɵɵelement(130, \"td\")(131, \"td\")(132, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(133, \"tr\");\n      i0.ɵɵelement(134, \"td\")(135, \"td\")(136, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(137, \"tr\");\n      i0.ɵɵelement(138, \"td\")(139, \"td\")(140, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(141, \"tr\");\n      i0.ɵɵelement(142, \"td\")(143, \"td\")(144, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(145, \"tr\");\n      i0.ɵɵelement(146, \"td\")(147, \"td\")(148, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(149, \"tr\");\n      i0.ɵɵelement(150, \"td\")(151, \"td\")(152, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(153, \"tr\");\n      i0.ɵɵelement(154, \"td\")(155, \"td\")(156, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(157, \"tr\");\n      i0.ɵɵelement(158, \"td\")(159, \"td\")(160, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(161, \"tr\");\n      i0.ɵɵelement(162, \"td\")(163, \"td\")(164, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(165, \"tr\");\n      i0.ɵɵelement(166, \"td\")(167, \"td\")(168, \"td\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.lista);\n    }\n  },\n  dependencies: [i1.NgForOf, i2.RouterLink, i2.RouterLinkActive],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","MainTransversalesComponent","constructor","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\HP\\Desktop\\juanTafur\\jugutafur\\Support-FrontEnd-Angular-full\\src\\app\\core\\components\\transversales\\components\\main-transversales\\main-transversales.component.html","C:\\Users\\HP\\Desktop\\juanTafur\\jugutafur\\Support-FrontEnd-Angular-full\\src\\app\\core\\components\\transversales\\components\\main-transversales\\main-transversales.component.ts"],"sourcesContent":["<div>\r\n  <nav>\r\n      <ul>\r\n          <li *ngFor=\"let menu of lista\">\r\n              <a routerLink=\"/{{menu}}\"\r\n                  routerLinkActive=\"active\">{{menu}}</a>\r\n          </li>\r\n      </ul>\r\n  </nav>\r\n</div>\r\n\r\n<div class=\"container\">\r\n  <table class=\"table table-striped table-hover table-bordered align-middle\">\r\n      <thead>\r\n          <tr>\r\n              <th scope=\"col\">Referencia</th>\r\n              <th scope=\"col\">Descripcion</th>\r\n              <th scope=\"col\">Ejemplo</th>\r\n          </tr>\r\n      </thead>\r\n      <tbody>\r\n          <tr>\r\n              <td>Consideraciones</td>\r\n              <td>\r\n                  Conjunto de componentes que <strong>Microsoft </strong>pone a disposicion para el manejo de BD que van desde simples archivos de texto y hojas de excel hasta bases de datos complejas como oracle, SqlServer entre otros <br><br>\r\n\r\n                  * ADO es un conjunto de paquetes de software que <strong>Microsoft</strong> pone a la disposicion o un framework para manejar BD<br><br>\r\n                  * OLEDB (Object Linking and Embedding for DataBases) (Enlace o encrustacion para bases de datos)\r\n                  class ---- implements(interface, interface, ...) extends(class) <br><br>\r\n                  Una clase puede implementar cuantas interfaces quiera <strong>PEROOO</strong> solo puede extender 1 <br>\r\n              </td>\r\n              <td>\r\n                  <img\r\n                  src=\"../../../../../assets/backend/injectar.png\"\r\n                  alt=\"injectar\"\r\n                  title=\"injectar\"><br><br>\r\n              </td>\r\n          </tr>\r\n\r\n          <tr>\r\n              <td>Principio <strong><a href=\"https://platzi.com/clases/1630-mejor-codigo/22211-dependency-inversion-principle/\">SOLID</a></strong></td>\r\n              <td>\r\n                  <a href=\"https://www.youtube.com/watch?v=lOg2IuQIp-s\">Ver mas info</a> <br><br>\r\n                  <u>*S: Single Responsibility Principle (SRP)</u><br>\r\n                  Principio de responsabilidad unica o tambien conocido como principio de alta cohesion  <br><br>\r\n                  Una clase solo debe tener una razon para existir y una unica responsabilidad <br><br>\r\n                  <u>*O: Open/Closed Principle (OCP)</u><br>\r\n                  Principio de abierto y cerrado <br><br>\r\n                  Una entidad de software debe quedar abierta para su extension y cerrada para su modificacion <br><br>\r\n                  <u>*L: Liskov Substitution Principle (LSP)</u><br>\r\n                  Principio de sustitucion de Liskov <br><br>\r\n                  Cada clase que hereda de otra puede usarse como su padre sin necesidad de conocer las diferencias entre ellas. La idea es que un padre herada a un hijo y ya .... el principio de sustitucion de Liskov aparece cuando en algun punto del codigo uno objeto requiera del padre y en esta caso pueda usar al hijo para funcionar ya que no habria diferncia <br><br>\r\n                  <u>*I: Interface Segregation Principle (ISP)</u><br>\r\n                  El principio de segregación de la interfaz <br><br>\r\n                  establece que los clientes de un programa dado sólo deberían conocer de éste aquellos métodos que realmente usan, y no aquellos que no necesitan usar. <br><br>\r\n                  <u>*D: Dependency Inversion Principle (DIP)</u><br>\r\n                  Una abstracción se enfoca en la visión externa de un objeto, separa el comportamiento específico de un objeto, a esta división que realiza se le conoce como la barrera de abstracción, la cuál se consigue aplicando el principio de mínimo compromiso.\r\n                  . <br><br>\r\n                  Pero… ¿Qué es el principio de mínimo compromiso? Se refiere al proceso por el cuál la interfaz de un objeto muestra su comportamiento específico y nada más, absolutamente nada más. <br><br>\r\n                  Ahora bien hay clases de alto nivel y otras de bajo nivel, las clases de alto nivel son las encargadas de llevar a cabo la logica del negocio y las de bajo nivel existen para ayudar a las de alto nivel cumplan con su proposito <br><br>Los modulos o clases de alto nivel no deben depender de los de bajo nivel ambos deben depender de abstracciones  <br><br>\r\n              </td>\r\n              <td>\r\n                  S: Single Responsibility Principle (SRP)<br>\r\n                  O: Open/Closed Principle (OCP)<br>\r\n                  L: Liskov Substitution Principle (LSP)<br>\r\n                  I: Interface Segregation Principle (ISP)<br>\r\n                  D: Dependency Inversion Principle (DIP)<br>\r\n              </td>\r\n          </tr>\r\n\r\n          <tr>\r\n              <td>inyeccion de depencias(DI)</td>\r\n              <td>\r\n                  Inyectar una depedencia es pasar la depedencia a la clase que lo necesita en lugar de crearla dentro del mismo componente o clase <br>\r\n              </td>\r\n              <td></td>\r\n          </tr>\r\n\r\n          <tr>\r\n              <td>Inversion de Control (IoC)</td>\r\n              <td>\r\n                  Se trata de que un frameworl toma el control de los objetos y sea el quien cree o instacie los objetos\r\n              </td>\r\n              <td></td>\r\n          </tr>\r\n\r\n          <tr>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n          </tr>\r\n\r\n          <tr>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n          </tr>\r\n          <tr>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n          </tr>\r\n\r\n          <tr>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n          </tr>\r\n          <tr>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n          </tr>\r\n\r\n          <tr>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n          </tr>\r\n          <tr>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n          </tr>\r\n\r\n          <tr>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n          </tr>\r\n          <tr>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n          </tr>\r\n\r\n          <tr>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n          </tr>\r\n      </tbody>\r\n  </table>\r\n</div>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-main-transversales',\r\n  templateUrl: './main-transversales.component.html',\r\n  styleUrls: ['./main-transversales.component.scss']\r\n})\r\nexport class MainTransversalesComponent  {\r\n\r\n  lista= [\"Fundamentos Programacion\", \"Settings\", \"Terminal\", \"Docker\",\"Redes\", \"CodeWarrior\",\"Analis de Datos\",\"WordPress\"]\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}