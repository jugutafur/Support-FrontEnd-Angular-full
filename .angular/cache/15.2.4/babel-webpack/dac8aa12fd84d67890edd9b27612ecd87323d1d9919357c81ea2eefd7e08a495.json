{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class GoComponent {\n  constructor() {\n    this.abrellave = \"{\";\n    this.cierrallave = \"}\";\n    this.abreDiamante = \"<\";\n    this.cierraDiamante = \">\";\n    this.abreParentesis = \"(\";\n    this.cierraParentesis = \")\";\n    this.abreCuadro = \"[\";\n    this.cierraCuadro = \"]\";\n  }\n}\nGoComponent.ɵfac = function GoComponent_Factory(t) {\n  return new (t || GoComponent)();\n};\nGoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: GoComponent,\n  selectors: [[\"app-go\"]],\n  decls: 647,\n  vars: 2,\n  consts: [[1, \"container\"], [\"href\", \"https://platzi.com/blog/multi-tenant-que-es-y-por-que-es-importante/\"], [\"href\", \"https://evaluandocloud.com/que-es-multi-tenancy/\"], [\"href\", \"https://es.wikipedia.org/wiki/Aplicaci%C3%B3n_monol%C3%ADtica#:~:text=En%20ingenier%C3%ADa%20de%20software%2C%20una,y%20sobre%20una%20misma%20plataforma.&text=%E2%80%8B%20Estas%20aplicaciones%20a%20veces%20son%20asociadas%20con%20unidades%20centrales.\"], [\"src\", \"../../../../../assets/backend/go/arquitecturaProject.png\", \"alt\", \"\"], [\"href\", \"https://airbrake.io/blog/software-design/domain-driven-design\"], [\"href\", \"https://es.wikipedia.org/wiki/Identificador_%C3%BAnico_global\"], [\"href\", \"https://www.teatroabadia.com/es/uploads/documentos/iagramas_del_uml.pdf\"], [\"href\", \"https://www.lucidchart.com/pages/es/que-es-el-lenguaje-unificado-de-modelado-uml\"], [1, \"table\", \"table-striped\", \"table-hover\", \"table-bordered\", \"align-middle\"], [\"scope\", \"col\"], [\"href\", \"https://golang.org/dl/\"], [\"href\", \"https://www.freecodecamp.org/news/setting-up-go-programming-language-on-windows-f02c8c14e2f/\"], [\"src\", \"../../../../../assets/backend/go/enteros.png\", \"alt\", \"\"], [\"src\", \"../../../../../assets/backend/go/entPos.png\", \"alt\", \"\"], [\"src\", \"../../../../../assets/backend/go/NumeDeci.png\", \"alt\", \"\"], [\"src\", \"../../../../../assets/backend/go/NumImg.png\", \"alt\", \"\"], [\"href\", \"https://pkg.go.dev/fmt#pkg-variables\"], [\"href\", \"https://platzi.com/clases/2232-programacion-golang/35751-structs-la-forma-de-hacer-clases-en-go/\"], [\"src\", \"../../../../../assets/backend/go/struct.png\", \"alt\", \"\"], [\"href\", \"https://pkg.go.dev/std\"], [\"href\", \"https://labix.org/mgo\"], [\"src\", \"../../../../../assets/backend/go/if.png\", \"alt\", \"\"], [\"src\", \"../../../../../assets/backend/go/for.png\", \"alt\", \"\"], [\"src\", \"../../../../../assets/backend/go/foreach.png\", \"alt\", \"\"], [\"src\", \"../../../../../assets/backend/go/for while.png\", \"alt\", \"\"], [\"src\", \"../../../../../assets/backend/go/forforever.png\", \"alt\", \"\"], [\"src\", \"../../../../../assets/backend/go/switch.png\", \"alt\", \"\"], [\"src\", \"../../../../../assets/backend/go/defer.png\", \"alt\", \"\"], [\"href\", \"https://codingornot.com/13-go-to-go-maps-en-golang\"], [\"src\", \"../../../../../assets/backend/go/Dictionary.png\", \"alt\", \"\"], [\"src\", \"../../../../../assets/backend/go/hashTable.png\", \"alt\", \"\"], [\"src\", \"../../../../../assets/backend/go/hashTable2.png\", \"alt\", \"\"], [\"href\", \"https://es.slideshare.net/angenio2/programacin-3-mapas-y-diccionarios-colecciones-parametrizadas\"], [\"src\", \"../../../../../assets/backend/go/Coleccion.png\", \"alt\", \"\"], [\"href\", \"https://platzi.com/clases/2232-programacion-golang/35752-modificadores-de-acceso-en-funciones-y-structs/\"], [\"src\", \"../../../../../assets/backend/go/acceso.png\", \"alt\", \"\"], [\"src\", \"../../../../../assets/backend/go/acceso1.png\", \"alt\", \"\"], [\"src\", \"../../../../../assets/backend/go/acceso2.png\", \"alt\", \"\"], [\"src\", \"../../../../../assets/backend/go/acceso3.png\", \"alt\", \"\"], [\"href\", \"https://platzi.com/clases/2232-programacion-golang/35753-structs-y-punteros/\"], [\"src\", \"../../../../../assets/backend/go/punteros.png\", \"alt\", \"\"], [\"href\", \"https://www.youtube.com/watch?v=WaOIianpwAA\"], [\"src\", \"../../../../../assets/backend/go/modulos.png\", \"alt\", \"modulos\"], [\"src\", \"../../../../../assets/backend/go/VersionadoSemantico.png\", \"alt\", \"VersionadoSemantico\"], [\"href\", \"https://www.youtube.com/watch?v=m3BKBviRE-0&list=PLt1J5u9LpM5-L-Ps8jjr91pKhFxAnxKJp&index=3\"], [\"src\", \"../../../../../assets/backend/go/Public y private.png\", \"alt\", \"Public and private\", \"title\", \"Public and private\"]],\n  template: function GoComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\");\n      i0.ɵɵtext(2, \" En arquitectura podemos encontrar diversos formas como \");\n      i0.ɵɵelementStart(3, \"a\", 1);\n      i0.ɵɵtext(4, \"sistemas Multitenant\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(5, \" tambien \");\n      i0.ɵɵelementStart(6, \"a\", 2);\n      i0.ɵɵtext(7, \" ver info\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(8, \" o \");\n      i0.ɵɵelementStart(9, \"a\", 3);\n      i0.ɵɵtext(10, \" sistemas monoliticos \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"br\")(12, \"br\")(13, \"img\", 4)(14, \"br\");\n      i0.ɵɵtext(15, \" Multitenant es una arquitectura de software que permite a una sola instancia de software servir a muchos clientes. una aplicaci\\u00F3n monol\\u00EDtica hace referencia a una aplicaci\\u00F3n software en la que la capa de interfaz de usuario y la capa de acceso a datos est\\u00E1n combinadas en un mismo programa y sobre una misma plataforma \");\n      i0.ɵɵelement(16, \"br\")(17, \"br\");\n      i0.ɵɵelementStart(18, \"a\", 5);\n      i0.ɵɵtext(19, \"DDD: domain-driven design\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(20, \"br\")(21, \"br\");\n      i0.ɵɵtext(22, \" Es una filosofia de dise\\u00F1o de arquitectura de software orientada al Dominio \");\n      i0.ɵɵelement(23, \"br\");\n      i0.ɵɵtext(24, \" No es una tecnolog\\u00EDa ni una metodolog\\u00EDa, este provee una estructura de pr\\u00E1cticas y terminolog\\u00EDas para tomar decisiones de dise\\u00F1o que enfoquen y aceleren el manejo de dominios complejos en los proyectos de software \");\n      i0.ɵɵelement(25, \"br\")(26, \"br\");\n      i0.ɵɵelementStart(27, \"a\", 6);\n      i0.ɵɵtext(28, \"GUID: Globally Universally Unique Identifier\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(29, \"br\")(30, \"br\");\n      i0.ɵɵtext(31, \" El identificador \\u00FAnico global, en ingl\\u00E9s: es un n\\u00FAmero pseudoaleatorio empleado en aplicaciones de software. El GUID es una implementaci\\u00F3n de Microsoft de un est\\u00E1ndar llamado universally unique identifier, especificado por la Open Software Foundation. Es esencialmente un n\\u00FAmero de 16 bytes \");\n      i0.ɵɵelement(32, \"br\")(33, \"br\");\n      i0.ɵɵelementStart(34, \"a\", 7);\n      i0.ɵɵtext(35, \"Diagramas del UML: Lenguaje unificado de modelado \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(36, \"br\")(37, \"br\");\n      i0.ɵɵtext(38, \" Es un lenguaje gr\\u00E1fico para visualizar, especificar, construir y documentar un sistema. La finalidad de los diagramas es presentar diversas perspectivas de un sistema, a las cuales se les conoce como modelo. Recordemos que un modelo es una representaci\\u00F3n simplificada de la realidad; el modelo UML describe lo que supuestamente har\\u00E1 un sistema, pero no dice c\\u00F3mo implementar dicho sistema. leer \");\n      i0.ɵɵelementStart(39, \"a\", 8);\n      i0.ɵɵtext(40, \"Documentacion\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(41, \"br\")(42, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(43, \"table\", 9)(44, \"thead\")(45, \"tr\")(46, \"th\", 10);\n      i0.ɵɵtext(47, \"Referencia\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(48, \"th\", 10);\n      i0.ɵɵtext(49, \"Descripcion\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(50, \"th\", 10);\n      i0.ɵɵtext(51, \"Ejemplo\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(52, \"tbody\")(53, \"tr\")(54, \"td\");\n      i0.ɵɵtext(55, \"consideraciones \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(56, \"td\");\n      i0.ɵɵtext(57, \" 1. Es un lenguaje compilado y tipado estastico; debe ser antes compilado \");\n      i0.ɵɵelement(58, \"br\");\n      i0.ɵɵtext(59, \" 2. Creado por Google 2009 (con la potencia de C pero con la sintaxis amigable de python) \");\n      i0.ɵɵelement(60, \"br\");\n      i0.ɵɵtext(61, \" 3. Soporte nativo para concurencia multitarea \");\n      i0.ɵɵelement(62, \"br\");\n      i0.ɵɵtext(63, \" 4. \");\n      i0.ɵɵelementStart(64, \"a\", 11);\n      i0.ɵɵtext(65, \"Documentacion\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(66, \"br\");\n      i0.ɵɵtext(67, \" 5. \");\n      i0.ɵɵelementStart(68, \"a\", 12);\n      i0.ɵɵtext(69, \"Como configurarlo\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(70, \"br\");\n      i0.ɵɵtext(71, \" 6. lenguaje de programacion de codigo abierto \");\n      i0.ɵɵelement(72, \"br\");\n      i0.ɵɵtext(73, \" 7. El garbash collector es mas eficente de 100 us a 10 us \");\n      i0.ɵɵelement(74, \"br\");\n      i0.ɵɵtext(75);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(76, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(77, \"tr\")(78, \"td\")(79, \"strong\");\n      i0.ɵɵtext(80, \"Docker y Kubernetes\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(81, \"td\");\n      i0.ɵɵtext(82, \" Para Despliege de Apps: Son plataformas para despliegue de aplicaciones de microservicios, \");\n      i0.ɵɵelementStart(83, \"strong\");\n      i0.ɵɵtext(84, \"Docker\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(85, \" crea un container en el cual se puede ejecutar la aplicacion y \");\n      i0.ɵɵelementStart(86, \"strong\");\n      i0.ɵɵtext(87, \"kubernete\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(88, \" toma el contenedor para desplegar la aplicacion con un escalamiento de forma horizontal \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(89, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(90, \"tr\")(91, \"td\");\n      i0.ɵɵtext(92, \"Variables de entorno GO\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(93, \"td\")(94, \"strong\");\n      i0.ɵɵtext(95, \"GOPATH :\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(96, \" El entorno en donde se van a desarrollar los programas\");\n      i0.ɵɵelement(97, \"br\");\n      i0.ɵɵelementStart(98, \"strong\");\n      i0.ɵɵtext(99, \"GOBIN :\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(100, \" Es donde se van a instalar todos los binarios listos para ser ejecutas en cualquier PATH \");\n      i0.ɵɵelement(101, \"br\");\n      i0.ɵɵelementStart(102, \"strong\");\n      i0.ɵɵtext(103, \"GOROOT :\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(104, \" Es donde se va a agregar el ejecutador de root \");\n      i0.ɵɵelement(105, \"br\")(106, \"br\");\n      i0.ɵɵtext(107, \" Despues con estas variables ya inicializados creamos el PATH para que sea posible crear en cualquier parte del equipo \");\n      i0.ɵɵelementStart(108, \"strong\");\n      i0.ɵɵtext(109, \"export PATH:$PATH:$GOBIN:$GOROOT/bin\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(110, \" ahora para verificar que este correctamente instalado \");\n      i0.ɵɵelementStart(111, \"a\", 12);\n      i0.ɵɵtext(112, \"Ver Documentacion \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(113, \" debemos verificar que la variable del path quede en las variables de entorno del equipo y despues verificamos que este apuntado a la carpeta donde se instalo con \");\n      i0.ɵɵelementStart(114, \"strong\");\n      i0.ɵɵtext(115, \"echo %PATH%\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(116, \" no devuelve como respuesta \");\n      i0.ɵɵelementStart(117, \"strong\");\n      i0.ɵɵtext(118, \"Go\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(119, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(120, \"tr\")(121, \"td\");\n      i0.ɵɵtext(122, \"Comandos en LINUX\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(123, \"td\");\n      i0.ɵɵtext(124, \" . . bashrc //actualizar el bash\");\n      i0.ɵɵelement(125, \"br\");\n      i0.ɵɵtext(126, \" godoc fmt //documentation de la liberia \");\n      i0.ɵɵelement(127, \"br\");\n      i0.ɵɵtext(128, \" go fmt xProyecto.go //Dar formato al proyecto \");\n      i0.ɵɵelement(129, \"br\");\n      i0.ɵɵtext(130, \" go version //ver la versiond de go instalada \");\n      i0.ɵɵelement(131, \"br\");\n      i0.ɵɵtext(132, \" go mod vendor //en caso de inconsistencia en alguna libreria \");\n      i0.ɵɵelement(133, \"br\");\n      i0.ɵɵtext(134, \" mkdir go //instalar el entorno para ello se crean los directorios \");\n      i0.ɵɵelement(135, \"br\");\n      i0.ɵɵtext(136, \" go build archivoX.go //con este comando compilamos el archivo para crear el ejecutable \");\n      i0.ɵɵelement(137, \"br\");\n      i0.ɵɵtext(138, \" go run archivo.go // lo ejecuta sin compilar ya que crea un archivo temporal \");\n      i0.ɵɵelement(139, \"br\");\n      i0.ɵɵtext(140, \" dentro de la carpeta go debe haber tres carpertas= \");\n      i0.ɵɵelementStart(141, \"strong\");\n      i0.ɵɵtext(142, \"bin pkg src\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(143, \" sino crearlas \");\n      i0.ɵɵelement(144, \"br\");\n      i0.ɵɵelementStart(145, \"strong\");\n      i0.ɵɵtext(146, \"bin: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(147, \"En esta carpeta se almacena todos los ejecutables que utilicemos o creemos \");\n      i0.ɵɵelementStart(148, \"strong\");\n      i0.ɵɵtext(149, \"pkg: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(150, \"Guarda cierto codigo de las dependencias librerias que utilicemos \");\n      i0.ɵɵelement(151, \"br\");\n      i0.ɵɵelementStart(152, \"strong\");\n      i0.ɵɵtext(153, \"src: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(154, \"Aca estara todo el codigo escrito en Go y el codigo de las librerias de terceros \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(155, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(156, \"tr\");\n      i0.ɵɵelement(157, \"td\");\n      i0.ɵɵelementStart(158, \"td\");\n      i0.ɵɵtext(159, \" si las variables son declaradas pero no inicializadas toman un valor por defecto \");\n      i0.ɵɵelement(160, \"br\");\n      i0.ɵɵtext(161, \" int = 0 \");\n      i0.ɵɵelement(162, \"br\");\n      i0.ɵɵtext(163, \" string = \\\"string vacio\\\" \");\n      i0.ɵɵelement(164, \"br\");\n      i0.ɵɵtext(165, \" bool = false \");\n      i0.ɵɵelement(166, \"br\");\n      i0.ɵɵtext(167, \" si las variables son declaradas e inicializadas pero no usadas no compila \");\n      i0.ɵɵelement(168, \"br\");\n      i0.ɵɵtext(169, \" variable := 8 //esto quiere decir que declara y go internamente ajusta el tipo de la variable \");\n      i0.ɵɵelement(170, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(171, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(172, \"tr\")(173, \"td\");\n      i0.ɵɵtext(174, \"int/uint\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(175, \"td\");\n      i0.ɵɵtext(176, \"al indicar el tipo de dato toma un buen performace el codigo \");\n      i0.ɵɵelement(177, \"br\")(178, \"br\");\n      i0.ɵɵelementStart(179, \"strong\");\n      i0.ɵɵtext(180, \"int\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(181, \" = pueden tomar valores negativos \");\n      i0.ɵɵelement(182, \"br\");\n      i0.ɵɵelementStart(183, \"strong\");\n      i0.ɵɵtext(184, \"uint\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(185, \" = si sabemos que siempre van a ser positivos \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(186, \"td\");\n      i0.ɵɵelement(187, \"img\", 13)(188, \"img\", 14);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(189, \"tr\")(190, \"td\");\n      i0.ɵɵtext(191, \"Float\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(192, \"td\");\n      i0.ɵɵelementStart(193, \"td\");\n      i0.ɵɵelement(194, \"img\", 15);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(195, \"tr\")(196, \"td\");\n      i0.ɵɵtext(197, \"Numeros Imaginarios\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(198, \"td\");\n      i0.ɵɵelementStart(199, \"td\");\n      i0.ɵɵelement(200, \"img\", 16);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(201, \"tr\")(202, \"td\");\n      i0.ɵɵtext(203, \"boolean\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(204, \"td\");\n      i0.ɵɵtext(205, \" textos y booleanos string = \\\"\\\" bool = true or false \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(206, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(207, \"tr\")(208, \"td\")(209, \"a\", 17);\n      i0.ɵɵtext(210, \"Inserccion de datos\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(211, \"td\");\n      i0.ɵɵtext(212, \" \\\"%s\\\" = indica que el valor que va hay es un string \");\n      i0.ɵɵelement(213, \"br\");\n      i0.ɵɵtext(214, \" \\\"%d\\\" = indica que el valor que va hay es un entero \");\n      i0.ɵɵelement(215, \"br\");\n      i0.ɵɵtext(216, \" \\\"%v\\\" = indica que el valor que va hay puede ser cualquiera \");\n      i0.ɵɵelement(217, \"br\");\n      i0.ɵɵtext(218, \" \\\"%T\\\" = Conocer el tipo de Xvariable \");\n      i0.ɵɵelement(219, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(220, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(221, \"tr\");\n      i0.ɵɵelement(222, \"td\");\n      i0.ɵɵelementStart(223, \"td\");\n      i0.ɵɵtext(224, \" Println = imprime con salto de linea \");\n      i0.ɵɵelement(225, \"br\");\n      i0.ɵɵtext(226, \" Print = imprime \");\n      i0.ɵɵelement(227, \"br\");\n      i0.ɵɵtext(228, \" printf = imprime insertando varaibles dentro del string \");\n      i0.ɵɵelement(229, \"br\");\n      i0.ɵɵtext(230, \" Sprintf = almacena un string en una variable \");\n      i0.ɵɵelement(231, \"br\");\n      i0.ɵɵtext(232, \" Fprintf(\\\"....\\\") // devolver un texto \");\n      i0.ɵɵelement(233, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(234, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(235, \"tr\")(236, \"td\")(237, \"a\", 18)(238, \"strong\");\n      i0.ɵɵtext(239, \"Struct\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(240, \"td\");\n      i0.ɵɵtext(241, \" Struct tipos de datos personalizados, se crea un objeto que sera un modelo para otro dato \");\n      i0.ɵɵelement(242, \"br\")(243, \"br\");\n      i0.ɵɵtext(244, \" En Go no existen las \");\n      i0.ɵɵelementStart(245, \"strong\");\n      i0.ɵɵtext(246, \"clases\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(247, \" en su lugar existen los \");\n      i0.ɵɵelementStart(248, \"strong\");\n      i0.ɵɵtext(249, \"struct\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(250, \"td\");\n      i0.ɵɵelement(251, \"img\", 19);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(252, \"tr\")(253, \"td\")(254, \"a\", 20);\n      i0.ɵɵtext(255, \"Librerias\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(256, \"td\")(257, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(258, \"tr\")(259, \"td\");\n      i0.ɵɵtext(260, \"trabajo con arrays\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(261, \"td\");\n      i0.ɵɵtext(262, \" MyArray = append(MyArray,\\\"Nuevo elem\\\") // agrega un elemento al final\");\n      i0.ɵɵelement(263, \"br\")(264, \"br\");\n      i0.ɵɵtext(265, \" fmt.Println(len(MyArray)) // \");\n      i0.ɵɵelementStart(266, \"strong\");\n      i0.ɵɵtext(267, \"len\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(268, \"(Muestra el tama\\u00F1o de MyArray) \");\n      i0.ɵɵelement(269, \"br\")(270, \"br\");\n      i0.ɵɵtext(271, \" fmt.Println(cap(MyArray)) // \");\n      i0.ɵɵelementStart(272, \"strong\");\n      i0.ɵɵtext(273, \"cap\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(274, \"(Muestra la capacidad de MyArray) \");\n      i0.ɵɵelement(275, \"br\")(276, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(277, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(278, \"tr\")(279, \"td\");\n      i0.ɵɵtext(280, \"ruteador \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(281, \"td\");\n      i0.ɵɵtext(282, \" Node js = Express \");\n      i0.ɵɵelement(283, \"br\");\n      i0.ɵɵtext(284, \" sinfoni = phpFundation \");\n      i0.ɵɵelement(285, \"br\");\n      i0.ɵɵtext(286, \" Go = gorilla/mux install = go get -u github.com/gorilla/mux \");\n      i0.ɵɵelement(287, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(288, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(289, \"tr\")(290, \"td\")(291, \"a\", 21);\n      i0.ɵɵtext(292, \"Conectar Go con mongoBD\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(293, \"td\")(294, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(295, \"tr\")(296, \"td\");\n      i0.ɵɵtext(297, \"if\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(298, \"td\");\n      i0.ɵɵelementStart(299, \"td\");\n      i0.ɵɵelement(300, \"img\", 22);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(301, \"tr\")(302, \"td\");\n      i0.ɵɵtext(303, \"for\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(304, \"td\");\n      i0.ɵɵelementStart(305, \"td\");\n      i0.ɵɵelement(306, \"img\", 23);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(307, \"tr\")(308, \"td\");\n      i0.ɵɵtext(309, \"forEach\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(310, \"td\");\n      i0.ɵɵelementStart(311, \"td\");\n      i0.ɵɵelement(312, \"img\", 24);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(313, \"tr\")(314, \"td\");\n      i0.ɵɵtext(315, \"For While\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(316, \"td\");\n      i0.ɵɵelementStart(317, \"td\");\n      i0.ɵɵelement(318, \"img\", 25);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(319, \"tr\")(320, \"td\");\n      i0.ɵɵtext(321, \"For forever\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(322, \"td\");\n      i0.ɵɵtext(323, \"se debe garantizar que en algun punto del programa se detenga o salga de este ciclo para no consumir maquina de manera ineficiente\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(324, \"td\");\n      i0.ɵɵelement(325, \"img\", 26);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(326, \"tr\")(327, \"td\");\n      i0.ɵɵtext(328, \"switch\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(329, \"td\");\n      i0.ɵɵelementStart(330, \"td\");\n      i0.ɵɵelement(331, \"img\", 27);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(332, \"tr\")(333, \"td\")(334, \"strong\");\n      i0.ɵɵtext(335, \"Keywords\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(336, \"td\")(337, \"strong\");\n      i0.ɵɵtext(338, \"defer\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(339, \": va a determinar la ultima ejecutacion antes de terminar una funcion y puede ser empleado para cerrar conexiones o archivos \");\n      i0.ɵɵelement(340, \"br\");\n      i0.ɵɵtext(341, \" las siguientes se usan en un ciclo for \");\n      i0.ɵɵelement(342, \"br\")(343, \"br\");\n      i0.ɵɵelementStart(344, \"strong\");\n      i0.ɵɵtext(345, \"break\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(346, \": saca al ultimo ambiente rompe el ciclo for\");\n      i0.ɵɵelement(347, \"br\");\n      i0.ɵɵelementStart(348, \"strong\");\n      i0.ɵɵtext(349, \"continue\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(350, \": Se emplea en casos tener tener un error controlado haciendo que se continue con la ejeccucion del programa no rompe el flujo de ejecucion \");\n      i0.ɵɵelement(351, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(352, \"td\");\n      i0.ɵɵelement(353, \"img\", 28);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(354, \"tr\")(355, \"td\");\n      i0.ɵɵtext(356, \"Array vs Slices\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(357, \"td\")(358, \"strong\");\n      i0.ɵɵtext(359, \"Array\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(360, \": tiene un tama\\u00F1o definido \");\n      i0.ɵɵelement(361, \"br\");\n      i0.ɵɵelementStart(362, \"strong\");\n      i0.ɵɵtext(363, \"Slices\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(364, \": No tiene tama\\u00F1o definido\");\n      i0.ɵɵelement(365, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(366, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(367, \"tr\")(368, \"td\")(369, \"a\", 29);\n      i0.ɵɵtext(370, \"Maps\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(371, \" y Diccionarios \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(372, \"td\");\n      i0.ɵɵtext(373, \" Un map nos permite almacenar informaci\\u00F3n de forma similar a como lo hac\\u00EDamos con los arreglos o los slices pero con la particularidad de que cada elemento de un map tiene asociada una llave \\u00FAnica. \");\n      i0.ɵɵelement(374, \"br\")(375, \"br\");\n      i0.ɵɵtext(376, \" Es una estructura de datos muy conveniente cuando tienes dos o mas listas que se relacionan entre si ya que con el caso de los maps tenemos acceso mediante una llave y valor ademas ten en cuenta que los maps son mas eficientes que manejar slices o arrays ya que de forma nativa ellos implementan concurrencia para poder interacturar enter las operaciones que se vayan a ejecutar con ellos \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(377, \"td\");\n      i0.ɵɵtext(378, \" En caso de Pyton son llamados Diccionarios y caso de Go son Maps \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(379, \"tr\")(380, \"td\");\n      i0.ɵɵtext(381, \"Diccionarios\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(382, \"td\");\n      i0.ɵɵtext(383, \" Un diccionario agrupa elementos identificandolos por medio de claves unicas, Es una colleccion de pares formados por su contenido y clave de acceso, tambien denominados mapas \");\n      i0.ɵɵelement(384, \"br\")(385, \"br\");\n      i0.ɵɵtext(386, \" La clase abstracta Dictionary es la interfaz para crear diccionarios en las colecciones historicas (vector, stack, Dictionary, HashTable, Enumeration) y procesa la coleccion como si fuera un array asociativo ak que se accede por una clave \");\n      i0.ɵɵelement(387, \"br\")(388, \"br\");\n      i0.ɵɵtext(389, \" la clave y el valor de cada elemento son de tipo objeto \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(390, \"td\");\n      i0.ɵɵelement(391, \"img\", 30);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(392, \"tr\")(393, \"td\");\n      i0.ɵɵtext(394, \"HashTable\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(395, \"td\");\n      i0.ɵɵtext(396, \" Extiende Dictionary, permitiendo que se pueda utilizar para agrupar datos asociativos, este se comporta como una tabla hash, Dispersa los elementos segun el codigo que devuelve el metodo hashCode() del obejto clave \");\n      i0.ɵɵelement(397, \"br\")(398, \"br\");\n      i0.ɵɵtext(399, \" La clase de los objetos \\\"clave\\\" debe disponer del metodo \");\n      i0.ɵɵelementStart(400, \"strong\");\n      i0.ɵɵtext(401, \"int hashCode()\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(402, \" utilizado para dispersar el elemento, tambien deben deisponer del metodo \");\n      i0.ɵɵelementStart(403, \"strong\");\n      i0.ɵɵtext(404, \"equals()\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(405, \" para poder realizar busquedas y comparaciones \");\n      i0.ɵɵelement(406, \"br\")(407, \"br\");\n      i0.ɵɵtext(408, \" Sirve para comparar objetos de una forma mas rapida en estructuras Hash ya que solo devuelve un numero entero(key) \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(409, \"td\");\n      i0.ɵɵelement(410, \"img\", 31)(411, \"img\", 32);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(412, \"tr\")(413, \"td\");\n      i0.ɵɵtext(414, \"Colecciones\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(415, \"td\")(416, \"a\", 33);\n      i0.ɵɵtext(417, \"Revisar mas funciones especiales \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(418, \"br\")(419, \"br\");\n      i0.ɵɵtext(420, \" Map \");\n      i0.ɵɵelement(421, \"br\");\n      i0.ɵɵtext(422, \" HashMap \");\n      i0.ɵɵelement(423, \"br\");\n      i0.ɵɵtext(424, \" treeMap \");\n      i0.ɵɵelement(425, \"br\");\n      i0.ɵɵtext(426, \" Declaracion de tipo parametrizado \");\n      i0.ɵɵelement(427, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(428, \"td\");\n      i0.ɵɵelement(429, \"img\", 34);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(430, \"tr\")(431, \"td\");\n      i0.ɵɵelement(432, \"a\", 35);\n      i0.ɵɵtext(433, \"Modificadores de acceso\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(434, \"td\");\n      i0.ɵɵtext(435, \" si la varaible, function tiene la primera letra : \");\n      i0.ɵɵelement(436, \"br\");\n      i0.ɵɵelementStart(437, \"strong\");\n      i0.ɵɵtext(438, \"mayuscula\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(439, \" = publico \");\n      i0.ɵɵelement(440, \"br\");\n      i0.ɵɵelementStart(441, \"strong\");\n      i0.ɵɵtext(442, \"minuscula\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(443, \" = privado \");\n      i0.ɵɵelement(444, \"br\")(445, \"br\");\n      i0.ɵɵtext(446, \" Debe tener un comentario, y se debe importar el paquete y opcionalmente se le puede colocar un alias si la varaible empieza por minuscula es privada es por esta razon que da error en la segunda imagen \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(447, \"td\");\n      i0.ɵɵelement(448, \"img\", 36)(449, \"br\")(450, \"br\")(451, \"img\", 37)(452, \"br\")(453, \"br\")(454, \"img\", 38)(455, \"br\")(456, \"br\")(457, \"img\", 39);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(458, \"tr\")(459, \"td\")(460, \"a\", 40);\n      i0.ɵɵtext(461, \"Punteros\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(462, \"td\");\n      i0.ɵɵtext(463, \" los punteros Son acceso a la memoria \");\n      i0.ɵɵelement(464, \"br\")(465, \"br\");\n      i0.ɵɵtext(466, \" Cuando se crea una variable lo que hace el runtime es crear una direccion de memoria y en ese espacio guarda Xcosas \");\n      i0.ɵɵelement(467, \"br\")(468, \"br\");\n      i0.ɵɵtext(469, \" se usa \");\n      i0.ɵɵelementStart(470, \"strong\");\n      i0.ɵɵtext(471, \"&\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(472, \" para hacer Referencia a la direccion de memoria linea 9 el valor de b va a ser la ubicacion de memoria de a \");\n      i0.ɵɵelement(473, \"br\")(474, \"br\");\n      i0.ɵɵtext(475, \" se usa \");\n      i0.ɵɵelementStart(476, \"strong\");\n      i0.ɵɵtext(477, \"*\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(478, \" para hacer Referencia al valor que hay guardado en Xdireccion linea 14 *b= 4 \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(479, \"td\");\n      i0.ɵɵelement(480, \"img\", 41);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(481, \"tr\")(482, \"td\")(483, \"a\", 42);\n      i0.ɵɵtext(484, \"Modulos\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(485, \"td\");\n      i0.ɵɵtext(486, \" Al trabajar por fuera del \");\n      i0.ɵɵelementStart(487, \"strong\");\n      i0.ɵɵtext(488, \"GOPATH\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(489, \" debemos indicar el espacio donde estaran las librerias de terceros que requeriran los proyectosque se estan implementando \");\n      i0.ɵɵelement(490, \"br\")(491, \"br\");\n      i0.ɵɵtext(492, \"go init mod github.com/jugutafur/nombrePaquete \");\n      i0.ɵɵelement(493, \"br\")(494, \"br\");\n      i0.ɵɵelementStart(495, \"strong\");\n      i0.ɵɵtext(496, \"El versionado semantico\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(497, \" hace referncia a la correcta identificacion de los versiones de las librerias donde: \");\n      i0.ɵɵelement(498, \"br\")(499, \"br\");\n      i0.ɵɵtext(500, \" 1\\u00B0. Version mayor \");\n      i0.ɵɵelement(501, \"br\");\n      i0.ɵɵtext(502, \" 2\\u00B0. Version menor \");\n      i0.ɵɵelement(503, \"br\");\n      i0.ɵɵtext(504, \" 3\\u00B0. Parches y \");\n      i0.ɵɵelement(505, \"br\");\n      i0.ɵɵtext(506, \" 4\\u00B0. Realise o precantidados (si se requieren hacer pruebas con otros desarrolladores o otras pruebas beta de la palicacion \\\"version beta, alfa...etc\\\") \");\n      i0.ɵɵelement(507, \"br\")(508, \"br\");\n      i0.ɵɵtext(509, \" Ahora despues de crear el archivo \");\n      i0.ɵɵelementStart(510, \"strong\");\n      i0.ɵɵtext(511, \"go.mod\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(512, \" crea un archivo \");\n      i0.ɵɵelementStart(513, \"strong\");\n      i0.ɵɵtext(514, \"go.sum \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(515, \"En este archivo.sum estara identificado de manera inequivoca las versiones de las librerias que son empleadas en el proyecto pro medio de \");\n      i0.ɵɵelementStart(516, \"strong\");\n      i0.ɵɵtext(517, \"fecha y hash\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(518, \"td\");\n      i0.ɵɵelement(519, \"img\", 43)(520, \"br\")(521, \"br\")(522, \"img\", 44);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(523, \"tr\")(524, \"td\");\n      i0.ɵɵtext(525, \"Para ver en que modulo me encuentro en el workspace\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(526, \"td\");\n      i0.ɵɵtext(527, \" go list \");\n      i0.ɵɵelement(528, \"br\");\n      i0.ɵɵtext(529, \" go list all //me muestra todos los modulos que estan en $GOPATH\");\n      i0.ɵɵelement(530, \"br\");\n      i0.ɵɵtext(531, \" go list -m all //muestra puntualmente los modulos que estan siendo usandas en la ruta donde se ejecuta este comando \");\n      i0.ɵɵelement(532, \"br\");\n      i0.ɵɵtext(533, \" go list -m -versions Xpaquete //muestra todas las versiones disponibles \");\n      i0.ɵɵelement(534, \"br\");\n      i0.ɵɵtext(535, \" go list verify //Verifica que la version del modulo no ha sido modificada \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(536, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(537, \"tr\")(538, \"td\");\n      i0.ɵɵtext(539, \"Public and private\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(540, \"td\");\n      i0.ɵɵtext(541, \" 1. se puede definir un \");\n      i0.ɵɵelementStart(542, \"strong\");\n      i0.ɵɵtext(543, \"alias\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(544, \"br\")(545, \"br\");\n      i0.ɵɵtext(546, \" 2. esta ubicacion arranca desde el GOPATH recordar que: GOPATH= C/Go perooooooo arranca desde src principal \");\n      i0.ɵɵelementStart(547, \"strong\");\n      i0.ɵɵtext(548, \"NOTA \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(549, \"esto es en el caso de trabajar desde las carpetas de donde esta instalado Go en C pero si trabajar en cualquier otra ubicacion debes trabajar con modulos es decir con \");\n      i0.ɵɵelementStart(550, \"a\", 42);\n      i0.ɵɵtext(551, \"go.mod\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(552, \" ver mas \");\n      i0.ɵɵelementStart(553, \"a\", 45);\n      i0.ɵɵtext(554, \"inf\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(555, \"br\")(556, \"br\");\n      i0.ɵɵtext(557, \" 3. para llamar al struct se puede por el alias o por el nombre del pakage donde se define o nombre del mismo Xarchivo.go que por lo general se llaman igual \");\n      i0.ɵɵelement(558, \"br\")(559, \"br\");\n      i0.ɵɵtext(560, \" 4. La salida da valores por defecto cuando no se definen \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(561, \"td\");\n      i0.ɵɵelement(562, \"img\", 46);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(563, \"tr\");\n      i0.ɵɵelement(564, \"td\")(565, \"td\")(566, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(567, \"tr\");\n      i0.ɵɵelement(568, \"td\")(569, \"td\")(570, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(571, \"tr\");\n      i0.ɵɵelement(572, \"td\")(573, \"td\")(574, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(575, \"tr\");\n      i0.ɵɵelement(576, \"td\")(577, \"td\")(578, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(579, \"tr\");\n      i0.ɵɵelement(580, \"td\")(581, \"td\")(582, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(583, \"tr\");\n      i0.ɵɵelement(584, \"td\")(585, \"td\")(586, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(587, \"tr\");\n      i0.ɵɵelement(588, \"td\")(589, \"td\")(590, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(591, \"tr\");\n      i0.ɵɵelement(592, \"td\")(593, \"td\")(594, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(595, \"tr\");\n      i0.ɵɵelement(596, \"td\")(597, \"td\")(598, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(599, \"tr\");\n      i0.ɵɵelement(600, \"td\")(601, \"td\")(602, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(603, \"tr\");\n      i0.ɵɵelement(604, \"td\")(605, \"td\")(606, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(607, \"tr\");\n      i0.ɵɵelement(608, \"td\")(609, \"td\")(610, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(611, \"tr\");\n      i0.ɵɵelement(612, \"td\")(613, \"td\")(614, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(615, \"tr\");\n      i0.ɵɵelement(616, \"td\")(617, \"td\")(618, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(619, \"tr\");\n      i0.ɵɵelement(620, \"td\")(621, \"td\")(622, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(623, \"tr\");\n      i0.ɵɵelement(624, \"td\")(625, \"td\")(626, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(627, \"tr\");\n      i0.ɵɵelement(628, \"td\")(629, \"td\")(630, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(631, \"tr\");\n      i0.ɵɵelement(632, \"td\")(633, \"td\")(634, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(635, \"tr\");\n      i0.ɵɵelement(636, \"td\")(637, \"td\")(638, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(639, \"tr\");\n      i0.ɵɵelement(640, \"td\")(641, \"td\")(642, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(643, \"tr\");\n      i0.ɵɵelement(644, \"td\")(645, \"td\")(646, \"td\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(75);\n      i0.ɵɵtextInterpolate2(\" \", ctx.abreDiamante, \" \", ctx.cierraDiamante, \" No se les llaman \\u201COperadores Diamante\\u201D, su nombre Oficial es Gen\\u00E9ricos \");\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["GoComponent","constructor","abrellave","cierrallave","abreDiamante","cierraDiamante","abreParentesis","cierraParentesis","abreCuadro","cierraCuadro","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\HP\\Desktop\\JuanTafur\\Support-FrontEnd-Angular-full\\src\\app\\core\\components\\BackEnd\\go\\go.component.ts","C:\\Users\\HP\\Desktop\\JuanTafur\\Support-FrontEnd-Angular-full\\src\\app\\core\\components\\BackEnd\\go\\go.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-go',\r\n  templateUrl: './go.component.html',\r\n  styleUrls: ['./go.component.scss']\r\n})\r\nexport class GoComponent {\r\n\r\n  public abrellave: string;\r\n  public cierrallave: string; \r\n  public abreDiamante: string;\r\n  public cierraDiamante: string;\r\n  public abreParentesis: string;\r\n  public cierraParentesis: string;\r\n  public abreCuadro: string;\r\n  public cierraCuadro: string;\r\n\r\n  constructor() {\r\n    this.abrellave= \"{\";\r\n    this.cierrallave=\"}\";\r\n    this.abreDiamante= \"<\";\r\n    this.cierraDiamante= \">\";\r\n    this.abreParentesis= \"(\";\r\n    this.cierraParentesis= \")\";\r\n    this.abreCuadro= \"[\";\r\n    this.cierraCuadro= \"]\";\r\n  }\r\n}","<div class=\"container\">\r\n    <div>\r\n        En arquitectura podemos encontrar diversos formas como <a href=\"https://platzi.com/blog/multi-tenant-que-es-y-por-que-es-importante/\">sistemas Multitenant</a> tambien <a href=\"https://evaluandocloud.com/que-es-multi-tenancy/\"> ver info</a> o <a href=\"https://es.wikipedia.org/wiki/Aplicaci%C3%B3n_monol%C3%ADtica#:~:text=En%20ingenier%C3%ADa%20de%20software%2C%20una,y%20sobre%20una%20misma%20plataforma.&text=%E2%80%8B%20Estas%20aplicaciones%20a%20veces%20son%20asociadas%20con%20unidades%20centrales.\"> sistemas monoliticos </a> <br><br>\r\n        <img src=\"../../../../../assets/backend/go/arquitecturaProject.png\" alt=\"\"> <br>\r\n        Multitenant es una arquitectura de software que permite a una sola instancia de software servir a muchos clientes.  una aplicación monolítica hace referencia a una aplicación software en la que la capa de interfaz de usuario y la capa de acceso a datos están combinadas en un mismo programa y sobre una misma plataforma <br><br>\r\n\r\n        <a href=\"https://airbrake.io/blog/software-design/domain-driven-design\">DDD: domain-driven design</a><br><br>\r\n        Es una filosofia de diseño de arquitectura de software orientada al Dominio <br>\r\n        No es una tecnología ni una metodología, este provee una estructura de prácticas y terminologías para tomar decisiones de diseño que enfoquen y aceleren el manejo de dominios complejos en los proyectos de software <br><br>\r\n\r\n        <a href=\"https://es.wikipedia.org/wiki/Identificador_%C3%BAnico_global\">GUID: Globally Universally Unique Identifier</a> <br><br>\r\n        El identificador único global, en inglés: es un número pseudoaleatorio empleado en aplicaciones de software. El GUID es una implementación de Microsoft de un estándar llamado universally unique identifier, especificado por la Open Software Foundation. Es esencialmente un número de 16 bytes <br><br>\r\n\r\n        <a href=\"https://www.teatroabadia.com/es/uploads/documentos/iagramas_del_uml.pdf\">Diagramas del UML: Lenguaje unificado de modelado </a> <br><br>\r\n        Es un lenguaje gráfico para visualizar, especificar, construir y documentar un sistema. La finalidad de los diagramas es presentar diversas perspectivas de un sistema, a las cuales se les conoce como modelo. Recordemos que un modelo es una representación simplificada de la realidad; el modelo UML describe lo que supuestamente hará un sistema, pero no dice cómo implementar dicho sistema. leer <a href=\"https://www.lucidchart.com/pages/es/que-es-el-lenguaje-unificado-de-modelado-uml\">Documentacion</a> <br><br>\r\n\r\n\r\n    </div>\r\n    <table class=\"table table-striped table-hover table-bordered align-middle\">\r\n        <thead>\r\n            <tr>\r\n                <th scope=\"col\">Referencia</th>\r\n                <th scope=\"col\">Descripcion</th>\r\n                <th scope=\"col\">Ejemplo</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr>\r\n                <td>consideraciones </td>\r\n                <td>\r\n                    1. Es un lenguaje compilado y tipado estastico; debe ser antes compilado <br>\r\n                    2. Creado por Google 2009 (con la potencia de C pero con la sintaxis amigable de python) <br>\r\n                    3. Soporte nativo para concurencia multitarea <br>\r\n                    4. <a href=\"https://golang.org/dl/\">Documentacion</a> <br>\r\n                    5. <a href=\"https://www.freecodecamp.org/news/setting-up-go-programming-language-on-windows-f02c8c14e2f/\">Como configurarlo</a> <br>\r\n                    6. lenguaje de programacion de codigo abierto <br>\r\n                    7. El garbash collector es mas eficente de 100 us a 10 us <br>\r\n                    {{abreDiamante}} {{cierraDiamante}}\r\n                    No se les llaman “Operadores Diamante”, su nombre Oficial es Genéricos\r\n                </td>\r\n                <td></td>\r\n            </tr>\r\n            \r\n            <tr>\r\n                <td><strong>Docker y Kubernetes</strong></td>\r\n                <td>\r\n                    Para Despliege de Apps: Son plataformas para despliegue de aplicaciones de microservicios, <strong>Docker</strong> crea un container en el cual se puede ejecutar la aplicacion y <strong>kubernete</strong> toma el contenedor para desplegar la aplicacion con un escalamiento de forma horizontal \r\n                </td>\r\n                <td></td>\r\n            </tr>\r\n    \r\n            <tr>\r\n                <td>Variables de entorno GO</td>\r\n                <td>\r\n                    <strong>GOPATH :</strong> El entorno en donde se van a desarrollar los programas<br>\r\n                    <strong>GOBIN :</strong> Es donde se van a instalar todos los binarios listos para ser ejecutas en cualquier PATH  <br>  \r\n                    <strong>GOROOT :</strong> Es donde se va a agregar el ejecutador de root <br> <br>\r\n                    Despues con estas variables ya inicializados creamos el PATH para que sea posible crear en cualquier parte del equipo \r\n                    <strong>export PATH:$PATH:$GOBIN:$GOROOT/bin</strong>\r\n                    ahora para verificar que este correctamente instalado <a href=\"https://www.freecodecamp.org/news/setting-up-go-programming-language-on-windows-f02c8c14e2f/\">Ver Documentacion </a> debemos verificar que la variable del path quede en las variables de entorno del equipo y despues verificamos que este apuntado a la carpeta donde se instalo con <strong>echo %PATH%</strong> no devuelve como respuesta <strong>Go</strong>\r\n                </td>\r\n                <td></td>\r\n            </tr>\r\n    \r\n\r\n                \r\n            <tr>\r\n                <td>Comandos en LINUX</td>\r\n                <td>\r\n                    . . bashrc //actualizar el bash<br>\r\n                    godoc fmt //documentation de la liberia <br>\r\n                    go fmt xProyecto.go //Dar formato al proyecto <br>\r\n                    go version //ver la versiond de go instalada <br>\r\n                    go mod vendor //en caso de inconsistencia en alguna libreria <br>\r\n                    mkdir go //instalar el entorno para ello se crean los directorios <br>\r\n                    go build archivoX.go //con este comando compilamos el archivo para crear el ejecutable <br>\r\n                    go run archivo.go // lo ejecuta sin compilar ya que crea un archivo temporal <br>\r\n                    dentro de la carpeta go debe haber tres carpertas= <strong>bin pkg src</strong> sino crearlas <br>\r\n                    <strong>bin: </strong>En esta carpeta se almacena todos los ejecutables que utilicemos o creemos\r\n                    <strong>pkg: </strong>Guarda cierto codigo de las dependencias librerias que utilicemos <br>\r\n                    <strong>src: </strong>Aca estara todo el codigo escrito en Go y el codigo de las librerias de terceros \r\n                </td>\r\n                <td></td>\r\n            </tr>\r\n                \r\n    \r\n            <tr>\r\n                <td></td>\r\n                <td>\r\n                    si las variables son declaradas pero no inicializadas toman un valor por defecto <br>\r\n                    int = 0 <br>\r\n                    string = \"string vacio\" <br>\r\n                    bool = false <br>\r\n                    si las variables son declaradas e inicializadas pero no usadas no compila <br>\r\n                    variable := 8 //esto quiere decir que declara y go internamente ajusta el tipo de la variable <br>\r\n\r\n                </td>\r\n                <td></td>\r\n            </tr>\r\n    \r\n            <tr>\r\n                <td>int/uint</td>\r\n                <td>al indicar el tipo de dato toma un buen performace el codigo <br><br>\r\n                    <strong>int</strong> = pueden tomar valores negativos <br>\r\n                    <strong>uint</strong> = si sabemos que siempre van a ser positivos \r\n                </td>\r\n                <td>\r\n                    <img src=\"../../../../../assets/backend/go/enteros.png\" alt=\"\">\r\n                    <img src=\"../../../../../assets/backend/go/entPos.png\" alt=\"\">\r\n                </td>\r\n            </tr>\r\n    \r\n            <tr>\r\n                <td>Float</td>\r\n                <td></td>\r\n                <td>\r\n                    <img src=\"../../../../../assets/backend/go/NumeDeci.png\" alt=\"\">\r\n                </td>\r\n            </tr>\r\n    \r\n            <tr>\r\n                <td>Numeros Imaginarios</td>\r\n                <td></td>\r\n                <td>\r\n                    <img src=\"../../../../../assets/backend/go/NumImg.png\" alt=\"\">\r\n                </td>\r\n            </tr>\r\n    \r\n            <tr>\r\n                <td>boolean</td>\r\n                <td>\r\n                    textos y booleanos\r\n                    string = \"\"\r\n                    bool = true or false\r\n                </td>\r\n                <td></td>\r\n            </tr>\r\n    \r\n            <tr>\r\n                <td><a href=\"https://pkg.go.dev/fmt#pkg-variables\">Inserccion de datos</a>  </td>\r\n                <td>\r\n                    \"%s\" = indica que el valor que va hay es un string <br>\r\n                    \"%d\" = indica que el valor que va hay es un entero <br>\r\n                    \"%v\" = indica que el valor que va hay puede ser cualquiera <br>\r\n                    \"%T\" = Conocer el tipo de Xvariable <br>\r\n                </td>\r\n                <td></td>\r\n            </tr>\r\n    \r\n            <tr>\r\n                <td></td>\r\n                <td>\r\n                    Println = imprime con salto de linea <br>\r\n                    Print = imprime <br>\r\n                    printf = imprime insertando varaibles dentro del string <br>\r\n                    Sprintf = almacena un string en una variable <br>\r\n                    Fprintf(\"....\") // devolver un texto <br>\r\n                </td>\r\n                <td></td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td><a href=\"https://platzi.com/clases/2232-programacion-golang/35751-structs-la-forma-de-hacer-clases-en-go/\"><strong>Struct</strong></a></td>\r\n                <td>\r\n                    Struct tipos de datos personalizados, se crea un objeto que sera un modelo para otro dato <br><br>\r\n                    En Go no existen las <strong>clases</strong> en su lugar existen los <strong>struct</strong> \r\n                </td>\r\n                <td>\r\n                    <img src=\"../../../../../assets/backend/go/struct.png\" alt=\"\">\r\n                </td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td><a href=\"https://pkg.go.dev/std\">Librerias</a></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n                \r\n            <tr>\r\n                <td>trabajo con arrays</td>\r\n                <td>\r\n                    MyArray = append(MyArray,\"Nuevo elem\")  // agrega un elemento al final<br><br>\r\n                    fmt.Println(len(MyArray)) // <strong>len</strong>(Muestra el tamaño de MyArray) <br><br>\r\n                    fmt.Println(cap(MyArray)) // <strong>cap</strong>(Muestra la capacidad de MyArray) <br><br>\r\n                </td>\r\n                <td></td>\r\n            </tr>\r\n                \r\n            <tr>\r\n                <td>ruteador </td>\r\n                <td>\r\n                    Node js = Express <br>\r\n                    sinfoni = phpFundation <br>\r\n                    Go = gorilla/mux install = go get -u github.com/gorilla/mux <br> \r\n                </td>\r\n                <td></td>\r\n            </tr>\r\n                \r\n            <tr>\r\n                <td><a href=\"https://labix.org/mgo\">Conectar Go con mongoBD</a></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n                \r\n            <tr>\r\n                <td>if</td>\r\n                <td></td>\r\n                <td>\r\n                    <img src=\"../../../../../assets/backend/go/if.png\" alt=\"\">\r\n                </td>\r\n            </tr>\r\n                \r\n            <tr>\r\n                <td>for</td>\r\n                <td></td>\r\n                <td>\r\n                    <img src=\"../../../../../assets/backend/go/for.png\" alt=\"\">\r\n                </td>\r\n            </tr>\r\n                \r\n            <tr>\r\n                <td>forEach</td>\r\n                <td></td>\r\n                <td>\r\n                    <img src=\"../../../../../assets/backend/go/foreach.png\" alt=\"\">\r\n                </td>\r\n            </tr>\r\n                        \r\n            <tr>\r\n                <td>For While</td>\r\n                <td></td>\r\n                <td>\r\n                    <img src=\"../../../../../assets/backend/go/for while.png\" alt=\"\">\r\n                </td>\r\n            </tr>\r\n                \r\n            <tr>\r\n                <td>For forever</td>\r\n                <td>se debe garantizar que en algun punto del programa se detenga o salga de este ciclo para no consumir maquina de manera ineficiente</td>\r\n                <td>\r\n                    <img src=\"../../../../../assets/backend/go/forforever.png\" alt=\"\">\r\n                </td>\r\n            </tr>\r\n                \r\n            <tr>\r\n                <td>switch</td>\r\n                <td></td>\r\n                <td>\r\n                    <img src=\"../../../../../assets/backend/go/switch.png\" alt=\"\">\r\n                </td>\r\n            </tr>\r\n                \r\n            <tr>\r\n                <td><strong>Keywords</strong></td>\r\n                <td>\r\n                    <strong>defer</strong>: va a determinar la ultima ejecutacion antes de terminar una funcion y puede ser empleado para cerrar conexiones o archivos  <br>\r\n                    las siguientes se usan en un ciclo for <br><br>\r\n                    <strong>break</strong>: saca al ultimo ambiente rompe el ciclo for<br>\r\n                    <strong>continue</strong>: Se emplea en casos tener tener un error controlado haciendo que se continue con la ejeccucion del programa no rompe el flujo de ejecucion <br>\r\n                </td>\r\n                <td>\r\n                    <img src=\"../../../../../assets/backend/go/defer.png\" alt=\"\">\r\n                </td>\r\n            </tr>\r\n                \r\n            <tr>\r\n                <td>Array vs Slices</td>\r\n                <td>\r\n                    <strong>Array</strong>: tiene un tamaño definido <br>\r\n                    <strong>Slices</strong>: No tiene tamaño definido<br>\r\n                </td>\r\n                <td></td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td><a href=\"https://codingornot.com/13-go-to-go-maps-en-golang\">Maps</a>  y Diccionarios </td>\r\n                <td>\r\n                    Un map nos permite almacenar información de forma similar a como lo hacíamos con los arreglos o los slices pero con la particularidad de que cada elemento de un map tiene asociada una llave única. <br><br>\r\n                    Es una estructura de datos muy conveniente cuando tienes dos o mas listas que se relacionan entre si ya que con el caso de los maps tenemos acceso mediante una llave y valor  ademas ten en cuenta que los maps son mas eficientes que manejar slices o arrays ya que de forma nativa ellos implementan concurrencia para poder interacturar enter las operaciones que se vayan a ejecutar con ellos \r\n                </td>\r\n                <td>\r\n                    En caso de Pyton son llamados Diccionarios y caso de Go son Maps\r\n                </td>\r\n            </tr>\r\n                \r\n            <tr>\r\n                <td>Diccionarios</td>\r\n                <td>\r\n                    Un diccionario agrupa elementos identificandolos por medio de claves unicas, Es una colleccion de pares formados por su contenido y clave de acceso, tambien denominados mapas <br><br>\r\n                    La clase abstracta Dictionary es la interfaz para crear diccionarios en las colecciones historicas (vector, stack, Dictionary, HashTable, Enumeration) y procesa la coleccion como si fuera un array asociativo ak que se accede por una clave <br><br>\r\n                    la clave y el valor de cada elemento son de tipo objeto \r\n                </td>\r\n                <td>\r\n                    <img src=\"../../../../../assets/backend/go/Dictionary.png\" alt=\"\">\r\n                </td>\r\n            </tr>\r\n                \r\n            <tr>\r\n                <td>HashTable</td>\r\n                <td>\r\n                    Extiende Dictionary, permitiendo que se pueda utilizar para agrupar datos asociativos, este se comporta como una tabla hash, Dispersa los elementos segun el codigo que devuelve el metodo hashCode() del obejto clave <br><br> La clase de los objetos \"clave\" debe disponer del metodo <strong>int hashCode()</strong> utilizado para dispersar el elemento, tambien deben deisponer del metodo <strong>equals()</strong> para poder realizar busquedas y comparaciones <br><br>\r\n                    Sirve para comparar objetos de una forma mas rapida en estructuras Hash ya que solo devuelve un numero entero(key)\r\n                </td>\r\n                <td>\r\n                    <img src=\"../../../../../assets/backend/go/hashTable.png\" alt=\"\">\r\n                    <img src=\"../../../../../assets/backend/go/hashTable2.png\" alt=\"\">\r\n                </td>\r\n            </tr>\r\n                \r\n            <tr>\r\n                <td>Colecciones</td>\r\n                <td><a href=\"https://es.slideshare.net/angenio2/programacin-3-mapas-y-diccionarios-colecciones-parametrizadas\">Revisar mas funciones especiales </a> <br><br>\r\n                    Map <br>\r\n                    HashMap <br>\r\n                    treeMap <br>\r\n                    Declaracion de tipo parametrizado <br>\r\n                </td>\r\n                <td>\r\n                    <img src=\"../../../../../assets/backend/go/Coleccion.png\" alt=\"\">\r\n                </td>\r\n            </tr>\r\n                \r\n            <tr>\r\n                <td><a href=\"https://platzi.com/clases/2232-programacion-golang/35752-modificadores-de-acceso-en-funciones-y-structs/\"></a>Modificadores de acceso</td>\r\n                <td>\r\n                    si la varaible, function tiene la primera letra : <br>\r\n                    <strong>mayuscula</strong> =  publico <br>\r\n                    <strong>minuscula</strong> = privado <br> <br>\r\n                    Debe tener un comentario, y se debe importar el paquete y opcionalmente se le puede colocar un alias si la varaible empieza por minuscula es privada es por esta razon que da error en la segunda imagen \r\n                </td>\r\n                <td>\r\n                    <img src=\"../../../../../assets/backend/go/acceso.png\" alt=\"\"><br><br>\r\n                    <img src=\"../../../../../assets/backend/go/acceso1.png\" alt=\"\"><br><br>\r\n                    <img src=\"../../../../../assets/backend/go/acceso2.png\" alt=\"\"><br><br>\r\n                    <img src=\"../../../../../assets/backend/go/acceso3.png\" alt=\"\">\r\n                </td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td><a href=\"https://platzi.com/clases/2232-programacion-golang/35753-structs-y-punteros/\">Punteros</a></td>\r\n                <td>\r\n                    los punteros Son acceso a la memoria <br><br>\r\n                    Cuando se crea una variable lo que hace el runtime es crear una direccion de memoria y en ese espacio guarda Xcosas <br><br>\r\n                    se usa <strong>&</strong> para hacer Referencia a la direccion de memoria linea 9 el valor de b va a ser la ubicacion de memoria de a <br><br>\r\n                    se usa <strong>*</strong> para hacer Referencia al valor que hay guardado en Xdireccion linea 14 *b= 4\r\n                </td>\r\n                <td>\r\n                    <img src=\"../../../../../assets/backend/go/punteros.png\" alt=\"\">\r\n                </td>\r\n            </tr>\r\n                \r\n            <tr>\r\n                <td><a href=\"https://www.youtube.com/watch?v=WaOIianpwAA\">Modulos</a></td>\r\n                <td>\r\n                    Al trabajar por fuera del <strong>GOPATH</strong> debemos indicar el espacio donde estaran las librerias de terceros que requeriran los proyectosque se estan implementando <br><br>go init mod github.com/jugutafur/nombrePaquete <br><br><strong>El versionado semantico</strong> hace referncia a la correcta identificacion de los versiones de las librerias donde: <br><br> 1°. Version mayor <br> 2°. Version menor <br> 3°. Parches y <br> 4°. Realise o precantidados (si se requieren hacer pruebas con otros desarrolladores o otras pruebas beta de la palicacion \"version beta, alfa...etc\") <br><br>\r\n                    Ahora despues de crear el archivo <strong>go.mod</strong> crea un archivo <strong>go.sum </strong>En este archivo.sum estara identificado de manera inequivoca las versiones de las librerias que son empleadas en el proyecto pro medio de <strong>fecha y hash</strong>\r\n                </td>\r\n                <td>\r\n                    <img\r\n                    src=\"../../../../../assets/backend/go/modulos.png\"\r\n                    alt=\"modulos\"\r\n                    /> <br><br>\r\n                    <img\r\n                    src=\"../../../../../assets/backend/go/VersionadoSemantico.png\"\r\n                    alt=\"VersionadoSemantico\"\r\n                />\r\n                </td>\r\n            </tr>\r\n                \r\n            <tr>\r\n                <td>Para ver en que modulo me encuentro en el workspace</td>\r\n                <td>\r\n                    go list <br>\r\n                    go list all //me muestra todos los modulos que estan en $GOPATH<br>\r\n                    go list -m all //muestra puntualmente los modulos que estan siendo usandas en la ruta donde se ejecuta este comando <br>\r\n                    go list -m -versions Xpaquete //muestra todas las versiones disponibles  <br>\r\n                    go list verify //Verifica que la version del modulo no ha sido modificada \r\n                </td>\r\n                <td></td>\r\n            </tr>\r\n                            \r\n            <tr>\r\n                <td>Public and private</td>\r\n                <td>\r\n                    1. se puede definir un <strong>alias</strong> <br><br>\r\n                    2. esta ubicacion arranca desde el GOPATH recordar que: GOPATH= C/Go perooooooo arranca desde src principal <strong>NOTA </strong>esto es en el caso de trabajar desde las carpetas de donde esta instalado Go en C pero si trabajar en cualquier otra ubicacion debes trabajar con modulos es decir con <a href=\"https://www.youtube.com/watch?v=WaOIianpwAA\">go.mod</a> ver mas <a href=\"https://www.youtube.com/watch?v=m3BKBviRE-0&list=PLt1J5u9LpM5-L-Ps8jjr91pKhFxAnxKJp&index=3\">inf</a> <br><br>\r\n                    3. para llamar al struct se puede por el alias o por el nombre del pakage donde se define o nombre del mismo Xarchivo.go que por lo general se llaman igual <br><br>\r\n                    4. La salida da valores por defecto cuando no se definen \r\n                </td>\r\n                <td>\r\n                    <img               \r\n                    src=\"../../../../../assets/backend/go/Public y private.png\"\r\n                    alt=\"Public and private\"\r\n                    title=\"Public and private\">\r\n                </td>\r\n            </tr>\r\n                \r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n                \r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n                \r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n                \r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n                \r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n                \r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n                \r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n                \r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n                \r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n                \r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n                \r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n                \r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n                \r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n                \r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n                \r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n                \r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n\r\n\r\n        </tbody>\r\n    </table>\r\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}