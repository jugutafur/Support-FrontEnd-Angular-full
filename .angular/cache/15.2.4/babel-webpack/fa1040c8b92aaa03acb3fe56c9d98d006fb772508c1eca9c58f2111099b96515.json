{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class DockerComponent {}\nDockerComponent.ɵfac = function DockerComponent_Factory(t) {\n  return new (t || DockerComponent)();\n};\nDockerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DockerComponent,\n  selectors: [[\"app-docker\"]],\n  decls: 127,\n  vars: 0,\n  consts: [[1, \"container\"], [1, \"table\", \"table-striped\", \"table-hover\", \"table-bordered\", \"align-middle\"], [\"scope\", \"col\"], [\"src\", \"../../../../../../assets/transversales/Docker/Virtualiza.PNG\", \"alt\", \"Virtualiza\", \"title\", \"Virtualiza\", 1, \"centered-image\"], [\"src\", \"../../../../../../assets/transversales/Docker/Virtualiza2.PNG\", \"alt\", \"Virtualiza2\", \"title\", \"Virtualiza2\"]],\n  template: function DockerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"table\", 1)(2, \"thead\")(3, \"tr\")(4, \"th\", 2);\n      i0.ɵɵtext(5, \"Referencia\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"th\", 2);\n      i0.ɵɵtext(7, \"Descripcion\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"th\", 2);\n      i0.ɵɵtext(9, \"Ejemplo\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(10, \"tbody\")(11, \"tr\")(12, \"td\");\n      i0.ɵɵtext(13, \"Docker\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"td\");\n      i0.ɵɵtext(15, \" * Nos permite empaquetar aplicaciones para desplegar en cualquier entorno. Ya que implementa una \");\n      i0.ɵɵelementStart(16, \"strong\");\n      i0.ɵɵtext(17, \"API de alto nivel\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(18, \" para proporcionar contenedores livianos que ejecutan procesos de manera independiente \");\n      i0.ɵɵelement(19, \"br\");\n      i0.ɵɵtext(20, \" * Con Docker los recursos pueden ser aislados, los servicios restringidos. \");\n      i0.ɵɵelement(21, \"br\");\n      i0.ɵɵtext(22, \" * Se otorga a los procesos la capacidad de tener una vision completamente privada del \");\n      i0.ɵɵelementStart(23, \"strong\");\n      i0.ɵɵtext(24, \"Sistema Operativo.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(25, \"br\");\n      i0.ɵɵtext(26, \" * Con su propio identificador de espacio de proceso, sistema de archivos e interfaces de red. \");\n      i0.ɵɵelement(27, \"br\");\n      i0.ɵɵtext(28, \" * Contenedores multiples comparten el mismo nucleo, pero cada contenedor puede ser restringido a utilizar sola una cantidad definida de recursos. \");\n      i0.ɵɵelement(29, \"br\");\n      i0.ɵɵtext(30, \" * El fichero de definicion es \");\n      i0.ɵɵelementStart(31, \"strong\");\n      i0.ɵɵtext(32, \"Dockerfile\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(33, \" contiene las instrucciones del como es el contenedor \");\n      i0.ɵɵelementStart(34, \"strong\");\n      i0.ɵɵtext(35, \"(Sistema base, Contenido, paquetes, librerias y el comportamiento una vez lanzado)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(36, \"br\");\n      i0.ɵɵtext(37, \" * la imagenes de Docker son las \");\n      i0.ɵɵelementStart(38, \"strong\");\n      i0.ɵɵtext(39, \"plantillas base\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(40, \" desde donde se inicia, ya sea para \");\n      i0.ɵɵelementStart(41, \"strong\");\n      i0.ɵɵtext(42, \"Crear nuevas imagenes o para crear contenedores para ejecutar las aplicaciones \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(43, \"br\");\n      i0.ɵɵtext(44, \" * \");\n      i0.ɵɵelementStart(45, \"strong\");\n      i0.ɵɵtext(46, \"Registro Docker (https://hub.docker.com/)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(47, \" es un repositorio de imagenes de Docker. \");\n      i0.ɵɵelement(48, \"br\");\n      i0.ɵɵtext(49, \" * \");\n      i0.ɵɵelementStart(50, \"strong\");\n      i0.ɵɵtext(51, \"Docker Store\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(52, \" es un repositorio para mas coorporativo \");\n      i0.ɵɵelement(53, \"br\");\n      i0.ɵɵtext(54, \" * Un \");\n      i0.ɵɵelementStart(55, \"strong\");\n      i0.ɵɵtext(56, \"Contenedor docker \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(57, \" es el resultado de poner en marcha una iamgen \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(58, \"td\");\n      i0.ɵɵtext(59, \" Diferencias entre Maquina Virtual y Docker \");\n      i0.ɵɵelement(60, \"br\")(61, \"br\");\n      i0.ɵɵtext(62, \" *Una Maquina Virual Virtualiza el Hardware mientra que el Docker Virtualiza el Sistema Operativo \");\n      i0.ɵɵelement(63, \"br\")(64, \"br\");\n      i0.ɵɵelementStart(65, \"div\", 0);\n      i0.ɵɵelement(66, \"img\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(67, \"br\")(68, \"br\");\n      i0.ɵɵtext(69, \" * Una Maquina Virtual Ejecuta una copia completa del Sistema Operativo mientras que el Contenedor comparte el \");\n      i0.ɵɵelementStart(70, \"strong\");\n      i0.ɵɵtext(71, \"Kernel\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(72, \" del host con otros contenedores \");\n      i0.ɵɵelement(73, \"img\", 4)(74, \"br\")(75, \"br\");\n      i0.ɵɵtext(76, \" Un contenedor es creado apartir de una imagen o una imagen se convierte en contendor cuando es ejecutada o mejor dicho un contenedor es una instancia de una imagen \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(77, \"tr\")(78, \"td\");\n      i0.ɵɵtext(79, \"Comandos\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(80, \"td\");\n      i0.ɵɵtext(81, \" * docker history nginx.\");\n      i0.ɵɵelement(82, \"br\");\n      i0.ɵɵtext(83, \" * docker service update --image nginx:1.11 web EOF. \");\n      i0.ɵɵelement(84, \"br\");\n      i0.ɵɵtext(85, \" * docker service create --naem search elasticsearch \");\n      i0.ɵɵelement(86, \"br\");\n      i0.ɵɵtext(87, \" * docker images // ver que imagenes tenemos descagadas \");\n      i0.ɵɵelement(88, \"br\");\n      i0.ɵɵtext(89, \" * docker info // ver el detalle del Docker\");\n      i0.ɵɵelement(90, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(91, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(92, \"tr\")(93, \"td\");\n      i0.ɵɵtext(94, \"tags\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(95, \"td\");\n      i0.ɵɵtext(96, \" A las iamgenes que generamos en docker se le pueden agregar \");\n      i0.ɵɵelementStart(97, \"strong\");\n      i0.ɵɵtext(98, \"tags\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(99, \" es decir marcas o etiquetas \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(100, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(101, \"tr\")(102, \"td\");\n      i0.ɵɵtext(103, \"Redes\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(104, \"td\");\n      i0.ɵɵtext(105, \" Docker nos permite crear 3 diferentes redes virtuales ya sea para unir o segmentar diferentes Contenedores, de esta manera podemos separar contenedores por seguridad en redes diferente o unirlos por conveniencia, podemos ver las 3 redes con: \");\n      i0.ɵɵelement(106, \"br\")(107, \"br\");\n      i0.ɵɵelementStart(108, \"strong\");\n      i0.ɵɵtext(109, \"docker network ls\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(110, \"br\")(111, \"br\");\n      i0.ɵɵtext(112, \" * brigde //por defecto: Puente entre la interfaz de red que arrancamos y una interfaz de red virtual que se crea en nuestro equipo cuando isntalamos Docker\");\n      i0.ɵɵelement(113, \"br\");\n      i0.ɵɵtext(114, \" * host //Copia la configuracion de red del host al contenedor que es estamos arrancando con Docker \\\"es la misma\\\"\");\n      i0.ɵɵelement(115, \"br\");\n      i0.ɵɵtext(116, \" * none //Elimina toda la configuracion de red de nuestro contendor y solo tendriamos loopback solo la direccion 127.0.0.1 y no podremos conectar a otro sitio mas \");\n      i0.ɵɵelement(117, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(118, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(119, \"tr\");\n      i0.ɵɵelement(120, \"td\")(121, \"td\")(122, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(123, \"tr\");\n      i0.ɵɵelement(124, \"td\")(125, \"td\")(126, \"td\");\n      i0.ɵɵelementEnd()()()();\n    }\n  },\n  styles: [\"@charset \\\"UTF-8\\\";\\n.container[_ngcontent-%COMP%] {\\n  text-align: center; \\n  height: 100vh; \\n  display: flex;\\n  align-items: center; \\n  justify-content: center;\\n}\\n\\n.centered-image[_ngcontent-%COMP%] {\\n  display: inline-block;\\n  vertical-align: middle;\\n  max-width: 100%; \\n  height: auto; \\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29yZS9jb21wb25lbnRzL3RyYW5zdmVyc2FsZXMvY29tcG9uZW50cy9kb2NrZXIvZG9ja2VyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGdCQUFnQjtBQUFoQjtFQUNFLGtCQUFBLEVBQUEsMkJBQUE7RUFDQSxhQUFBLEVBQUEsZ0RBQUE7RUFDQSxhQUFBO0VBQ0EsbUJBQUEsRUFBQSx5QkFBQTtFQUNBLHVCQUFBO0FBRUY7O0FBQ0E7RUFDRSxxQkFBQTtFQUNBLHNCQUFBO0VBQ0EsZUFBQSxFQUFBLGtDQUFBO0VBQ0EsWUFBQSxFQUFBLHdDQUFBO0FBRUYiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyIHtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7ICAgLyogQ2VudHJhIGhvcml6b250YWxtZW50ZSAqL1xyXG4gIGhlaWdodDogMTAwdmg7ICAgICAgICAvKiBBc2Vnw4PCunJhdGUgZGUgcXVlIGVsIGNvbnRlbmVkb3IgdGVuZ2EgYWx0dXJhICovXHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyOyAgLyogQ2VudHJhIHZlcnRpY2FsbWVudGUgKi9cclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxufVxyXG5cclxuLmNlbnRlcmVkLWltYWdlIHtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuICBtYXgtd2lkdGg6IDEwMCU7ICAgICAvKiBBanVzdGEgZWwgdGFtYcODwrFvIGRlIGxhIGltYWdlbiAqL1xyXG4gIGhlaWdodDogYXV0bzsgICAgICAgIC8qIE1hbnRpZW5lIGxhIHByb3BvcmNpw4PCs24gZGUgbGEgaW1hZ2VuICovXHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";AAOA,OAAM,MAAOA,eAAe;;mBAAfA,eAAe;AAAA;;QAAfA,eAAe;EAAAC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCP5BC,8BAAuB;MAIDA,0BAAU;MAAAA,iBAAK;MAC/BA,6BAAgB;MAAAA,2BAAW;MAAAA,iBAAK;MAChCA,6BAAgB;MAAAA,uBAAO;MAAAA,iBAAK;MAGhCA,8BAAO;MAECA,uBAAM;MAAAA,iBAAK;MACfA,2BAAI;MACFA,mHAAiG;MAAAA,+BAAQ;MAAAA,kCAAiB;MAAAA,iBAAS;MAACA,wGAAsF;MAAAA,sBAAI;MAC9NA,6FAA2E;MAAAA,sBAAI;MAC/EA,wGAAsF;MAAAA,+BAAQ;MAAAA,mCAAkB;MAAAA,iBAAS;MAAAA,sBAAI;MAC7HA,gHAA8F;MAAAA,sBAAI;MAClGA,oKAAkJ;MAAAA,sBAAI;MACtJA,gDAA8B;MAAAA,+BAAQ;MAAAA,2BAAU;MAAAA,iBAAS;MAACA,uEAAqD;MAAAA,+BAAQ;MAAAA,mGAAkF;MAAAA,iBAAS;MAAAA,sBAAI;MACtNA,kDAAgC;MAAAA,+BAAQ;MAAAA,gCAAe;MAAAA,iBAAS;MAACA,qDAAmC;MAAAA,+BAAQ;MAAAA,gGAA+E;MAAAA,iBAAS;MAAAA,sBAAI;MACxMA,oBAAE;MAAAA,+BAAQ;MAAAA,0DAAyC;MAAAA,iBAAS;MAACA,2DAAyC;MAAAA,sBAAI;MAC1GA,oBAAE;MAAAA,+BAAQ;MAAAA,6BAAY;MAAAA,iBAAS;MAACA,0DAAwC;MAAAA,sBAAI;MAC5EA,uBAAK;MAAAA,+BAAQ;MAAAA,mCAAkB;MAAAA,iBAAS;MAACA,gEAC3C;MAAAA,iBAAK;MACLA,2BAAI;MACFA,6DAA2C;MAAAA,sBAAI;MAC/CA,mHAAiG;MAAAA,sBAAI;MACrGA,+BAAuB;MACrBA,0BAGiB;MACnBA,iBAAM;MACNA,sBAAI;MACJA,gIAA8G;MAAAA,+BAAQ;MAAAA,uBAAM;MAAAA,iBAAS;MAACA,kDACtI;MAAAA,0BAGoB;MACpBA,sLACF;MAAAA,iBAAK;MAGPA,2BAAI;MACEA,yBAAQ;MAAAA,iBAAK;MACjBA,2BAAI;MACFA,yCAAuB;MAAAA,sBAAI;MAC3BA,sEAAoD;MAAAA,sBAAI;MACxDA,sEAAoD;MAAAA,sBAAI;MACxDA,yEAAuD;MAAAA,sBAAI;MAC3DA,4DAA0C;MAAAA,sBAAI;MAChDA,iBAAK;MACLA,sBAAS;MACXA,iBAAK;MAELA,2BAAI;MACEA,qBAAI;MAAAA,iBAAK;MACbA,2BAAI;MACFA,8EAA4D;MAAAA,+BAAQ;MAAAA,qBAAI;MAAAA,iBAAS;MAACA,8CACpF;MAAAA,iBAAK;MACLA,uBAAS;MACXA,iBAAK;MAELA,4BAAI;MACEA,uBAAK;MAAAA,iBAAK;MACdA,4BAAI;MACFA,qQAAkP;MAAAA,uBAAI;MACtPA,gCAAQ;MAAAA,mCAAiB;MAAAA,iBAAS;MAAAA,uBAAI;MACtCA,8KAA2J;MAAAA,uBAAI;MAC/JA,qIAAgH;MAAAA,uBAAI;MACpHA,qLAAkK;MAAAA,uBAAI;MACxKA,iBAAK;MACLA,uBAAS;MACXA,iBAAK;MAELA,4BAAI;MACFA,uBAAS;MAGXA,iBAAK;MAELA,4BAAI;MACFA,uBAAS;MAGXA,iBAAK","names":["DockerComponent","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\HP\\Desktop\\juanTafur\\jugutafur\\Support-FrontEnd-Angular-full\\src\\app\\core\\components\\transversales\\components\\docker\\docker.component.ts","C:\\Users\\HP\\Desktop\\juanTafur\\jugutafur\\Support-FrontEnd-Angular-full\\src\\app\\core\\components\\transversales\\components\\docker\\docker.component.html"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-docker',\n  templateUrl: './docker.component.html',\n  styleUrls: ['./docker.component.scss']\n})\nexport class DockerComponent {\n\n}\n","<div class=\"container\">\n<table class=\"table table-striped table-hover table-bordered align-middle\">\n  <thead>\n    <tr>\n      <th scope=\"col\">Referencia</th>\n      <th scope=\"col\">Descripcion</th>\n      <th scope=\"col\">Ejemplo</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>Docker</td>\n      <td>\n        * Nos permite empaquetar aplicaciones para desplegar en cualquier entorno. Ya que implementa una <strong>API de alto nivel</strong> para proporcionar contenedores livianos que ejecutan procesos de manera independiente <br>\n        * Con Docker los recursos pueden ser aislados, los servicios restringidos. <br>\n        * Se otorga a los procesos la capacidad de tener una vision completamente privada del <strong>Sistema Operativo.</strong><br>\n        * Con su propio identificador de espacio de proceso, sistema de archivos e interfaces de red. <br>\n        * Contenedores multiples comparten el mismo nucleo, pero cada contenedor puede ser restringido a utilizar sola una cantidad definida de recursos. <br>\n        * El fichero de definicion es <strong>Dockerfile</strong> contiene las instrucciones del como es el contenedor <strong>(Sistema base, Contenido, paquetes, librerias y el comportamiento una vez lanzado)</strong><br>\n        * la imagenes de Docker son las <strong>plantillas base</strong> desde donde se inicia, ya sea para <strong>Crear nuevas imagenes o para crear contenedores para ejecutar las aplicaciones </strong><br>\n        * <strong>Registro Docker (https://hub.docker.com/)</strong> es un repositorio de imagenes de Docker. <br>\n        * <strong>Docker Store</strong> es un repositorio para mas coorporativo <br>\n        * Un <strong>Contenedor docker </strong> es el resultado de poner en marcha una iamgen\n      </td>\n      <td>\n        Diferencias entre Maquina Virtual y Docker <br><br>\n        *Una Maquina Virual Virtualiza el Hardware mientra que el Docker Virtualiza el Sistema Operativo <br><br>\n        <div class=\"container\">\n          <img class=\"centered-image \"\n        src=\"../../../../../../assets/transversales/Docker/Virtualiza.PNG\"\n        alt=\"Virtualiza\"\n        title=\"Virtualiza\">\n        </div>\n        <br><br>\n        * Una Maquina Virtual Ejecuta una copia completa del Sistema Operativo mientras que el Contenedor comparte el <strong>Kernel</strong> del host con otros contenedores\n        <img\n        src=\"../../../../../../assets/transversales/Docker/Virtualiza2.PNG\"\n        alt=\"Virtualiza2\"\n        title=\"Virtualiza2\"><br><br>\n        Un contenedor es creado apartir de una imagen o una imagen se convierte en contendor cuando es ejecutada o mejor dicho un contenedor es una instancia de una imagen\n      </td>\n    </tr>\n\n    <tr>\n      <td>Comandos</td>\n      <td>\n        * docker history nginx.<br>\n        * docker service update --image nginx:1.11 web EOF. <br>\n        * docker service create --naem search elasticsearch <br>\n        * docker images // ver que imagenes tenemos descagadas <br>\n        * docker info // ver el detalle del Docker<br>\n      </td>\n      <td></td>\n    </tr>\n\n    <tr>\n      <td>tags</td>\n      <td>\n        A las iamgenes que generamos en docker se le pueden agregar <strong>tags</strong> es decir marcas o etiquetas\n      </td>\n      <td></td>\n    </tr>\n\n    <tr>\n      <td>Redes</td>\n      <td>\n        Docker nos permite crear 3 diferentes redes virtuales ya sea para unir o segmentar diferentes Contenedores, de esta manera podemos separar contenedores por seguridad en redes diferente o unirlos por conveniencia, podemos ver las 3 redes con: <br><br>\n        <strong>docker network ls</strong><br><br>\n        * brigde //por defecto: Puente entre la interfaz de red que arrancamos y una interfaz de red virtual que se crea en nuestro equipo cuando isntalamos Docker<br>\n        * host //Copia la configuracion de red del host al contenedor que es estamos arrancando con Docker \"es la misma\"<br>\n        * none //Elimina toda la configuracion de red de nuestro contendor y solo tendriamos loopback solo la direccion 127.0.0.1 y no podremos conectar a otro sitio mas <br>\n      </td>\n      <td></td>\n    </tr>\n\n    <tr>\n      <td></td>\n      <td></td>\n      <td></td>\n    </tr>\n\n    <tr>\n      <td></td>\n      <td></td>\n      <td></td>\n    </tr>\n  </tbody>\n</table>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}