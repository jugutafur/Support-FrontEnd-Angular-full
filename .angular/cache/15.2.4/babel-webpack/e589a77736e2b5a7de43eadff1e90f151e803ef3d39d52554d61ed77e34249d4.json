{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class JavaScriptComponent {\n  constructor() {\n    this.abrellave = \"{\";\n    this.cierrallave = \"}\";\n    this.abreDiamante = \"<\";\n    this.cierraDiamante = \">\";\n    this.abreParentesis = \"(\";\n    this.cierraParentesis = \")\";\n    this.abreCuadro = \"[\";\n    this.cierraCuadro = \"]\";\n  }\n}\nJavaScriptComponent.ɵfac = function JavaScriptComponent_Factory(t) {\n  return new (t || JavaScriptComponent)();\n};\nJavaScriptComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: JavaScriptComponent,\n  selectors: [[\"app-java-script\"]],\n  decls: 1345,\n  vars: 16,\n  consts: [[1, \"container\"], [1, \"table\", \"table-striped\", \"table-hover\", \"table-bordered\"], [\"scope\", \"col\"], [\"colspan\", \"2\"], [\"href\", \"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array\"], [\"src\", \"../../../../../assets/FrontEnd/JavaScript/ReserverWords.png\", \"alt\", \"ReserverWords\", \"title\", \"ReserverWords\"], [\"href\", \"https://es.wikipedia.org/wiki/Anexo:Comparativa_de_motores_de_renderizado\"], [\"src\", \"../../../../../assets/FrontEnd/JavaScript/motores.png\", \"alt\", \"motores\", \"title\", \"motores\"], [\"href\", \"https://kangax.github.io/compat-table/es6/\"], [\"href\", \"https://www.html5rocks.com/es/tutorials/internals/howbrowserswork/\"], [\"src\", \"../../../../../assets/FrontEnd/JavaScript/hJavascript.png\", \"alt\", \"hJavaScript\", \"title\", \"hJavaScript\"], [\"src\", \"../../../../../assets/FrontEnd/JavaScript/hJavascript1.png\", \"alt\", \"hJavaScript1\", \"title\", \"hJavaScript1\"], [\"src\", \"../../../../../assets/FrontEnd/JavaScript/JavaScript2.png\", \"alt\", \"JavaScript2\", \"title\", \"JavaScript2\"], [\"href\", \"https://www.youtube.com/watch?v=ygA5U7Wgsg8\"], [\"src\", \"../../../../../assets/FrontEnd/JavaScript/callStack.png\", \"alt\", \"callStack\", \"title\", \"callStack\"], [\"src\", \"../../../../../assets/FrontEnd/JavaScript/ObjetoGlobal.png\", \"alt\", \"ObjetoGlobal\", \"title\", \"ObjetoGlobal\"], [\"href\", \"https://platzi.com/clases/1798-javascript-navegador/25683-profundizando-en-el-engine/\"], [\"src\", \"../../../../../assets/FrontEnd/JavaScript/stackTareas.png\", \"alt\", \"stackTareas\", \"title\", \"stackTareas\"], [\"src\", \"../../../../../assets/FrontEnd/JavaScript/javaScriptExecute.png\", \"alt\", \"javaScriptExecute\", \"title\", \"javaScriptExecute\"], [\"src\", \"../../../../../assets/FrontEnd/JavaScript/pasosJavascript.png\", \"alt\", \"pasosJavascript\", \"title\", \"pasosJavascript\"], [\"href\", \"https://platzi.com/clases/1798-javascript-navegador/25685-call-stack/\"], [\"src\", \"../../../../../assets/FrontEnd/JavaScript/javaScriptSingle.png\", \"alt\", \"javaScriptSingle\", \"title\", \"javaScriptSingle\"], [\"src\", \"../../../../../assets/FrontEnd/JavaScript/memoryHeap.png\", \"alt\", \"memoryHeap\", \"title\", \"memoryHeap\"], [\"href\", \"https://platzi.com/clases/1798-javascript-navegador/25687-garbage-collection/\"], [\"href\", \"https://platzi.com/clases/1798-javascript-navegador/25688-stack-overflow/\"], [\"href\", \"https://platzi.com/clases/1798-javascript-navegador/26015-javascript-runtime/\"], [\"href\", \"https://developer.mozilla.org/en-US/docs/Web/API\"], [\"src\", \"../../../../../assets/FrontEnd/JavaScript/javaScriptRuntime.png\", \"alt\", \"javaScriptRuntime\", \"title\", \"javaScriptRuntime\"], [\"href\", \"https://www.youtube.com/watch?v=FCkhDBsXsFg\"], [\"src\", \"../../../../../assets/FrontEnd/JavaScript/JSON.png\", \"alt\", \"\"], [\"href\", \"https://jherax.wordpress.com/2014/07/05/javascript-coercion/\"], [\"href\", \"https://www.etnassoft.com/2011/04/06/coercion-de-datos-en-javascript/\"], [\"href\", \"https://platzi.com/clases/1814-basico-javascript/26298-coercion/\"], [\"href\", \"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number\"], [\"href\", \"https://www.youtube.com/watch?v=o3c8cW73weQ&list=PLvq-jIkSeTUZ6QgYYO3MwG9EMqC-KoLXA&index=12\"], [\"href\", \"https://developer.mozilla.org/es/docs/Web/JavaScript/Guide/Indexed_c\"], [\"href\", \"https://developer.mozilla.org/es/docs/Web/JavaScript/Reference/Global_Objects/Array\"], [\"href\", \"https://www.youtube.com/watch?v=4xig5UPRC00&list=PLvq-jIkSeTUZ6QgYYO3MwG9EMqC-KoLXA&index=13\"], [\"href\", \"https://www.youtube.com/watch?v=cTfGyVFrLxQ\"], [\"src\", \"../../../../../assets/FrontEnd/JavaScript/javaScript.png\", \"alt\", \"javaScript\", \"title\", \"javaScript\"], [\"href\", \"https://www.sitepoint.com/javascript-truthy-falsy/\"], [\"href\", \"https://www.youtube.com/watch?v=H6U1Pm7x60E&list=PLvq-jIkSeTUZ6QgYYO3MwG9EMqC-KoLXA&index=11\"], [\"href\", \"https://www.youtube.com/watch?v=tP8JiVUiyDo&t=383s\"], [\"href\", \"https://developer.mozilla.org/es/docs/Web/JavaScript/Reference/Functions/Default_parameters\"], [\"href\", \"https://www.youtube.com/watch?v=arOXcy7K4XQ&list=PLvq-jIkSeTUZ6QgYYO3MwG9EMqC-KoLXA&index=7\"], [\"src\", \"../../../../../assets/FrontEnd/JavaScript/templeteString2.png\", \"alt\", \"templeteString2\", \"title\", \"templeteString2\"], [\"src\", \"../../../../../assets/FrontEnd/JavaScript/templeteString.png\", \"alt\", \"templeteString\", \"title\", \"templeteString\"], [\"href\", \"https://www.youtube.com/watch?v=SPVL8uAezaw&list=PLvq-jIkSeTUZ6QgYYO3MwG9EMqC-KoLXA&index=17\"], [\"src\", \"../../../../../assets/FrontEnd/JavaScript/errores.png\", \"alt\", \"errores\", \"title\", \"errores\"], [\"src\", \"../../../../../assets/FrontEnd/JavaScript/ExtraerMap.png\", \"alt\", \"\"], [\"src\", \"../../../../../assets/FrontEnd/JavaScript/ExtraerMap2.png\", \"alt\", \"\"], [\"src\", \"../../../../../assets/FrontEnd/JavaScript/returnEarly.png\", \"alt\", \"\"], [\"src\", \"../../../../../assets/FrontEnd/JavaScript/wrongReturn.png\", \"alt\", \"\"], [\"src\", \"../../../../../assets/FrontEnd/JavaScript/CorrectWay.png\", \"alt\", \"\"], [\"src\", \"../../../../../assets/FrontEnd/JavaScript/map2.png\", \"alt\", \"map2\", \"title\", \"map2\"], [\"src\", \"../../../../../assets/FrontEnd/JavaScript/filter.png\", \"alt\", \"\"], [\"src\", \"../../../../../assets/FrontEnd/JavaScript/filter2.png\", \"alt\", \"\"], [\"src\", \"../../../../../assets/FrontEnd/JavaScript/filter3.png\", \"alt\", \"\"], [\"href\", \"https://platzi.com/clases/1814-basico-javascript/26308-metodos-de-recorridos-de-arrays/\"], [\"src\", \"../../../../../assets/FrontEnd/JavaScript/filter4.png\", \"alt\", \"filter4\", \"title\", \"filter4\"], [\"src\", \"../../../../../assets/FrontEnd/JavaScript/filter5.png\", \"alt\", \"filter5\", \"title\", \"filter5\"], [\"src\", \"../../../../../assets/FrontEnd/JavaScript/reduce.png\", \"alt\", \"\"], [\"src\", \"../../../../../assets/FrontEnd/JavaScript/reduce2.png\", \"alt\", \"\"], [\"src\", \"../../../../../assets/FrontEnd/JavaScript/reduce3.png\", \"alt\", \"\"], [\"src\", \"../../../../../assets/FrontEnd/JavaScript/reduce4.png\", \"alt\", \"\"], [\"src\", \"../../../../../assets/FrontEnd/JavaScript/find.png\", \"alt\", \"\"], [\"src\", \"../../../../../assets/FrontEnd/JavaScript/find2.png\", \"alt\", \"\"], [\"src\", \"../../../../../assets/FrontEnd/JavaScript/forEach2.png\", \"alt\", \"forEach2\", \"title\", \"forEach2\"], [\"src\", \"../../../../../assets/FrontEnd/JavaScript/forEach.png\", \"alt\", \"forEach\", \"title\", \"forEach\"], [\"src\", \"../../../../../assets/FrontEnd/JavaScript/some.png\", \"alt\", \"some\", \"title\", \"some\"], [\"href\", \"https://www.youtube.com/watch?v=9h5hyh_wDjo&list=PLvq-jIkSeTUZ6QgYYO3MwG9EMqC-KoLXA&index=15\"], [\"src\", \"../../../../../assets/FrontEnd/JavaScript/operadorTernario.png\", \"alt\", \"operadorTernario\", \"title\", \"operadorTernario\"], [\"src\", \"../../../../../assets/FrontEnd/JavaScript/switch.png\", \"alt\", \"switch\", \"title\", \"switch\"], [\"href\", \"https://www.youtube.com/watch?v=AapgtR0Rwk0&list=PLvq-jIkSeTUZ6QgYYO3MwG9EMqC-KoLXA&index=16\"], [\"src\", \"../../../../../assets/FrontEnd/JavaScript/for1.png\", \"alt\", \"for1\", \"title\", \"for1\"], [\"src\", \"../../../../../assets/FrontEnd/JavaScript/for2.png\", \"alt\", \"for2\", \"title\", \"for2\"], [\"src\", \"../../../../../assets/FrontEnd/JavaScript/forOf1.png\", \"alt\", \"forOf1\", \"title\", \"forOf1\"], [\"src\", \"../../../../../assets/FrontEnd/JavaScript/forOf2.png\", \"alt\", \"forOf2\", \"title\", \"forOf2\"], [\"src\", \"../../../../../assets/FrontEnd/JavaScript/forOfString.png\", \"alt\", \"forOfString\", \"title\", \"forOfString\"], [\"src\", \"../../../../../assets/FrontEnd/JavaScript/while2.png\", \"alt\", \"while2\", \"title\", \"while2\"], [\"src\", \"../../../../../assets/FrontEnd/JavaScript/while.png\", \"alt\", \"while\", \"title\", \"while\"], [\"src\", \"../../../../../assets/FrontEnd/JavaScript/doWhile.png\", \"alt\", \"doWhile\", \"title\", \"doWhile\"], [\"href\", \"https://www.youtube.com/watch?v=4xig5UPRC00&list=PLvq-jIkSeTUZ6QgYYO3MwG9EMqC-KoLXA&index=14\"], [\"src\", \"../../../../../assets/FrontEnd/JavaScript/Object2.png\", \"alt\", \"Object2\", \"title\", \"Object2\"], [\"src\", \"../../../../../assets/FrontEnd/JavaScript/objeto.png\", \"alt\", \"objeto\", \"title\", \"objeto\"], [\"src\", \"../../../../../assets/FrontEnd/JavaScript/objeto2.png\", \"alt\", \"objeto2\", \"title\", \"objeto2\"], [\"src\", \"../../../../../assets/FrontEnd/JavaScript/localStorage1.PNG\", \"alt\", \"localStorage1\", \"title\", \"localStorage1\"], [\"src\", \"../../../../../assets/FrontEnd/JavaScript/localStorage2.PNG\", \"alt\", \"localStorage2\", \"title\", \"localStorage2\"], [\"href\", \"https://www.youtube.com/watch?v=K4vCTeKKCkU\"], [\"src\", \"../../../../../assets/FrontEnd/JavaScript/CustonHooksAntes.PNG\", \"alt\", \"CustonHooksAntes\", \"title\", \"CustonHooksAntes\"], [\"src\", \"../../../../../assets/FrontEnd/JavaScript/CustonHooksDespues.PNG\", \"alt\", \"CustonHooksDespues\", \"title\", \"CustonHooksDespues\"]],\n  template: function JavaScriptComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"table\", 1)(2, \"thead\")(3, \"tr\")(4, \"th\", 2);\n      i0.ɵɵtext(5, \"Referencia\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"th\", 2);\n      i0.ɵɵtext(7, \"Descripcion\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"th\", 2);\n      i0.ɵɵtext(9, \"Ejemplo\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(10, \"tbody\")(11, \"tr\")(12, \"td\")(13, \"strong\");\n      i0.ɵɵtext(14, \"DOCUMENTACION\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"td\", 3)(16, \"a\", 4);\n      i0.ɵɵtext(17, \"MOZILA DEVELOP NETWORD\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(18, \"tr\")(19, \"td\")(20, \"strong\");\n      i0.ɵɵtext(21, \"JavaScript\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(22, \"td\")(23, \"strong\");\n      i0.ɵɵtext(24, \"Isomorfismo\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(25, \"br\")(26, \"br\");\n      i0.ɵɵtext(27, \" * Es el unico lenguaje que puede estar en el front, back y en la base de datos \");\n      i0.ɵɵelement(28, \"br\");\n      i0.ɵɵtext(29, \" * Debilmente tipado \");\n      i0.ɵɵelement(30, \"br\");\n      i0.ɵɵtext(31, \" * En javaScript todo es un objeto \");\n      i0.ɵɵelement(32, \"br\");\n      i0.ɵɵtext(33, \" * Inventado por Netscape en 1995 \");\n      i0.ɵɵelement(34, \"br\");\n      i0.ɵɵelementStart(35, \"strong\");\n      i0.ɵɵtext(36, \"* Java = Lenguaje de proposito general\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(37, \" //Con el cual se pueden crear aplicaciones para todo (aplicaciones que se ejecutan en servidor y escritortio). \");\n      i0.ɵɵelement(38, \"br\");\n      i0.ɵɵelementStart(39, \"strong\");\n      i0.ɵɵtext(40, \"* JavaScript = Lenguaje de proposito concreto\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(41, \" //Que solo corre en el navegador \");\n      i0.ɵɵelementStart(42, \"strong\");\n      i0.ɵɵtext(43, \"(No es posible crear aplicaciones de JavaScript que se ejecuten en un servidor \\\"Esto ya seria nodeJS\\\").\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(44, \"br\");\n      i0.ɵɵtext(45, \" * JavaScript es interpretado (no compilado) NO refqueire un archvivo intermedio como el BYTECODES como lo es para JAVA. \");\n      i0.ɵɵelement(46, \"br\")(47, \"br\")(48, \"br\");\n      i0.ɵɵelementStart(49, \"strong\");\n      i0.ɵɵtext(50, \"Gramatica\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(51, \"br\")(52, \"br\");\n      i0.ɵɵelementStart(53, \"strong\");\n      i0.ɵɵtext(54, \"snake_case: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(55, \"mi_archivo_javascript.ts \");\n      i0.ɵɵelement(56, \"br\");\n      i0.ɵɵelementStart(57, \"strong\");\n      i0.ɵɵtext(58, \"UPER_CASE: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(59, \"UNA_CONSTANTE \");\n      i0.ɵɵelement(60, \"br\");\n      i0.ɵɵelementStart(61, \"strong\");\n      i0.ɵɵtext(62, \"UpperCamelCase: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(63, \"SerHumano \");\n      i0.ɵɵelement(64, \"br\");\n      i0.ɵɵelementStart(65, \"strong\");\n      i0.ɵɵtext(66, \"lowerCamelCase: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(67, \"unObejto \");\n      i0.ɵɵelement(68, \"br\")(69, \"br\")(70, \"br\");\n      i0.ɵɵelementStart(71, \"strong\");\n      i0.ɵɵtext(72, \"Ordenamiento de codigo\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(73, \"br\")(74, \"br\");\n      i0.ɵɵtext(75, \" 1. Importacion de modulos \");\n      i0.ɵɵelement(76, \"br\");\n      i0.ɵɵtext(77, \" 2. Declaracion de variables \");\n      i0.ɵɵelement(78, \"br\");\n      i0.ɵɵtext(79, \" 3. Declaracion de funciones \");\n      i0.ɵɵelement(80, \"br\");\n      i0.ɵɵtext(81, \" 4. Ejecucion de codigo \");\n      i0.ɵɵelement(82, \"br\")(83, \"br\")(84, \"br\");\n      i0.ɵɵelementStart(85, \"strong\");\n      i0.ɵɵtext(86, \"DOM: Document Objet Model == es el api que tiene JavaScript en los navegadores para interacturar con el codigo HTML\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(87, \"br\")(88, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(89, \"td\");\n      i0.ɵɵtext(90, \" palabras reservadas \");\n      i0.ɵɵelement(91, \"br\")(92, \"br\")(93, \"img\", 5)(94, \"br\")(95, \"br\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(96, \"tr\")(97, \"td\")(98, \"strong\")(99, \"a\", 6);\n      i0.ɵɵtext(100, \"Motores de renderizado\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(101, \"br\")(102, \"br\");\n      i0.ɵɵelementStart(103, \"strong\");\n      i0.ɵɵtext(104, \"Just time compiler\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(105, \"td\", 3);\n      i0.ɵɵtext(106, \" Google saca chrome que corre con V8 \");\n      i0.ɵɵelement(107, \"br\");\n      i0.ɵɵtext(108, \" Microsoft saca edge que ya el motor esta siendo descontinuado \");\n      i0.ɵɵelement(109, \"br\")(110, \"img\", 7)(111, \"br\")(112, \"br\");\n      i0.ɵɵelementStart(113, \"a\", 8);\n      i0.ɵɵtext(114, \"ver todos los motores de diferentes plataformas \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(115, \"tr\")(116, \"td\")(117, \"strong\")(118, \"a\", 9);\n      i0.ɵɵtext(119, \"Como funciona los navegadores\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(120, \"td\");\n      i0.ɵɵelement(121, \"img\", 10)(122, \"br\")(123, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(124, \"td\");\n      i0.ɵɵelement(125, \"img\", 11)(126, \"br\")(127, \"br\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(128, \"tr\")(129, \"td\")(130, \"strong\");\n      i0.ɵɵtext(131, \"javaScript\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(132, \"td\");\n      i0.ɵɵtext(133, \" En javaScript el objeto global es \");\n      i0.ɵɵelementStart(134, \"strong\");\n      i0.ɵɵtext(135, \"windows\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(136, \"br\")(137, \"br\");\n      i0.ɵɵtext(138, \" En nodejs el objeto global es \");\n      i0.ɵɵelementStart(139, \"strong\");\n      i0.ɵɵtext(140, \"global\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(141, \"br\")(142, \"br\")(143, \"img\", 12)(144, \"br\")(145, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(146, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(147, \"tr\")(148, \"td\")(149, \"strong\");\n      i0.ɵɵtext(150, \"TypeScript\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(151, \"td\");\n      i0.ɵɵtext(152, \" Es un super set de JavaScript es decir internamente esta es escrito en JavaScript pero TypeScript no lo reemplaza a JavaScript en totalidad quiere decir que algunas tareas definitivamente se deben hacer en JavaScript. \");\n      i0.ɵɵelement(153, \"br\");\n      i0.ɵɵtext(154, \" Los navegadores no entienden TypeScript es por ello que aunque angular tiene su codigo en TypeScript se requiere ser transpilado a JavaScript \");\n      i0.ɵɵelement(155, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(156, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(157, \"tr\")(158, \"td\")(159, \"strong\");\n      i0.ɵɵtext(160, \"nodejs\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(161, \"td\");\n      i0.ɵɵtext(162, \" En nodejs el objeto global es \");\n      i0.ɵɵelementStart(163, \"strong\");\n      i0.ɵɵtext(164, \"global\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(165, \"br\")(166, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(167, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(168, \"tr\")(169, \"td\")(170, \"a\", 13);\n      i0.ɵɵtext(171, \"Call Stack\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(172, \"td\");\n      i0.ɵɵtext(173, \" es la pila de las tareas, en ella podemos ver que funcion se esta ejecuntando a cual va ir .. y la linea de codigo donde viene. \");\n      i0.ɵɵelement(174, \"br\")(175, \"br\");\n      i0.ɵɵtext(176, \" Es por eso que solo puede ejecutar una tarea a la vez, ademas es \");\n      i0.ɵɵelementStart(177, \"strong\");\n      i0.ɵɵtext(178, \"LIFO\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(179, \" Last In First Out \\\"El ultimo que Ingreso es que Primero Salir\\\" \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(180, \"td\");\n      i0.ɵɵelement(181, \"img\", 14)(182, \"br\")(183, \"br\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(184, \"tr\")(185, \"td\")(186, \"strong\");\n      i0.ɵɵtext(187, \"Primer paso\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(188, \"td\");\n      i0.ɵɵtext(189, \" 1. Una vez que el cliente hace una request al motor de renderizado este internamente lo primero que define es un \");\n      i0.ɵɵelementStart(190, \"strong\");\n      i0.ɵɵtext(191, \"entorno global\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(192, \" donde define 3 cosas principalmente: \");\n      i0.ɵɵelement(193, \"br\")(194, \"br\");\n      i0.ɵɵelementStart(195, \"strong\");\n      i0.ɵɵtext(196, \"1. Objeto Global = windows \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(197, \"br\");\n      i0.ɵɵelementStart(198, \"strong\");\n      i0.ɵɵtext(199, \"2. this = windows \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(200, \"br\");\n      i0.ɵɵelementStart(201, \"strong\");\n      i0.ɵɵtext(202, \"3. Outer enviroment\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(203, \"td\");\n      i0.ɵɵtext(204, \" 1. \");\n      i0.ɵɵelement(205, \"img\", 15)(206, \"br\")(207, \"br\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(208, \"tr\")(209, \"td\")(210, \"strong\")(211, \"a\", 16);\n      i0.ɵɵtext(212, \"Segundo Paso\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(213, \"td\");\n      i0.ɵɵtext(214, \" 2. Luego de definir el entorno global define un stack de tareas que debe realizar \\\"Apila las tareas una sobre otras\\\" \");\n      i0.ɵɵelement(215, \"br\")(216, \"br\");\n      i0.ɵɵtext(217, \" 2. \");\n      i0.ɵɵelement(218, \"img\", 17)(219, \"br\")(220, \"br\");\n      i0.ɵɵtext(221, \" 3. Despues el motor de renderizado descarga, parsea, compila y ejecuta el \");\n      i0.ɵɵelementStart(222, \"strong\");\n      i0.ɵɵtext(223, \"archivo.js\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(224, \"br\")(225, \"br\");\n      i0.ɵɵtext(226, \"Como se puede ver en a grafica \");\n      i0.ɵɵelementStart(227, \"strong\");\n      i0.ɵɵtext(228, \"AST Abstract Syntax Tree\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(229, \": Es el arbol de keywords que el motor arma para entender la jerarquia de los elementos \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(230, \"td\");\n      i0.ɵɵtext(231, \" 3. \");\n      i0.ɵɵelement(232, \"img\", 18)(233, \"br\")(234, \"br\");\n      i0.ɵɵtext(235, \" 3. \");\n      i0.ɵɵelement(236, \"img\", 19)(237, \"br\")(238, \"br\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(239, \"tr\")(240, \"td\")(241, \"Strong\")(242, \"a\", 20);\n      i0.ɵɵtext(243, \"Consideraciones\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(244, \"td\");\n      i0.ɵɵtext(245, \" JavaScript solo puede realizar una tarea a la vez \");\n      i0.ɵɵelement(246, \"br\")(247, \"br\")(248, \"br\");\n      i0.ɵɵtext(249, \" Ahora \");\n      i0.ɵɵelementStart(250, \"strong\");\n      i0.ɵɵtext(251, \"memory heap: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(252, \"Es el lugar donde se van a almacenar la variables y las funciones del programa \");\n      i0.ɵɵelement(253, \"br\")(254, \"br\");\n      i0.ɵɵtext(255, \" y \");\n      i0.ɵɵelementStart(256, \"strong\");\n      i0.ɵɵtext(257, \"Call stack : \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(258, \"Es la pila de tareas que debe realizar el programa, como se ve lo que primero se va a ejecutar es el objeto global y lo primero que sale es lo primero que entro es decir de abajo hacia arriba se van desarrollando \");\n      i0.ɵɵelement(259, \"br\")(260, \"br\")(261, \"br\")(262, \"img\", 21)(263, \"br\")(264, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(265, \"td\");\n      i0.ɵɵelement(266, \"img\", 22)(267, \"br\")(268, \"br\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(269, \"tr\")(270, \"td\")(271, \"strong\")(272, \"a\", 23);\n      i0.ɵɵtext(273, \"Garbage Collection\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(274, \"td\");\n      i0.ɵɵtext(275, \" Limpia la memoria de los datos no utilizados para no sobrecargarla y seguir trabajando sin problemas. \");\n      i0.ɵɵelement(276, \"br\")(277, \"br\");\n      i0.ɵɵtext(278, \"El algoritmo Mark & Sweep hace referencia a cuando un tipo de dato se vuelve inalcanzable para el programa. Se toma una ra\\u00EDz la cual es el Objeto Global y a medida que el programa avanza, los objetos van creando o borrando referencias a sus ra\\u00EDces. \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(279, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(280, \"tr\")(281, \"td\")(282, \"strong\")(283, \"a\", 24);\n      i0.ɵɵtext(284, \"Stack overflow\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(285, \"td\");\n      i0.ɵɵtext(286, \" El stack overflow se genera cuando el call stack se llena completamente (pila de tareas) .Esto pasa cuando se genera o se trabaja con bucles infinitos, recursividad y funciones.Entonces este entra en stack overflow. \");\n      i0.ɵɵelement(287, \"br\")(288, \"br\");\n      i0.ɵɵtext(289, \"Antes chrome se bloqueaba con un stack overflow ahora con un determinado numero de interactiones el puede determinar que puede causar un stack overflow y bloquea de manera automatica la funcion y no el navegador. \");\n      i0.ɵɵelement(290, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(291, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(292, \"tr\")(293, \"td\")(294, \"strong\")(295, \"a\", 25);\n      i0.ɵɵtext(296, \"JavaScript Runtime\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(297, \"td\");\n      i0.ɵɵtext(298, \" Todos las funciones predefenidas que puede hacer el \");\n      i0.ɵɵelementStart(299, \"strong\");\n      i0.ɵɵtext(300, \"navegador\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(301, \" como setTimeOut() son llamadas APIS y todas estas las podemos encontrar en el siguiente \");\n      i0.ɵɵelementStart(302, \"a\", 26);\n      i0.ɵɵtext(303, \"link\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(304, \"br\")(305, \"br\");\n      i0.ɵɵtext(306, \" El runtime de JavaScript es sincrono es decir solo puede ejecutar una tarea a la vez \");\n      i0.ɵɵelement(307, \"br\")(308, \"br\");\n      i0.ɵɵelementStart(309, \"strong\");\n      i0.ɵɵtext(310, \"PERO PEROOOOOO\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(311, \" un efecto para ser asincrono es decir que son llevadas a cabo varias tareas a la vez es cuando \");\n      i0.ɵɵelementStart(312, \"strong\");\n      i0.ɵɵtext(313, \"JavaScript\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(314, \" hace unas tareas y el \");\n      i0.ɵɵelementStart(315, \"strong\");\n      i0.ɵɵtext(316, \"navegador\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(317, \" hace otras. aca cabe las apis que estan en link mas arriba funciones que el navegador es capaz de hacer. \");\n      i0.ɵɵelement(318, \"br\")(319, \"br\");\n      i0.ɵɵtext(320, \" Cuando en el call stack hay tareas que son del navegador javaScript se las delega para que este las lleve a cabo y javaScript continua con las demas tareas del call stack. \");\n      i0.ɵɵelement(321, \"br\")(322, \"br\");\n      i0.ɵɵtext(323, \" Taquer\\u00EDa DeGranda presenta a: \");\n      i0.ɵɵelement(324, \"br\")(325, \"br\");\n      i0.ɵɵtext(326, \" Cocina = Navegador \");\n      i0.ɵɵelement(327, \"br\");\n      i0.ɵɵtext(328, \" taquero = JavaScript \");\n      i0.ɵɵelement(329, \"br\")(330, \"br\");\n      i0.ɵɵtext(331, \" \\uD83C\\uDF2E - call stack : el taquero (\\u00F3rdenes r\\u00E1pidas) \");\n      i0.ɵɵelement(332, \"br\");\n      i0.ɵɵtext(333, \" \\uD83D\\uDC68\\u200D\\uD83C\\uDF73 - web APIs : la cocina\");\n      i0.ɵɵelement(334, \"br\");\n      i0.ɵɵtext(335, \" \\uD83C\\uDF2F - callback queue : las \\u00F3rdenes preparadas\");\n      i0.ɵɵelement(336, \"br\");\n      i0.ɵɵtext(337, \" \\uD83D\\uDC81\\u200D\\u2642\\uFE0F - event loop : el mesero\");\n      i0.ɵɵelement(338, \"br\");\n      i0.ɵɵtext(339, \" Event loop: siempre esta revisando u observando a ver si javaScripto o el navegador acaba una tarea para delegarles tareas pendientes \");\n      i0.ɵɵelement(340, \"br\")(341, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(342, \"td\");\n      i0.ɵɵelement(343, \"img\", 27)(344, \"br\")(345, \"br\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(346, \"tr\")(347, \"td\")(348, \"a\", 28)(349, \"strong\");\n      i0.ɵɵtext(350, \"Coercion de tipos\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(351, \"td\");\n      i0.ɵɵtext(352, \" JavaScript internamente corrige tipos de variables para hacer operaciones es decir, puede operar entre un '2' + 10 = 12 (string)+(number), lo que no hacen otros lenguajes\");\n      i0.ɵɵelement(353, \"br\")(354, \"br\");\n      i0.ɵɵtext(355, \" Cuando son objetos, arrays o funciones \");\n      i0.ɵɵelementStart(356, \"strong\");\n      i0.ɵɵtext(357, \"(Cosas que nos tipos primitivos)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(358, \" no se pueden comparar por mas que sus valores de campo y clave sean los mismos esto es debido a que cuando se trata de comparar lo que entiende el programa es comparar \");\n      i0.ɵɵelementStart(359, \"strong\");\n      i0.ɵɵtext(360, \"ESPACIOS DE MEMORIA\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(361, \" es por esto que siempre van a dar false, para solucionar esto es posible emplear \");\n      i0.ɵɵelementStart(362, \"strong\")(363, \"u\");\n      i0.ɵɵtext(364, \"dos formas\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(365, \"br\")(366, \"br\");\n      i0.ɵɵelementStart(367, \"strong\");\n      i0.ɵɵtext(368, \"1. JSON.stringify(objeto)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(369, \" convertir las claves y valores del objeto en un string \");\n      i0.ɵɵelementStart(370, \"strong\");\n      i0.ɵɵtext(371);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(372, \"br\")(373, \"br\");\n      i0.ɵɵelementStart(374, \"strong\");\n      i0.ɵɵtext(375, \"2. JSON.parse(prueba); \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(376, \"pasa de un string a un objeto JSON //de la manera como se ve la imagen \");\n      i0.ɵɵelement(377, \"br\")(378, \"br\")(379, \"img\", 29)(380, \"br\");\n      i0.ɵɵelementStart(381, \"strong\");\n      i0.ɵɵtext(382, \"LODASH\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(383, \" Es una libreria que tiene una funcion llamada - isEqual que intera todos los valores del objeto y tenermina si es igual o no \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(384, \"td\")(385, \"strong\");\n      i0.ɵɵtext(386, \"Doble igual \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(387, \": == \");\n      i0.ɵɵelementStart(388, \"u\");\n      i0.ɵɵtext(389, \"Operador de igualdad debil\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(390, \"br\")(391, \"br\");\n      i0.ɵɵelementStart(392, \"strong\");\n      i0.ɵɵtext(393, \"Tripe igual \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(394, \": === \");\n      i0.ɵɵelementStart(395, \"u\");\n      i0.ɵɵtext(396, \"Operador de igualdad estricta\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(397, \" (cuando son con tipos primitivos= compara si es el mismo valor y el mismo tipo)/ \");\n      i0.ɵɵelementStart(398, \"u\");\n      i0.ɵɵtext(399, \"Operador de identidad\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(400, \" (cuando son objetos = compara ademas si es el mismo espacio de memoria) \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(401, \"tr\")(402, \"td\")(403, \"strong\")(404, \"a\", 30);\n      i0.ɵɵtext(405, \"Coercion\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(406, \"td\")(407, \"strong\");\n      i0.ɵɵtext(408, \"Coercion implicita \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(409, \": Cuando el lenguaje por si solo realiza la interpretacion de la variable \");\n      i0.ɵɵelement(410, \"br\")(411, \"br\");\n      i0.ɵɵelementStart(412, \"strong\");\n      i0.ɵɵtext(413, \"Coercion explicita \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(414, \": Cuando el programador determina el tipo de variable \");\n      i0.ɵɵelement(415, \"br\")(416, \"br\");\n      i0.ɵɵelementStart(417, \"strong\");\n      i0.ɵɵtext(418, \"Coerci\\u00F3n a n\\u00FAmeros\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(419, \"br\")(420, \"br\");\n      i0.ɵɵtext(421, \" El operador \");\n      i0.ɵɵelementStart(422, \"strong\");\n      i0.ɵɵtext(423, \"unario\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(424, \" +(plus) se puede utilizar para convertir un string a number, si dicho string representa un n\\u00FAmero en su totalidad, de lo contrario devuelve NaN (Not A Number). \");\n      i0.ɵɵelement(425, \"br\")(426, \"br\");\n      i0.ɵɵtext(427, \" 1. n = +\\\"13\\\"; // 13, type: number \");\n      i0.ɵɵelement(428, \"br\");\n      i0.ɵɵtext(429, \" 2. n = +\\\"0\\\"; // 0, type: number \");\n      i0.ɵɵelement(430, \"br\");\n      i0.ɵɵtext(431, \" 3. n = +\\\"5px\\\"; // NaN, type: number \");\n      i0.ɵɵelement(432, \"br\")(433, \"br\");\n      i0.ɵɵtext(434, \" Las funciones parseFloat() y parseInt(), operan de una forma muy similar, pero con una diferencia respecto al operador unario +, y es que los m\\u00E9todos antes mencionados convierten los primeros d\\u00EDgitos num\\u00E9ricos de un string a su representaci\\u00F3n num\\u00E9rica, aunque ese string no est\\u00E9 compuesto en su totalidad por n\\u00FAmeros: \");\n      i0.ɵɵelement(435, \"br\")(436, \"br\");\n      i0.ɵɵtext(437, \" 1. n = +\\\"12px\\\"; // NaN, type: number \");\n      i0.ɵɵelement(438, \"br\");\n      i0.ɵɵtext(439, \" 2. n = parseFloat(\\\"12px\\\"); // 12, type: number \");\n      i0.ɵɵelement(440, \"br\")(441, \"br\");\n      i0.ɵɵelementStart(442, \"strong\");\n      i0.ɵɵtext(443, \"Coerci\\u00F3n en objetos\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(444, \" ver mas tipos de coercion en la palabra principal o en el siguiente \");\n      i0.ɵɵelementStart(445, \"a\", 31);\n      i0.ɵɵtext(446, \"enlace\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(447, \" o en \");\n      i0.ɵɵelementStart(448, \"a\", 32);\n      i0.ɵɵtext(449, \"platzi \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(450, \"br\")(451, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(452, \"td\");\n      i0.ɵɵtext(453, \" sumar = \");\n      i0.ɵɵelementStart(454, \"strong\");\n      i0.ɵɵtext(455, \"Number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(456, \"(valor1) + valor2 //pasar de string a Number \");\n      i0.ɵɵelement(457, \"br\")(458, \"br\");\n      i0.ɵɵelementStart(459, \"a\", 33);\n      i0.ɵɵtext(460, \"Coercion\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(461, \"br\")(462, \"br\");\n      i0.ɵɵtext(463, \" let a = 20; let b= \");\n      i0.ɵɵelementStart(464, \"strong\");\n      i0.ɵɵtext(465, \"String\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(466, \"(a) // pasar de number a string \");\n      i0.ɵɵelement(467, \"br\")(468, \"br\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(469, \"tr\")(470, \"td\");\n      i0.ɵɵtext(471, \"versiones \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(472, \"td\");\n      i0.ɵɵtext(473, \" node = node -v \");\n      i0.ɵɵelement(474, \"br\");\n      i0.ɵɵtext(475, \" npm = npm -v \");\n      i0.ɵɵelement(476, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(477, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(478, \"tr\")(479, \"td\");\n      i0.ɵɵtext(480, \"interar \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(481, \"td\");\n      i0.ɵɵtext(482);\n      i0.ɵɵelement(483, \"br\");\n      i0.ɵɵtext(484, \" Array [ ] si se puede (a diferencia en Java que los arrays son tratados como objetos) \");\n      i0.ɵɵelement(485, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(486, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(487, \"tr\")(488, \"td\")(489, \"a\", 34)(490, \"strong\");\n      i0.ɵɵtext(491, \"Array 1\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(492, \"br\")(493, \"br\");\n      i0.ɵɵelementStart(494, \"strong\")(495, \"a\", 35);\n      i0.ɵɵtext(496, \"Array 2\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(497, \"td\");\n      i0.ɵɵtext(498, \" Trabajo con arrays en javaScript podemos tener un array con elementos de varios tipos\");\n      i0.ɵɵelement(499, \"br\")(500, \"br\");\n      i0.ɵɵtext(501, \" const a = [\\\"Uno\\\", 1, true, [\\\"casa\\\",\\\"perro\\\",\\\"gato\\\"], \\\"mazana\\\"]; \");\n      i0.ɵɵelement(502, \"br\")(503, \"br\");\n      i0.ɵɵtext(504, \" console.log(a[2]); //true \");\n      i0.ɵɵelement(505, \"br\");\n      i0.ɵɵtext(506, \" console.log(a[3][1]); //perro \");\n      i0.ɵɵelement(507, \"br\")(508, \"br\");\n      i0.ɵɵtext(509, \" Puede ser definido con let o const pero se recomienda const pues es una constante que no va a cambiar, es decir se le puede agregar o quitar elementos pero siempre van a se un array. \");\n      i0.ɵɵelement(510, \"br\")(511, \"br\");\n      i0.ɵɵtext(512, \" tambien mas informacion detallada en \");\n      i0.ɵɵelementStart(513, \"a\", 36);\n      i0.ɵɵtext(514, \"link\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(515, \"td\");\n      i0.ɵɵtext(516, \"https://www.w3schools.com/js/tryit.asp?filename=tryjs_array_pop\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(517, \"tr\")(518, \"td\")(519, \"strong\")(520, \"a\", 37);\n      i0.ɵɵtext(521, \"Objeto\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(522, \"td\");\n      i0.ɵɵtext(523, \" Un objeto es una coleccion de llave valor \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(524, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(525, \"tr\")(526, \"td\")(527, \"strong\");\n      i0.ɵɵtext(528, \"Hoisting\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(529, \"td\");\n      i0.ɵɵtext(530, \" Si definimos una variable con \");\n      i0.ɵɵelementStart(531, \"strong\");\n      i0.ɵɵtext(532, \"var\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(533, \" la podemos ver en windows \\\"cuando imprimes windows por consola\\\" y si definimos la variable con \");\n      i0.ɵɵelementStart(534, \"strong\");\n      i0.ɵɵtext(535, \"let \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(536, \" no aparece en windows queda en \");\n      i0.ɵɵelementStart(537, \"strong\");\n      i0.ɵɵtext(538, \"scope\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(539, \" donde fue definida. \");\n      i0.ɵɵelement(540, \"br\")(541, \"br\");\n      i0.ɵɵtext(542, \" en versiones de EcmaScript 6 hacia atras solo existia \");\n      i0.ɵɵelementStart(543, \"strong\");\n      i0.ɵɵtext(544, \"var\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(545, \" ya en nuevas versiones encontramos \");\n      i0.ɵɵelementStart(546, \"strong\")(547, \"a\", 38);\n      i0.ɵɵtext(548, \" let y const : entrando a TEMPORAL DEAD ZONE \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtext(549, \" y con esto ya no \");\n      i0.ɵɵelementStart(550, \"strong\");\n      i0.ɵɵtext(551, \"genera un Hoisting \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(552, \"br\")(553, \"br\");\n      i0.ɵɵelementStart(554, \"strong\");\n      i0.ɵɵtext(555, \"TEMPORAL DEAD ZONE \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(556, \" o zona muerta temporal = Es una region donde se ubican las variables que aun no se pueden acceder porque en la ejecucion del programa aun no han sido declaradas \");\n      i0.ɵɵelement(557, \"br\")(558, \"br\");\n      i0.ɵɵelementStart(559, \"strong\");\n      i0.ɵɵtext(560, \"tanto var, let y const son elevaadas PEROOOOOOOO\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(561, \" la diferencia radica que let y const entran a esta zona temporalmente muerta hasta que sean inicializadas y dara error y se detiene la ejecucion del programa si se leen antes de inicializarse, pero con var si se intentan leer antes de inicializarse solo dara undefined y no se detiene la ejecucion del programa. \");\n      i0.ɵɵelement(562, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(563, \"td\");\n      i0.ɵɵtext(564, \" Las funciones tambien son elevadas y se puede interpretar una funcion antes de encontrar su definicion \");\n      i0.ɵɵelement(565, \"br\")(566, \"br\");\n      i0.ɵɵtext(567, \"Precisamente un error de hoisting es llamar una funcion o una varaible que aun no ha sido inicializada. \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(568, \"tr\")(569, \"td\")(570, \"strong\");\n      i0.ɵɵtext(571, \"datos\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(572, \"td\");\n      i0.ɵɵtext(573, \" Cuando se consulta variables \");\n      i0.ɵɵelementStart(574, \"strong\");\n      i0.ɵɵtext(575, \"primitivas: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(576, \"Se accede a su valor \");\n      i0.ɵɵelement(577, \"br\");\n      i0.ɵɵtext(578, \" Cuando se consula variables \");\n      i0.ɵɵelementStart(579, \"strong\");\n      i0.ɵɵtext(580, \"compuestos o complejos: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(581, \"Se accede a su referencia donde esta su valor \");\n      i0.ɵɵelement(582, \"br\")(583, \"br\")(584, \"br\");\n      i0.ɵɵelementStart(585, \"strong\");\n      i0.ɵɵtext(586, \"const\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(587, \"br\")(588, \"br\");\n      i0.ɵɵtext(589, \" Si definimos una variable primitiva con \");\n      i0.ɵɵelementStart(590, \"strong\");\n      i0.ɵɵtext(591, \"const \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(592, \"br\")(593, \"br\");\n      i0.ɵɵtext(594, \" 1. Tiene que estar inicializada en la misma linea donde es declarada \");\n      i0.ɵɵelement(595, \"br\");\n      i0.ɵɵtext(596, \" 2. Su valo no se puede re-definir lineas despues \");\n      i0.ɵɵelement(597, \"br\")(598, \"br\");\n      i0.ɵɵelementStart(599, \"strong\");\n      i0.ɵɵtext(600, \"PERO PERO ...\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(601, \"br\")(602, \"br\");\n      i0.ɵɵtext(603, \" Lo anterior no aplica para variables compuestas o complejas y esto es debido a que la referencia de su ubicacion no cambia de hecho sigue siendo el mismo espacio de memoria que se reservo en un principio sus atributos, caracteristicas o propiedades si es un objeto o un array lo que sea puede cambiar. \");\n      i0.ɵɵelement(604, \"br\")(605, \"br\");\n      i0.ɵɵtext(606, \" (por agragar o quitar elementos no va a dejar de ser un array, objeto o cualqueir otro tipo de valor compuesto o complejo) \");\n      i0.ɵɵelement(607, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(608, \"img\", 39)(609, \"br\")(610, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(611, \"tr\")(612, \"td\")(613, \"strong\")(614, \"a\", 40);\n      i0.ɵɵtext(615, \"Valores: Truthy y Falsy\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(616, \"td\");\n      i0.ɵɵtext(617, \" valores que por default son true o false \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(618, \"td\")(619, \"strong\");\n      i0.ɵɵtext(620, \"The following values are always falsy: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(621, \"br\");\n      i0.ɵɵtext(622, \" false\");\n      i0.ɵɵelement(623, \"br\");\n      i0.ɵɵtext(624, \" 0 (zero)\");\n      i0.ɵɵelement(625, \"br\");\n      i0.ɵɵtext(626, \" -0 (minus zero)\");\n      i0.ɵɵelement(627, \"br\");\n      i0.ɵɵtext(628, \" 0n (BigInt zero)\");\n      i0.ɵɵelement(629, \"br\");\n      i0.ɵɵtext(630, \" ' ', \\\" \\\", ` ` (empty string)\");\n      i0.ɵɵelement(631, \"br\");\n      i0.ɵɵtext(632, \" null\");\n      i0.ɵɵelement(633, \"br\");\n      i0.ɵɵtext(634, \" undefined\");\n      i0.ɵɵelement(635, \"br\");\n      i0.ɵɵtext(636, \" NaN\");\n      i0.ɵɵelement(637, \"br\")(638, \"br\");\n      i0.ɵɵelementStart(639, \"strong\");\n      i0.ɵɵtext(640, \"Everything else is truthy. That includes:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(641, \"br\");\n      i0.ɵɵtext(642, \" '0' (a string containing a single zero)\");\n      i0.ɵɵelement(643, \"br\");\n      i0.ɵɵtext(644, \" 'false' (a string containing the text \\u201Cfalse\\u201D)\");\n      i0.ɵɵelement(645, \"br\");\n      i0.ɵɵtext(646, \" [ ] (an empty array)\");\n      i0.ɵɵelement(647, \"br\");\n      i0.ɵɵtext(648);\n      i0.ɵɵelement(649, \"br\");\n      i0.ɵɵtext(650);\n      i0.ɵɵelement(651, \"br\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(652, \"tr\")(653, \"td\");\n      i0.ɵɵtext(654, \"Paradigma Funcional\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(655, \"td\");\n      i0.ɵɵtext(656, \" Esta filosofia esta orientada a: \");\n      i0.ɵɵelement(657, \"br\")(658, \"br\");\n      i0.ɵɵtext(659, \" 1. No \");\n      i0.ɵɵelementStart(660, \"strong\");\n      i0.ɵɵtext(661, \"MUTAR LAS VARIABLES CUANDO SON LLAMADAS EN FUNCIONES\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(662, \": Esto quiere decir que en vez de modificar variables se cree unas nuevas dentro de las funciones para que de esta manera nuestro codigo sea facil al no tener distintos valores para las varaibles dentro de nuestro codigo \");\n      i0.ɵɵelement(663, \"br\")(664, \"br\");\n      i0.ɵɵtext(665, \" 2. Dentro de este paradigma podemos suponer que se dispone de un monton de memoria\");\n      i0.ɵɵelement(666, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(667, \"td\")(668, \"strong\");\n      i0.ɵɵtext(669, \"Funciones =\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(670, \"Son ciudadanas de 1\\u00B0 Orden \");\n      i0.ɵɵelement(671, \"br\")(672, \"br\");\n      i0.ɵɵelementStart(673, \"strong\")(674, \"a\", 41);\n      i0.ɵɵtext(675, \"hay dos tipos de funciones\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(676, \"br\")(677, \"br\");\n      i0.ɵɵelementStart(678, \"strong\");\n      i0.ɵɵtext(679, \"1. funciones declaradas: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(680, \"Una funcion normal como la conocemos\");\n      i0.ɵɵelement(681, \"br\");\n      i0.ɵɵelementStart(682, \"strong\");\n      i0.ɵɵtext(683, \"2. funciones expresadas: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(684, \"Cuando el valor de una variable esta definida por una funcion, esta funcion \");\n      i0.ɵɵelementStart(685, \"strong\");\n      i0.ɵɵtext(686, \"No se puede llamar antes de la variable\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(687, \" solo despues de definirla en la variable puede ser llamada \");\n      i0.ɵɵelement(688, \"br\")(689, \"br\");\n      i0.ɵɵtext(690, \" Es decir la funcion declarada puede ser llamada antes y despues de su definicion y la expresada solo puede ser llamada despues de su definicion \");\n      i0.ɵɵelement(691, \"br\")(692, \"br\");\n      i0.ɵɵelementStart(693, \"strong\");\n      i0.ɵɵtext(694, \"Funciones de Orden superior \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(695, \": \");\n      i0.ɵɵelement(696, \"br\");\n      i0.ɵɵtext(697, \" 1. Variables que su valor esta definido por una funcion \");\n      i0.ɵɵelement(698, \"br\");\n      i0.ɵɵtext(699, \"2. Funciones que reciben por parametro otra funcion \");\n      i0.ɵɵelement(700, \"br\");\n      i0.ɵɵtext(701, \"3. Funciones que como resultado de su ejecucion retornan otra funcion \");\n      i0.ɵɵelement(702, \"br\")(703, \"br\");\n      i0.ɵɵelementStart(704, \"strong\");\n      i0.ɵɵtext(705, \"map, filter y reduce son de orden superior NO MODIFICAN EL ARRAY ORIGINAL\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(706, \"tr\")(707, \"td\")(708, \"a\", 42);\n      i0.ɵɵtext(709, \"Funciones Puras\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(710, \"td\");\n      i0.ɵɵtext(711, \" 1. Funciones que al ser invocadas con los mismos argumentos siempre producen el mismo valor \");\n      i0.ɵɵelement(712, \"br\")(713, \"br\");\n      i0.ɵɵtext(714, \" 2. No producen efectos secundarios (que al ser ejecutas no alteran el estado del programa y no alteran ninguna variable externa) \");\n      i0.ɵɵelement(715, \"br\")(716, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(717, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(718, \"tr\")(719, \"td\")(720, \"a\", 43);\n      i0.ɵɵtext(721, \"Paso de Par\\u00E1metros\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(722, \"td\");\n      i0.ɵɵtext(723, \" pueden ser: \");\n      i0.ɵɵelement(724, \"br\")(725, \"br\");\n      i0.ɵɵtext(726, \"1. Predeterminados \");\n      i0.ɵɵelement(727, \"br\");\n      i0.ɵɵtext(728, \"2. Opcionales\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(729, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(730, \"tr\")(731, \"td\")(732, \"strong\")(733, \"a\", 44);\n      i0.ɵɵtext(734, \"templete string\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(735, \"br\")(736, \"br\");\n      i0.ɵɵtext(737, \" ``\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(738, \"td\");\n      i0.ɵɵtext(739, \"Con acento invertido o back tick o acento grave \");\n      i0.ɵɵelementStart(740, \"strong\");\n      i0.ɵɵtext(741);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(742, \"br\")(743, \"br\");\n      i0.ɵɵtext(744, \"Como es posible de identificar con templete string respeta la sangria o tabulacion ademas nos permite escribir codigo en varias lineas con doble comillas o comillas sensillas debemos usar contatenacion de string para varias lineas \");\n      i0.ɵɵelement(745, \"br\")(746, \"br\")(747, \"img\", 45);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(748, \"td\");\n      i0.ɵɵelement(749, \"img\", 46)(750, \"br\")(751, \"br\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(752, \"tr\")(753, \"td\")(754, \"strong\")(755, \"a\", 47);\n      i0.ɵɵtext(756, \"Errores\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(757, \"td\");\n      i0.ɵɵtext(758, \" Si hay un error o no.... el bloque \");\n      i0.ɵɵelementStart(759, \"strong\");\n      i0.ɵɵtext(760, \"finaly\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(761, \" siempre se va a ejecutar \");\n      i0.ɵɵelement(762, \"br\")(763, \"br\");\n      i0.ɵɵtext(764, \" Se pueden lanzar errores personalizados un ejemplo es que se este esperando un dato de cierto tipo y el usuario ingresa un dato erroneo o de un tipo diferente en este caso puedo lanzar un error.\");\n      i0.ɵɵelement(765, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(766, \"td\");\n      i0.ɵɵelement(767, \"img\", 48)(768, \"br\")(769, \"br\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(770, \"tr\")(771, \"td\")(772, \"strong\");\n      i0.ɵɵtext(773, \".map()\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(774, \"td\");\n      i0.ɵɵtext(775, \" NO PUEDE EJECUTAR FUNCIONES ASINCRONAS \");\n      i0.ɵɵelementStart(776, \"strong\");\n      i0.ɵɵtext(777, \"(solo sincronas)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(778, \"br\")(779, \"br\");\n      i0.ɵɵtext(780, \" 1. Cuando tenemos un array y queremos obtener uno nuevo ver \");\n      i0.ɵɵelementStart(781, \"strong\");\n      i0.ɵɵtext(782, \"Retornos temprano\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(783, \" En este apartado se ejemplifica el hecho de obtener un nuevo array apartir de uno ya existente. \");\n      i0.ɵɵelement(784, \"br\")(785, \"br\");\n      i0.ɵɵtext(786, \" 2. Cuando queremos \");\n      i0.ɵɵelementStart(787, \"strong\");\n      i0.ɵɵtext(788, \"Extraer datos de un objeto\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(789, \" creamos un nuevo objeto, aplicamos arrows funcions ya sea de cualquera de las dos formas siguientes \");\n      i0.ɵɵelement(790, \"br\")(791, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(792, \"td\");\n      i0.ɵɵtext(793, \"2.1 \");\n      i0.ɵɵelement(794, \"img\", 49)(795, \"br\")(796, \"br\");\n      i0.ɵɵtext(797, \" 2.2 \");\n      i0.ɵɵelement(798, \"img\", 50)(799, \"br\")(800, \"br\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(801, \"tr\")(802, \"td\");\n      i0.ɵɵtext(803, \"Retornos temprano\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(804, \"td\");\n      i0.ɵɵtext(805, \" Esto es una tecnica que es sacar lo que no nos intera en primer lugar \");\n      i0.ɵɵelement(806, \"br\")(807, \"br\");\n      i0.ɵɵtext(808, \" para el ejemplo de la figura queremos aplicar un descuento a los productos que cuestan mas de 1000 tenemos un array de productos y necesitamos modificar el tercer atributo \");\n      i0.ɵɵelement(809, \"br\")(810, \"br\");\n      i0.ɵɵtext(811, \" 1. Entonces guardamos en un nuevo array la salida y con la funcion transformadora .map tomamos cada elemento del array \");\n      i0.ɵɵelement(812, \"br\")(813, \"br\");\n      i0.ɵɵtext(814, \" 2. La segunta imagen es la forma equivocada de modificar el tercer atributo del objeto que nos interesa: esto es porque 1\\u00B0 Modificamos el array original y 2\\u00B0 es que efectivamente SI modificamos el atributo que nos interesaba \");\n      i0.ɵɵelementStart(815, \"strong\");\n      i0.ɵɵtext(816, \"PEROOOO NO LO ESTAMOS RETORNANDO \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(817, \"y esto es un error pues al consultar el array solo va a mostrar los valores que retornaron y saldra UNDEFINED a los campos que no tienen valor\");\n      i0.ɵɵelement(818, \"br\")(819, \"br\");\n      i0.ɵɵtext(820, \" 3. la tercera es la manera correcta de hacer el trabajo, esto es un objeto completamente nuevo con la linea \");\n      i0.ɵɵelementStart(821, \"strong\");\n      i0.ɵɵtext(822, \"12\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(823, \" hacemos una copia de un obejto ya existente y a los campos precio le aplicamos nuestra operacion \");\n      i0.ɵɵelement(824, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(825, \"td\");\n      i0.ɵɵtext(826, \"1. \");\n      i0.ɵɵelement(827, \"img\", 51)(828, \"br\")(829, \"br\");\n      i0.ɵɵtext(830, \" 2. \");\n      i0.ɵɵelement(831, \"img\", 52)(832, \"br\")(833, \"br\");\n      i0.ɵɵtext(834, \" 3. \");\n      i0.ɵɵelement(835, \"img\", 53)(836, \"br\")(837, \"br\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(838, \"tr\")(839, \"td\")(840, \"strong\");\n      i0.ɵɵtext(841, \".map()\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(842, \"td\");\n      i0.ɵɵtext(843, \"1. Asignamos a un array los valores devultos de .map\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(844, \"td\");\n      i0.ɵɵtext(845, \" 1. \");\n      i0.ɵɵelement(846, \"img\", 54)(847, \"br\")(848, \"br\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(849, \"tr\")(850, \"td\")(851, \"strong\");\n      i0.ɵɵtext(852, \".filter()\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(853, \"td\");\n      i0.ɵɵtext(854, \" Este nos ayuda a crear un nuevo array con nuevos elementos apartir de uno ya existente \");\n      i0.ɵɵelementStart(855, \"strong\");\n      i0.ɵɵtext(856, \"PERO\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(857, \" configurando un filtro para seleccionar de acuerdo a X condiciones \");\n      i0.ɵɵelement(858, \"br\")(859, \"br\");\n      i0.ɵɵtext(860, \"Para este ejemplo la funcion anonima se declara como predicado en otra variable y la variable es llamada como parametro. \");\n      i0.ɵɵelement(861, \"br\")(862, \"br\");\n      i0.ɵɵtext(863, \"En la imagen 2 sacamos en caso contrario \");\n      i0.ɵɵelement(864, \"br\")(865, \"br\");\n      i0.ɵɵtext(866, \"3. Tambien es usado para sacar los elementos repetidos de un array aprovechando su tercer parametro del predicado \");\n      i0.ɵɵelement(867, \"br\")(868, \"br\");\n      i0.ɵɵtext(869, \"a = variable x para nombrar a los elementos. \");\n      i0.ɵɵelement(870, \"br\");\n      i0.ɵɵtext(871, \"b = la posicion en caso de querer trabajar con una posicion especial si es de esta manera y no interesa llamar a los elementos se puede usar \\\"_\\\" guion bajo. \");\n      i0.ɵɵelement(872, \"br\");\n      i0.ɵɵtext(873, \"c= El nombre del array que queremos trabajar. \");\n      i0.ɵɵelement(874, \"br\")(875, \"br\");\n      i0.ɵɵtext(876, \" indexOf es usado para asignar un numero de posiciones a los elementos y como la posicion 4 y 5 los valores 3 y 1 ya tienen un indexOf \");\n      i0.ɵɵelementStart(877, \"strong\");\n      i0.ɵɵtext(878, \"No son agregados al nuevo array\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(879, \"td\");\n      i0.ɵɵtext(880, \"1 \");\n      i0.ɵɵelement(881, \"img\", 55)(882, \"br\")(883, \"br\");\n      i0.ɵɵtext(884, \" 2 \");\n      i0.ɵɵelement(885, \"img\", 56)(886, \"br\")(887, \"br\");\n      i0.ɵɵtext(888, \" 3 \");\n      i0.ɵɵelement(889, \"img\", 57)(890, \"br\")(891, \"br\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(892, \"tr\")(893, \"td\")(894, \"strong\")(895, \"a\", 58);\n      i0.ɵɵtext(896, \".filter()\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(897, \"td\");\n      i0.ɵɵtext(898, \" 1. filtrar del array del objetos original saco uno o varios empleamos a una varaible \");\n      i0.ɵɵelementStart(899, \"strong\");\n      i0.ɵɵtext(900, \"tambien de tipo array\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(901, \" con filter() \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(902, \"td\");\n      i0.ɵɵtext(903, \" 1. \");\n      i0.ɵɵelement(904, \"img\", 59)(905, \"br\")(906, \"br\");\n      i0.ɵɵtext(907, \" 1. \");\n      i0.ɵɵelement(908, \"img\", 60)(909, \"br\")(910, \"br\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(911, \"tr\")(912, \"td\")(913, \"strong\");\n      i0.ɵɵtext(914, \"Reduce\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(915, \"td\");\n      i0.ɵɵtext(916, \" Funciona como prensa: requiere un valor inicial y con cada interaccion el array se va haciendo mas peque\\u00F1o hasta reducirlo a un solo elemento \");\n      i0.ɵɵelement(917, \"br\")(918, \"br\");\n      i0.ɵɵelementStart(919, \"strong\");\n      i0.ɵɵtext(920, \"la funcion reduce recibe 2 parametros(la funcion anonima, el valor del acumulador)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(921, \"br\")(922, \"br\");\n      i0.ɵɵtext(923, \"El valor inicial puede ser 0 pero si no lo indica va a tonar el valor de la primera posicion del array que en este caso es 3 \");\n      i0.ɵɵelement(924, \"br\")(925, \"br\");\n      i0.ɵɵtext(926, \"2. forma corta \");\n      i0.ɵɵelement(927, \"br\")(928, \"br\");\n      i0.ɵɵtext(929, \"3. Tambien podemos poner como predicado la funcion anonima en una variable para despues llamarala como argumento o parametro del filter\");\n      i0.ɵɵelement(930, \"br\")(931, \"br\");\n      i0.ɵɵtext(932, \"4. Si el array esta vacio da error para que el programa no de error al ejecutarlo declaramos un \");\n      i0.ɵɵelementStart(933, \"strong\");\n      i0.ɵɵtext(934, \"if ternario que en caso de estar vacio el array asigne un 0 y al final el filter da 0 y el programa no se continua\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(935, \"td\");\n      i0.ɵɵtext(936, \"1 \");\n      i0.ɵɵelement(937, \"img\", 61)(938, \"br\")(939, \"br\");\n      i0.ɵɵtext(940, \" 2 \");\n      i0.ɵɵelement(941, \"img\", 62)(942, \"br\")(943, \"br\");\n      i0.ɵɵtext(944, \" 3 \");\n      i0.ɵɵelement(945, \"img\", 63)(946, \"br\")(947, \"br\");\n      i0.ɵɵtext(948, \" 4 \");\n      i0.ɵɵelement(949, \"img\", 64)(950, \"br\")(951, \"br\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(952, \"tr\")(953, \"td\")(954, \"strong\");\n      i0.ɵɵtext(955, \".find()\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(956, \"td\");\n      i0.ɵɵtext(957, \"Encontrar un elemento dentro de un array\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(958, \"td\");\n      i0.ɵɵelement(959, \"img\", 65)(960, \"br\")(961, \"br\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(962, \"tr\")(963, \"td\")(964, \"strong\");\n      i0.ɵɵtext(965, \".find()\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(966, \"td\");\n      i0.ɵɵtext(967, \" Encontrar un elemento dentro de un array si existe se carga dentro de la variable si no pues la varaible no se va a cargar recordar que todo lo que devulven estas funciones son nuevos arrays \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(968, \"td\");\n      i0.ɵɵelement(969, \"img\", 66)(970, \"br\")(971, \"br\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(972, \"tr\")(973, \"td\")(974, \"strong\")(975, \"a\", 34);\n      i0.ɵɵtext(976, \".ForEach()\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(977, \"td\");\n      i0.ɵɵtext(978, \" No genera un nuevo array, no modifica el array original, ademas empleamos el \");\n      i0.ɵɵelementStart(979, \"strong\");\n      i0.ɵɵtext(980, \"index\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(981, \" del for \");\n      i0.ɵɵelement(982, \"br\")(983, \"br\")(984, \"img\", 67)(985, \"br\")(986, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(987, \"td\");\n      i0.ɵɵelement(988, \"img\", 68)(989, \"br\")(990, \"br\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(991, \"tr\")(992, \"td\")(993, \"strong\");\n      i0.ɵɵtext(994, \".some()\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(995, \"td\");\n      i0.ɵɵtext(996, \" Retorna verdadero o falso de acuerdo a una validacion a elementos del objeto \");\n      i0.ɵɵelement(997, \"br\")(998, \"br\");\n      i0.ɵɵtext(999, \" Si alguno de los elementos cumple con la condicion retorno true sino false \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(1000, \"td\");\n      i0.ɵɵelement(1001, \"img\", 69)(1002, \"br\")(1003, \"br\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(1004, \"tr\")(1005, \"td\")(1006, \"strong\")(1007, \"a\", 70);\n      i0.ɵɵtext(1008, \"if\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(1009, \"td\");\n      i0.ɵɵtext(1010, \" Operador Ternario \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(1011, \"td\");\n      i0.ɵɵelement(1012, \"img\", 71)(1013, \"br\")(1014, \"br\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(1015, \"tr\")(1016, \"td\")(1017, \"strong\")(1018, \"a\", 70);\n      i0.ɵɵtext(1019, \"Switch\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(1020, \"td\");\n      i0.ɵɵelementStart(1021, \"td\");\n      i0.ɵɵelement(1022, \"img\", 72)(1023, \"br\")(1024, \"br\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(1025, \"tr\")(1026, \"td\")(1027, \"strong\")(1028, \"a\", 73);\n      i0.ɵɵtext(1029, \"for\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(1030, \"td\");\n      i0.ɵɵtext(1031, \" 1. for simple \");\n      i0.ɵɵelement(1032, \"br\");\n      i0.ɵɵtext(1033, \" 2. for mejorado (\");\n      i0.ɵɵelementStart(1034, \"strong\");\n      i0.ɵɵtext(1035, \"for in\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(1036, \" y \");\n      i0.ɵɵelementStart(1037, \"strong\");\n      i0.ɵɵtext(1038, \"for of\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(1039, \")o simplificados. \");\n      i0.ɵɵelement(1040, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(1041, \"td\");\n      i0.ɵɵtext(1042, \"1. \");\n      i0.ɵɵelement(1043, \"img\", 74)(1044, \"br\")(1045, \"br\");\n      i0.ɵɵtext(1046, \" 2. \");\n      i0.ɵɵelement(1047, \"img\", 75)(1048, \"br\")(1049, \"br\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(1050, \"tr\")(1051, \"td\")(1052, \"strong\")(1053, \"a\", 73);\n      i0.ɵɵtext(1054, \"for in\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(1055, \"td\")(1056, \"strong\");\n      i0.ɵɵtext(1057, \"for in: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(1058, \" me permite recorrer un objeto \");\n      i0.ɵɵelement(1059, \"br\")(1060, \"br\");\n      i0.ɵɵtext(1061, \" Ahora podemos ver la definicion de un objeto y empleando un ciclo for of podemos sacar por pantalla sus \");\n      i0.ɵɵelementStart(1062, \"strong\");\n      i0.ɵɵtext(1063, \"llave y valor.....PEROOOOO\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(1064, \" precisamente la razon por la cual se muestra la imagen A y B es para mostrar que en este caso con la notacion del punto no es posible sacar el valor de la llave y es por ello que es necesario emplear la notacion de los \");\n      i0.ɵɵelementStart(1065, \"strong\");\n      i0.ɵɵtext(1066, \"[ ]\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(1067, \"br\")(1068, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(1069, \"td\");\n      i0.ɵɵtext(1070, \" A. \");\n      i0.ɵɵelement(1071, \"img\", 76)(1072, \"br\")(1073, \"br\");\n      i0.ɵɵtext(1074, \" B. \");\n      i0.ɵɵelement(1075, \"img\", 77)(1076, \"br\")(1077, \"br\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(1078, \"tr\")(1079, \"td\")(1080, \"strong\")(1081, \"a\", 73);\n      i0.ɵɵtext(1082, \"for of\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(1083, \"td\")(1084, \"strong\");\n      i0.ɵɵtext(1085, \"for of: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(1086, \" me permite recorrer cualquier valiable que sea interable, incluso si es primitivo como un string \");\n      i0.ɵɵelement(1087, \"br\")(1088, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(1089, \"td\");\n      i0.ɵɵelement(1090, \"img\", 78)(1091, \"br\")(1092, \"br\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(1093, \"tr\")(1094, \"td\")(1095, \"strong\")(1096, \"a\", 73);\n      i0.ɵɵtext(1097, \"while\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(1098, \"td\");\n      i0.ɵɵelement(1099, \"img\", 79)(1100, \"br\")(1101, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(1102, \"td\");\n      i0.ɵɵelement(1103, \"img\", 80)(1104, \"br\")(1105, \"br\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(1106, \"tr\")(1107, \"td\")(1108, \"strong\")(1109, \"a\", 73);\n      i0.ɵɵtext(1110, \"Do while\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(1111, \"td\");\n      i0.ɵɵelementStart(1112, \"td\");\n      i0.ɵɵelement(1113, \"img\", 81)(1114, \"br\")(1115, \"br\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(1116, \"tr\")(1117, \"td\")(1118, \"strong\")(1119, \"a\", 82);\n      i0.ɵɵtext(1120, \"Objeto\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(1121, \"td\");\n      i0.ɵɵtext(1122, \" 1. Definicion de un objeto \");\n      i0.ɵɵelement(1123, \"br\");\n      i0.ɵɵtext(1124, \" 2. Definicion de su constructor y la instanciacion o ejemplificacion del objeto.\");\n      i0.ɵɵelement(1125, \"br\")(1126, \"br\")(1127, \"br\")(1128, \"img\", 83)(1129, \"br\")(1130, \"br\");\n      i0.ɵɵtext(1131, \" console.log(jon.pasatiempos[1]); //Hacer ejercicio \");\n      i0.ɵɵelement(1132, \"br\");\n      i0.ɵɵtext(1133, \" console.log(jon.contacto.twitter); //@jonmicrcha \");\n      i0.ɵɵelement(1134, \"br\");\n      i0.ɵɵtext(1135, \" jon.saludar(); //Hola:) \");\n      i0.ɵɵelement(1136, \"br\")(1137, \"br\")(1138, \"br\");\n      i0.ɵɵelementStart(1139, \"strong\");\n      i0.ɵɵtext(1140, \" console.log(Obejct.keys(jon)); //lista las propiedades del objeto\");\n      i0.ɵɵelement(1141, \"br\");\n      i0.ɵɵtext(1142, \" console.log(Obejct.values(jon)); //pone en un array las propiedades del objeto\");\n      i0.ɵɵelement(1143, \"br\");\n      i0.ɵɵtext(1144, \" console.log(jon.hasOwnProperty(\\\"nombre\\\")); //Da true or false si tiene esta propiedad el objeto\");\n      i0.ɵɵelement(1145, \"br\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(1146, \"td\");\n      i0.ɵɵtext(1147, \" 1. \");\n      i0.ɵɵelement(1148, \"img\", 84)(1149, \"br\")(1150, \"br\");\n      i0.ɵɵtext(1151, \" 2. \");\n      i0.ɵɵelement(1152, \"img\", 85)(1153, \"br\")(1154, \"br\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(1155, \"tr\")(1156, \"td\");\n      i0.ɵɵtext(1157, \"localStore\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(1158, \"td\");\n      i0.ɵɵtext(1159, \" Guarda data en el navegador, sin importar que se apague el equipo, se cierre la session. \");\n      i0.ɵɵelement(1160, \"br\")(1161, \"br\");\n      i0.ɵɵtext(1162);\n      i0.ɵɵelementStart(1163, \"strong\");\n      i0.ɵɵtext(1164, \"'nombreDeMiObjetoJSon'\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(1165);\n      i0.ɵɵelement(1166, \"br\")(1167, \"br\");\n      i0.ɵɵtext(1168);\n      i0.ɵɵelementStart(1169, \"strong\");\n      i0.ɵɵtext(1170, \"'nombreDeMiObjetoJSon', 'valorDeObjetoJSon'\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(1171);\n      i0.ɵɵelement(1172, \"br\")(1173, \"br\");\n      i0.ɵɵtext(1174);\n      i0.ɵɵelementStart(1175, \"strong\");\n      i0.ɵɵtext(1176, \"'nombreDeMiObjetoJSon'\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(1177);\n      i0.ɵɵelement(1178, \"br\")(1179, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(1180, \"td\");\n      i0.ɵɵelement(1181, \"img\", 86)(1182, \"br\")(1183, \"br\")(1184, \"img\", 87)(1185, \"br\")(1186, \"br\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(1187, \"tr\")(1188, \"td\")(1189, \"strong\")(1190, \"a\", 88);\n      i0.ɵɵtext(1191, \"CustomHooks\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(1192, \"td\");\n      i0.ɵɵtext(1193, \" * Deben de empezar con la palabra \");\n      i0.ɵɵelementStart(1194, \"strong\");\n      i0.ɵɵtext(1195, \"use\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(1196, \"XXXXX. \");\n      i0.ɵɵelement(1197, \"br\")(1198, \"br\");\n      i0.ɵɵtext(1199, \" * la idea es que dentro de esta funcion se maneje el estado y NO el otro componente. \");\n      i0.ɵɵelement(1200, \"br\")(1201, \"br\")(1202, \"img\", 89)(1203, \"br\")(1204, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(1205, \"td\");\n      i0.ɵɵelement(1206, \"img\", 90)(1207, \"br\")(1208, \"br\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(1209, \"tr\");\n      i0.ɵɵelement(1210, \"td\")(1211, \"td\")(1212, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(1213, \"tr\");\n      i0.ɵɵelement(1214, \"td\")(1215, \"td\")(1216, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(1217, \"tr\");\n      i0.ɵɵelement(1218, \"td\")(1219, \"td\")(1220, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(1221, \"tr\");\n      i0.ɵɵelement(1222, \"td\")(1223, \"td\")(1224, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(1225, \"tr\");\n      i0.ɵɵelement(1226, \"td\")(1227, \"td\")(1228, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(1229, \"tr\");\n      i0.ɵɵelement(1230, \"td\")(1231, \"td\")(1232, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(1233, \"tr\");\n      i0.ɵɵelement(1234, \"td\")(1235, \"td\")(1236, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(1237, \"tr\");\n      i0.ɵɵelement(1238, \"td\")(1239, \"td\")(1240, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(1241, \"tr\");\n      i0.ɵɵelement(1242, \"td\")(1243, \"td\")(1244, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(1245, \"tr\");\n      i0.ɵɵelement(1246, \"td\")(1247, \"td\")(1248, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(1249, \"tr\");\n      i0.ɵɵelement(1250, \"td\")(1251, \"td\")(1252, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(1253, \"tr\");\n      i0.ɵɵelement(1254, \"td\")(1255, \"td\")(1256, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(1257, \"tr\");\n      i0.ɵɵelement(1258, \"td\")(1259, \"td\")(1260, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(1261, \"tr\");\n      i0.ɵɵelement(1262, \"td\")(1263, \"td\")(1264, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(1265, \"tr\");\n      i0.ɵɵelement(1266, \"td\")(1267, \"td\")(1268, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(1269, \"tr\");\n      i0.ɵɵelement(1270, \"td\")(1271, \"td\")(1272, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(1273, \"tr\");\n      i0.ɵɵelement(1274, \"td\")(1275, \"td\")(1276, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(1277, \"tr\");\n      i0.ɵɵelement(1278, \"td\")(1279, \"td\")(1280, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(1281, \"tr\");\n      i0.ɵɵelement(1282, \"td\")(1283, \"td\")(1284, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(1285, \"tr\");\n      i0.ɵɵelement(1286, \"td\")(1287, \"td\")(1288, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(1289, \"tr\");\n      i0.ɵɵelement(1290, \"td\")(1291, \"td\")(1292, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(1293, \"tr\");\n      i0.ɵɵelement(1294, \"td\")(1295, \"td\")(1296, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(1297, \"tr\");\n      i0.ɵɵelement(1298, \"td\")(1299, \"td\")(1300, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(1301, \"tr\");\n      i0.ɵɵelement(1302, \"td\")(1303, \"td\")(1304, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(1305, \"tr\");\n      i0.ɵɵelement(1306, \"td\")(1307, \"td\")(1308, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(1309, \"tr\");\n      i0.ɵɵelement(1310, \"td\")(1311, \"td\")(1312, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(1313, \"tr\");\n      i0.ɵɵelement(1314, \"td\")(1315, \"td\")(1316, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(1317, \"tr\");\n      i0.ɵɵelement(1318, \"td\")(1319, \"td\")(1320, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(1321, \"tr\");\n      i0.ɵɵelement(1322, \"td\")(1323, \"td\")(1324, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(1325, \"tr\");\n      i0.ɵɵelement(1326, \"td\")(1327, \"td\")(1328, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(1329, \"tr\");\n      i0.ɵɵelement(1330, \"td\")(1331, \"td\")(1332, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(1333, \"tr\");\n      i0.ɵɵelement(1334, \"td\")(1335, \"td\")(1336, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(1337, \"tr\");\n      i0.ɵɵelement(1338, \"td\")(1339, \"td\")(1340, \"td\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(1341, \"tr\");\n      i0.ɵɵelement(1342, \"td\")(1343, \"td\")(1344, \"td\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(371);\n      i0.ɵɵtextInterpolate2(\"\\\"\", ctx.abrellave, \"\\\"nombre\\\":\\\"juan\\\", \\\"edad\\\": 32 \", ctx.cierrallave, \"\\\" \");\n      i0.ɵɵadvance(111);\n      i0.ɵɵtextInterpolate2(\" Objeto \", ctx.abrellave, \" \", ctx.cierrallave, \" no se puede \");\n      i0.ɵɵadvance(166);\n      i0.ɵɵtextInterpolate2(\" \", ctx.abrellave, \" \", ctx.cierrallave, \" (an empty object)\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate2(\" function()\", ctx.abrellave, \" \", ctx.cierrallave, \" (an \\u201Cempty\\u201D function)\");\n      i0.ɵɵadvance(91);\n      i0.ɵɵtextInterpolate2(\"` $\", ctx.abrellave, \" \", ctx.cierrallave, \"` \");\n      i0.ɵɵadvance(421);\n      i0.ɵɵtextInterpolate1(\" * localStorage.getItem\", ctx.abreParentesis, \"\");\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\" \", ctx.cierraParentesis, \" //Obtener\");\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\" * localStorage.setItem\", ctx.abreParentesis, \"\");\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\"\", ctx.cierraParentesis, \". //definir\");\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\" * localStorage.removeItem\", ctx.abreParentesis, \"\");\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\"\", ctx.cierraParentesis, \". //definir\");\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["JavaScriptComponent","constructor","abrellave","cierrallave","abreDiamante","cierraDiamante","abreParentesis","cierraParentesis","abreCuadro","cierraCuadro","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\HP\\Desktop\\juanTafur\\jugutafur\\Support-FrontEnd-Angular-full\\src\\app\\core\\components\\FrontEnd\\java-script\\java-script.component.ts","C:\\Users\\HP\\Desktop\\juanTafur\\jugutafur\\Support-FrontEnd-Angular-full\\src\\app\\core\\components\\FrontEnd\\java-script\\java-script.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-java-script',\r\n  templateUrl: './java-script.component.html',\r\n  styleUrls: ['./java-script.component.scss']\r\n})\r\nexport class JavaScriptComponent {\r\n\r\n  public abrellave: string;\r\n  public cierrallave: string; \r\n  public abreDiamante: string;\r\n  public cierraDiamante: string;\r\n  public abreParentesis: string;\r\n  public cierraParentesis: string;\r\n  public abreCuadro: string;\r\n  public cierraCuadro: string;\r\n\r\n  constructor() {\r\n    this.abrellave= \"{\";\r\n    this.cierrallave=\"}\";\r\n    this.abreDiamante= \"<\";\r\n    this.cierraDiamante= \">\";\r\n    this.abreParentesis= \"(\";\r\n    this.cierraParentesis= \")\";\r\n    this.abreCuadro= \"[\";\r\n    this.cierraCuadro= \"]\";\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <table class=\"table table-striped table-hover table-bordered\">\r\n        <thead>\r\n            <tr>\r\n                <th scope=\"col\">Referencia</th>\r\n                <th scope=\"col\">Descripcion</th>\r\n                <th scope=\"col\">Ejemplo</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr>\r\n                <td><strong>DOCUMENTACION</strong></td>\r\n                <td colspan=\"2\" > <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array\">MOZILA DEVELOP NETWORD</a></td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td><strong>JavaScript</strong></td>\r\n                <td>\r\n                    <strong>Isomorfismo</strong><br><br>\r\n                    * Es el unico lenguaje que puede estar en el front, back y en la base de datos <br>\r\n                    * Debilmente tipado <br>\r\n                    * En javaScript todo es un objeto <br>\r\n                    * Inventado por Netscape en 1995 <br>\r\n                    <strong>* Java = Lenguaje de proposito general</strong> //Con el cual se pueden crear aplicaciones para todo (aplicaciones que se ejecutan en servidor y escritortio). <br>\r\n                    <strong>* JavaScript = Lenguaje de proposito concreto</strong> //Que solo corre en el navegador <strong>(No es posible crear aplicaciones de JavaScript que se ejecuten en un servidor \"Esto ya seria nodeJS\").</strong><br>\r\n                    * JavaScript es interpretado (no compilado) NO refqueire un archvivo intermedio como el BYTECODES como lo es para JAVA. <br><br>\r\n                    <br><strong>Gramatica</strong> <br><br>\r\n                    <strong>snake_case: </strong>mi_archivo_javascript.ts <br>\r\n                    <strong>UPER_CASE: </strong>UNA_CONSTANTE <br>\r\n                    <strong>UpperCamelCase: </strong>SerHumano <br>\r\n                    <strong>lowerCamelCase: </strong>unObejto <br><br><br>\r\n                    <strong>Ordenamiento de codigo</strong> <br><br>\r\n                    1. Importacion de modulos <br>\r\n                    2. Declaracion de variables <br>\r\n                    3. Declaracion de funciones <br>\r\n                    4. Ejecucion de codigo <br><br><br>\r\n                    <strong>DOM: Document Objet Model == es el api que tiene JavaScript en los navegadores para interacturar con el codigo HTML</strong> <br><br>\r\n                </td>\r\n                <td>\r\n                    palabras reservadas <br><br>\r\n                    <img\r\n                    src=\"../../../../../assets/FrontEnd/JavaScript/ReserverWords.png\"\r\n                    alt=\"ReserverWords\"\r\n                    title=\"ReserverWords\"><br><br>\r\n                </td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td>\r\n                    <strong><a href=\"https://es.wikipedia.org/wiki/Anexo:Comparativa_de_motores_de_renderizado\">Motores de renderizado</a></strong><br><br>\r\n                    <strong>Just time compiler</strong>\r\n                </td>\r\n                <td colspan=\"2\">\r\n                    Google saca chrome que corre con V8 <br>\r\n                    Microsoft saca edge que ya el motor esta siendo descontinuado <br>\r\n                    <img\r\n                    src=\"../../../../../assets/FrontEnd/JavaScript/motores.png\"\r\n                    alt=\"motores\"\r\n                    title=\"motores\"><br><br>\r\n                    <a href=\"https://kangax.github.io/compat-table/es6/\">ver todos los motores de diferentes plataformas </a>\r\n                </td>\r\n            </tr>\r\n\r\n\r\n            <tr>\r\n                <td><strong><a href=\"https://www.html5rocks.com/es/tutorials/internals/howbrowserswork/\">Como funciona los navegadores</a></strong></td>\r\n                <td>\r\n                    <img\r\n                    src=\"../../../../../assets/FrontEnd/JavaScript/hJavascript.png\"\r\n                    alt=\"hJavaScript\"\r\n                    title=\"hJavaScript\"><br><br>\r\n                </td>\r\n                <td>\r\n                    <img\r\n                    src=\"../../../../../assets/FrontEnd/JavaScript/hJavascript1.png\"\r\n                    alt=\"hJavaScript1\"\r\n                    title=\"hJavaScript1\"><br><br>\r\n                </td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td><strong>javaScript</strong></td>\r\n                <td>\r\n                    En javaScript el objeto global es <strong>windows</strong> <br><br>\r\n                    En nodejs el objeto global es <strong>global</strong> <br><br>\r\n                    <img\r\n                    src=\"../../../../../assets/FrontEnd/JavaScript/JavaScript2.png\"\r\n                    alt=\"JavaScript2\"\r\n                    title=\"JavaScript2\"><br><br>\r\n                </td>\r\n                <td>\r\n\r\n                </td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td><strong>TypeScript</strong></td>\r\n                <td>\r\n                    Es un super set de JavaScript es decir internamente esta es escrito en JavaScript pero TypeScript no lo reemplaza a JavaScript en totalidad quiere decir que algunas tareas definitivamente se deben hacer en JavaScript. <br>\r\n                    Los navegadores no entienden TypeScript es por ello que aunque angular tiene su codigo en TypeScript se requiere ser transpilado a JavaScript <br>\r\n                </td>\r\n                <td></td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td><strong>nodejs</strong></td>\r\n                <td>\r\n                    En nodejs el objeto global es <strong>global</strong> <br><br>\r\n                </td>\r\n                <td></td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td><a href=\"https://www.youtube.com/watch?v=ygA5U7Wgsg8\">Call Stack</a></td>\r\n              <td>\r\n                es la pila de las tareas, en ella podemos ver que funcion se esta ejecuntando a cual va ir .. y la linea de codigo donde viene. <br><br>\r\n                Es por eso que solo puede ejecutar una tarea a la vez, ademas es <strong>LIFO</strong> Last In First Out \"El ultimo que Ingreso es que Primero Salir\"\r\n              </td>\r\n              <td>\r\n                <img\r\n                src=\"../../../../../assets/FrontEnd/JavaScript/callStack.png\"\r\n                alt=\"callStack\"\r\n                title=\"callStack\"><br><br>\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td><strong>Primer paso</strong></td>\r\n                <td>\r\n                    1. Una vez que el cliente hace una request al motor de renderizado este internamente lo primero que define es un <strong>entorno global</strong> donde define 3 cosas principalmente: <br><br>\r\n                    <strong>1. Objeto Global = windows </strong><br>\r\n                    <strong>2. this = windows </strong><br>\r\n                    <strong>3. Outer enviroment</strong>\r\n                </td>\r\n                <td>\r\n                    1.\r\n                    <img\r\n                    src=\"../../../../../assets/FrontEnd/JavaScript/ObjetoGlobal.png\"\r\n                    alt=\"ObjetoGlobal\"\r\n                    title=\"ObjetoGlobal\"><br><br>\r\n                </td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td><strong><a href=\"https://platzi.com/clases/1798-javascript-navegador/25683-profundizando-en-el-engine/\">Segundo Paso</a></strong></td>\r\n                <td>\r\n                    2. Luego de definir el entorno global define un stack de tareas que debe realizar \"Apila las tareas una sobre otras\" <br><br>\r\n                    2.\r\n                    <img\r\n                    src=\"../../../../../assets/FrontEnd/JavaScript/stackTareas.png\"\r\n                    alt=\"stackTareas\"\r\n                    title=\"stackTareas\"> <br><br>\r\n                    3. Despues el motor de renderizado descarga, parsea, compila y ejecuta el <strong>archivo.js</strong><br><br>Como se puede ver en a grafica <strong>AST Abstract Syntax Tree</strong>: Es el arbol de keywords que el motor arma para entender la jerarquia de los elementos\r\n                </td>\r\n                <td>\r\n                    3.\r\n                    <img\r\n                    src=\"../../../../../assets/FrontEnd/JavaScript/javaScriptExecute.png\"\r\n                    alt=\"javaScriptExecute\"\r\n                    title=\"javaScriptExecute\"><br><br>\r\n                    3.\r\n                    <img\r\n                    src=\"../../../../../assets/FrontEnd/JavaScript/pasosJavascript.png\"\r\n                    alt=\"pasosJavascript\"\r\n                    title=\"pasosJavascript\"><br><br>\r\n                </td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td><Strong><a href=\"https://platzi.com/clases/1798-javascript-navegador/25685-call-stack/\">Consideraciones</a></Strong> </td>\r\n                <td>\r\n                    JavaScript solo puede realizar una tarea a la vez <br><br><br>\r\n                    Ahora <strong>memory heap: </strong>Es el lugar donde se van a almacenar la variables y las funciones del programa <br><br>\r\n                    y <strong>Call stack : </strong>Es la pila de tareas que debe realizar el programa, como se ve lo que primero se va a ejecutar es el objeto global y lo primero que sale es lo primero que entro es decir de abajo hacia arriba se van desarrollando <br><br><br>\r\n                    <img\r\n                    src=\"../../../../../assets/FrontEnd/JavaScript/javaScriptSingle.png\"\r\n                    alt=\"javaScriptSingle\"\r\n                    title=\"javaScriptSingle\"><br><br>\r\n                </td>\r\n                <td>\r\n                    <img\r\n                    src=\"../../../../../assets/FrontEnd/JavaScript/memoryHeap.png\"\r\n                    alt=\"memoryHeap\"\r\n                    title=\"memoryHeap\"><br><br>\r\n                </td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td><strong><a href=\"https://platzi.com/clases/1798-javascript-navegador/25687-garbage-collection/\">Garbage Collection</a></strong> </td>\r\n                <td>\r\n                    Limpia la memoria de los datos no utilizados para no sobrecargarla y seguir trabajando sin problemas. <br><br>El algoritmo Mark & Sweep hace referencia a cuando un tipo de dato se vuelve inalcanzable para el programa.\r\n                    Se toma una raíz la cual es el Objeto Global y a medida que el programa avanza, los objetos van creando o borrando referencias a sus raíces.\r\n                </td>\r\n                <td></td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td><strong><a href=\"https://platzi.com/clases/1798-javascript-navegador/25688-stack-overflow/\">Stack overflow</a></strong> </td>\r\n                <td>\r\n                    El stack overflow se genera cuando el call stack se llena completamente (pila de tareas) .Esto pasa cuando se genera o se trabaja con bucles infinitos, recursividad y funciones.Entonces este entra en stack overflow. <br><br>Antes chrome se bloqueaba con un stack overflow ahora con un determinado numero de interactiones el puede determinar que puede causar un stack overflow y bloquea de manera automatica la funcion y no el navegador. <br>\r\n                </td>\r\n                <td>\r\n                </td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td><strong><a href=\"https://platzi.com/clases/1798-javascript-navegador/26015-javascript-runtime/\">JavaScript Runtime</a></strong> </td>\r\n                <td>\r\n                    Todos las funciones predefenidas que puede hacer el <strong>navegador</strong> como setTimeOut() son llamadas APIS y todas estas las podemos encontrar en el siguiente <a href=\"https://developer.mozilla.org/en-US/docs/Web/API\">link</a><br><br>\r\n                    El runtime de JavaScript es sincrono es decir solo puede ejecutar una tarea a la vez <br><br> <strong>PERO PEROOOOOO</strong> un efecto para ser asincrono es decir que son llevadas a cabo varias tareas a la vez es cuando <strong>JavaScript</strong> hace unas tareas y el <strong>navegador</strong> hace otras. aca cabe las apis que estan en link mas arriba funciones que el navegador es capaz de hacer. <br><br>\r\n\r\n                    Cuando en el call stack hay tareas que son del navegador javaScript se las delega para que este las lleve a cabo y javaScript continua con las demas tareas del call stack. <br><br>\r\n                    Taquería DeGranda presenta a: <br><br>\r\n                    Cocina = Navegador <br>\r\n                    taquero = JavaScript <br><br>\r\n                    🌮 - call stack : el taquero (órdenes rápidas) <br>\r\n                    👨‍🍳 - web APIs : la cocina<br>\r\n                    🌯 - callback queue : las órdenes preparadas<br>\r\n                    💁‍♂️ - event loop : el mesero<br>\r\n\r\n                    Event loop: siempre esta revisando u observando a ver si javaScripto o el navegador acaba una tarea para delegarles tareas pendientes <br><br>\r\n                </td>\r\n                <td>\r\n                    <img\r\n                    src=\"../../../../../assets/FrontEnd/JavaScript/javaScriptRuntime.png\"\r\n                    alt=\"javaScriptRuntime\"\r\n                    title=\"javaScriptRuntime\"><br><br>\r\n                </td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td><a href=\"https://www.youtube.com/watch?v=FCkhDBsXsFg\"><strong>Coercion de tipos</strong></a></td>\r\n                <td>\r\n                    JavaScript internamente corrige tipos de variables para hacer operaciones es decir, puede operar entre un '2' + 10 = 12 (string)+(number), lo que no hacen otros lenguajes<br><br> Cuando son objetos, arrays o funciones <strong>(Cosas que nos tipos primitivos)</strong> no se pueden comparar por mas que sus valores de campo y clave sean los mismos esto es debido a que cuando se trata de comparar lo que entiende el programa es comparar <strong>ESPACIOS DE MEMORIA</strong> es por esto que siempre van a dar false, para solucionar esto es posible emplear <strong><u>dos formas</u></strong><br><br> <strong>1. JSON.stringify(objeto)</strong> convertir las claves y valores del objeto en un string <strong>\"{{abrellave}}\"nombre\":\"juan\", \"edad\": 32 {{cierrallave}}\" </strong><br><br>\r\n                    <strong>2. JSON.parse(prueba); </strong>pasa de un string a un objeto JSON //de la manera como se ve la imagen\r\n                    <br><br>\r\n                    <img src=\"../../../../../assets/FrontEnd/JavaScript/JSON.png\" alt=\"\"> <br>\r\n                    <strong>LODASH</strong> Es una libreria que tiene una funcion llamada - isEqual que intera todos los valores del objeto y tenermina si es igual o no\r\n                </td>\r\n                <td>\r\n                    <strong>Doble igual </strong>: ==  <u>Operador de igualdad debil</u> <br><br>\r\n                    <strong>Tripe igual </strong>: === <u>Operador de igualdad estricta</u> (cuando son con tipos primitivos= compara si es el mismo valor y el mismo tipo)/ <u>Operador de identidad</u> (cuando son objetos = compara ademas si es el mismo espacio de memoria)\r\n                </td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td><strong><a href=\"https://jherax.wordpress.com/2014/07/05/javascript-coercion/\">Coercion</a></strong></td>\r\n                <td>\r\n                    <strong>Coercion implicita </strong>: Cuando el lenguaje por si solo realiza la interpretacion de la variable <br><br>\r\n                    <strong>Coercion explicita </strong>: Cuando el programador determina el tipo de variable  <br><br>\r\n                    <strong>Coerción a números</strong> <br><br>\r\n                    El operador <strong>unario</strong> +(plus) se puede utilizar para convertir un string a number, si dicho string representa un número en su totalidad, de lo contrario devuelve NaN (Not A Number). <br><br>\r\n                    1. n = +\"13\";  //  13, type: number <br>\r\n                    2. n = +\"0\";   //   0, type: number <br>\r\n                    3. n = +\"5px\"; // NaN, type: number <br><br>\r\n                    Las funciones parseFloat() y parseInt(), operan de una forma muy similar, pero con una diferencia respecto al operador unario +, y es que los métodos antes mencionados convierten los primeros dígitos numéricos de un string a su representación numérica, aunque ese string no esté compuesto en su totalidad por números: <br><br>\r\n                    1. n = +\"12px\"; // NaN, type: number <br>\r\n                    2. n = parseFloat(\"12px\"); // 12, type: number <br><br>\r\n                    <strong>Coerción en objetos</strong> ver mas tipos de coercion en la palabra principal o en el siguiente <a href=\"https://www.etnassoft.com/2011/04/06/coercion-de-datos-en-javascript/\">enlace</a> o en <a href=\"https://platzi.com/clases/1814-basico-javascript/26298-coercion/\">platzi </a><br><br>\r\n                </td>\r\n                <td>\r\n                    sumar = <strong>Number</strong>(valor1) + valor2 //pasar de string a Number <br><br>\r\n                    <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number\">Coercion</a> <br><br>\r\n                    let a = 20;  let b= <strong>String</strong>(a) // pasar de number a string <br><br>\r\n                </td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td>versiones </td>\r\n                <td>\r\n                    node = node -v <br>\r\n                    npm = npm -v <br>\r\n                </td>\r\n                <td></td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td>interar </td>\r\n                <td>\r\n                    Objeto {{abrellave}} {{cierrallave}} no se puede <br>\r\n                    Array [ ] si se puede (a diferencia en Java que los arrays son tratados como objetos) <br>\r\n                </td>\r\n                <td></td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td>\r\n                  <a href=\"https://www.youtube.com/watch?v=o3c8cW73weQ&list=PLvq-jIkSeTUZ6QgYYO3MwG9EMqC-KoLXA&index=12\"><strong>Array 1</strong></a><br><br>\r\n                  <strong><a href=\"https://developer.mozilla.org/es/docs/Web/JavaScript/Guide/Indexed_c\">Array 2</a></strong>\r\n                </td>\r\n                <td>\r\n                    Trabajo con arrays en javaScript podemos tener un array con elementos de varios tipos<br><br>\r\n                    const a = [\"Uno\", 1, true, [\"casa\",\"perro\",\"gato\"], \"mazana\"]; <br><br>\r\n                    console.log(a[2]); //true <br>\r\n                    console.log(a[3][1]); //perro <br> <br>\r\n                    Puede ser definido con let o const pero se recomienda const pues es una constante que no va a cambiar, es decir se le puede agregar o quitar elementos pero siempre van a se un array. <br><br>\r\n                    tambien mas informacion detallada en <a href=\"https://developer.mozilla.org/es/docs/Web/JavaScript/Reference/Global_Objects/Array\">link</a>\r\n                </td>\r\n                <td>https://www.w3schools.com/js/tryit.asp?filename=tryjs_array_pop</td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td><strong><a href=\"https://www.youtube.com/watch?v=4xig5UPRC00&list=PLvq-jIkSeTUZ6QgYYO3MwG9EMqC-KoLXA&index=13\">Objeto</a></strong></td>\r\n                <td>\r\n                    Un objeto es una coleccion de llave valor\r\n                </td>\r\n                <td></td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td><strong>Hoisting</strong></td>\r\n                <td>\r\n                    Si definimos una variable con <strong>var</strong> la podemos ver en windows \"cuando imprimes windows por consola\" y si definimos la variable con <strong>let </strong> no aparece en windows queda en <strong>scope</strong> donde fue definida. <br><br>\r\n                    en versiones de EcmaScript 6 hacia atras solo existia <strong>var</strong> ya en nuevas versiones encontramos <strong><a href=\"https://www.youtube.com/watch?v=cTfGyVFrLxQ\"> let y const : entrando a TEMPORAL DEAD ZONE </a></strong> y con esto ya no <strong>genera un Hoisting </strong><br><br>\r\n                    <strong>TEMPORAL DEAD ZONE </strong> o zona muerta temporal = Es una region donde se ubican las variables que aun no se pueden acceder porque en la ejecucion del programa aun no han sido declaradas <br><br>\r\n                    <strong>tanto var, let y const son elevaadas PEROOOOOOOO</strong> la  diferencia radica que let y const entran a esta zona temporalmente muerta hasta que sean inicializadas y dara error y se detiene la ejecucion del programa si se leen antes de inicializarse, pero con var si se intentan leer antes de inicializarse solo dara undefined y no se detiene la ejecucion del programa. <br>\r\n                </td>\r\n                <td>\r\n                    Las funciones tambien son elevadas y se puede interpretar una funcion antes de encontrar su definicion <br><br>Precisamente un error de hoisting es llamar una funcion o una varaible que aun no ha sido inicializada.\r\n                </td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td><strong>datos</strong></td>\r\n                <td>\r\n                    Cuando se consulta variables <strong>primitivas: </strong>Se accede a su valor <br>\r\n                    Cuando se consula variables <strong>compuestos o complejos: </strong>Se accede a su referencia donde esta su valor <br>\r\n                    <br><br>\r\n                    <strong>const</strong><br><br>\r\n                    Si definimos una variable primitiva con <strong>const </strong><br><br>\r\n                    1. Tiene que estar inicializada en la misma linea donde es declarada <br>\r\n                    2. Su valo no se puede re-definir lineas despues <br><br>\r\n                    <strong>PERO PERO ...</strong> <br><br>\r\n                    Lo anterior no aplica para variables compuestas o complejas y esto es debido a que la referencia de su ubicacion no cambia de hecho sigue siendo el mismo espacio de memoria que se reservo en un principio sus atributos, caracteristicas o propiedades si es un objeto o un array lo que sea puede cambiar. <br><br> (por agragar o quitar elementos no va a dejar de ser un array, objeto o cualqueir otro tipo de valor compuesto o complejo) <br>\r\n                </td>\r\n                <img\r\n                src=\"../../../../../assets/FrontEnd/JavaScript/javaScript.png\"\r\n                alt=\"javaScript\"\r\n                title=\"javaScript\"><br><br>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td><strong><a href=\"https://www.sitepoint.com/javascript-truthy-falsy/\">Valores: Truthy y Falsy</a> </strong></td>\r\n                <td>\r\n                    valores que por default son true o false\r\n                </td>\r\n                <td>\r\n                    <strong>The following values are always falsy: </strong><br>\r\n                    false<br>\r\n                    0 (zero)<br>\r\n                    -0 (minus zero)<br>\r\n                    0n (BigInt zero)<br>\r\n                    ' ', \" \", ` ` (empty string)<br>\r\n                    null<br>\r\n                    undefined<br>\r\n                    NaN<br><br>\r\n                    <strong>Everything else is truthy. That includes:</strong><br>\r\n                    '0' (a string containing a single zero)<br>\r\n                    'false' (a string containing the text “false”)<br>\r\n                    [ ] (an empty array)<br>\r\n                    {{abrellave}} {{cierrallave}} (an empty object)<br>\r\n                    function(){{abrellave}} {{cierrallave}} (an “empty” function)<br>\r\n                </td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td>Paradigma Funcional</td>\r\n                <td>\r\n                    Esta filosofia esta orientada a: <br><br>\r\n                    1. No <strong>MUTAR LAS VARIABLES CUANDO SON LLAMADAS EN FUNCIONES</strong>: Esto quiere decir que en vez de modificar variables se cree unas nuevas dentro de las funciones para que de esta manera nuestro codigo sea facil al no tener distintos valores para las varaibles dentro de nuestro codigo <br><br>\r\n                    2. Dentro de este paradigma podemos suponer que se dispone de un monton de memoria<br>\r\n                </td>\r\n                <td>\r\n                    <strong>Funciones =</strong>Son ciudadanas de 1° Orden  <br><br>\r\n                    <strong><a href=\"https://www.youtube.com/watch?v=H6U1Pm7x60E&list=PLvq-jIkSeTUZ6QgYYO3MwG9EMqC-KoLXA&index=11\">hay dos tipos de funciones</a></strong> <br><br>\r\n                    <strong>1. funciones declaradas: </strong>Una funcion normal como la conocemos<br>\r\n                    <strong>2. funciones expresadas: </strong>Cuando el valor de una variable esta definida por una funcion, esta funcion <strong>No se puede llamar antes de la variable</strong> solo despues de definirla en la variable puede ser llamada <br><br> Es decir la funcion declarada puede ser llamada antes y despues de su definicion y la expresada solo puede ser llamada despues de su definicion <br><br>\r\n                    <strong>Funciones de Orden superior </strong>: <br> 1. Variables que su valor esta definido por una funcion <br>2. Funciones que reciben por parametro otra funcion <br>3. Funciones que como resultado de su ejecucion retornan otra funcion <br> <br>\r\n                    <strong>map, filter y reduce son de orden superior NO MODIFICAN EL ARRAY ORIGINAL</strong>\r\n                </td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td>\r\n                    <a href=\"https://www.youtube.com/watch?v=tP8JiVUiyDo&t=383s\">Funciones Puras</a></td>\r\n                <td>\r\n                    1. Funciones que al ser invocadas con los mismos argumentos siempre producen el mismo valor <br><br>\r\n                    2. No producen efectos secundarios (que al ser ejecutas no alteran el estado del programa y no alteran ninguna variable externa) <br><br>\r\n                </td>\r\n                <td></td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td>\r\n                    <a href=\"https://developer.mozilla.org/es/docs/Web/JavaScript/Reference/Functions/Default_parameters\">Paso de Parámetros</a>\r\n                </td>\r\n                <td>\r\n                    pueden ser: <br><br>1. Predeterminados <br>2. Opcionales</td>\r\n                <td></td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td><strong><a href=\"https://www.youtube.com/watch?v=arOXcy7K4XQ&list=PLvq-jIkSeTUZ6QgYYO3MwG9EMqC-KoLXA&index=7\">templete string</a> <br><br> ``</strong></td>\r\n                <td>Con acento invertido o back tick o acento grave <strong>` ${{abrellave}} {{cierrallave}}` </strong><br><br>Como es posible de identificar con templete string respeta la sangria o tabulacion ademas nos permite escribir codigo en varias lineas con doble comillas o comillas sensillas debemos usar contatenacion de string para varias lineas <br><br>\r\n                    <img\r\n                        src=\"../../../../../assets/FrontEnd/JavaScript/templeteString2.png\"\r\n                        alt=\"templeteString2\"\r\n                        title=\"templeteString2\">\r\n                </td>\r\n                <td>\r\n                    <img\r\n                    src=\"../../../../../assets/FrontEnd/JavaScript/templeteString.png\"\r\n                    alt=\"templeteString\"\r\n                    title=\"templeteString\"><br><br>\r\n                </td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td><strong><a href=\"https://www.youtube.com/watch?v=SPVL8uAezaw&list=PLvq-jIkSeTUZ6QgYYO3MwG9EMqC-KoLXA&index=17\">Errores</a></strong></td>\r\n                <td>\r\n                    Si hay un error o no.... el bloque <strong>finaly</strong> siempre se va a ejecutar <br><br>\r\n                    Se pueden lanzar errores personalizados un ejemplo es que se este esperando un dato de cierto tipo y el usuario ingresa un dato erroneo o de un tipo diferente en este caso puedo lanzar un error.<br>\r\n                </td>\r\n                <td>\r\n                    <img\r\n                    src=\"../../../../../assets/FrontEnd/JavaScript/errores.png\"\r\n                    alt=\"errores\"\r\n                    title=\"errores\"><br><br>\r\n                </td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td><strong>.map()</strong></td>\r\n                <td>\r\n                    NO PUEDE EJECUTAR FUNCIONES ASINCRONAS <strong>(solo sincronas)</strong> <br><br>\r\n                    1. Cuando tenemos un array y queremos obtener uno nuevo ver <strong>Retornos temprano</strong> En este apartado se ejemplifica el hecho de obtener un nuevo array apartir de uno ya existente. <br><br>\r\n                    2. Cuando queremos <strong>Extraer datos de un objeto</strong> creamos un nuevo objeto, aplicamos arrows funcions ya sea de cualquera de las dos formas siguientes <br><br>\r\n                </td>\r\n                <td>2.1\r\n                    <img src=\"../../../../../assets/FrontEnd/JavaScript/ExtraerMap.png\" alt=\"\"> <br><br>\r\n                    2.2\r\n                    <img src=\"../../../../../assets/FrontEnd/JavaScript/ExtraerMap2.png\" alt=\"\"><br><br>\r\n                </td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td>Retornos temprano</td>\r\n                <td>\r\n                    Esto es una tecnica que es sacar lo que no nos intera en primer lugar <br><br>\r\n                    para el ejemplo de la figura queremos aplicar un descuento a los productos que cuestan mas de 1000 tenemos un array de productos y necesitamos modificar el tercer atributo <br><br>\r\n                    1. Entonces guardamos en un nuevo array la salida y con la funcion transformadora .map tomamos cada elemento del array  <br><br>\r\n                    2. La segunta imagen es la forma equivocada de modificar el tercer atributo del objeto que nos interesa: esto es porque 1° Modificamos el array original y 2° es que efectivamente SI modificamos el atributo que nos interesaba <strong>PEROOOO NO LO ESTAMOS RETORNANDO </strong>y esto es un error pues al consultar el array solo va a mostrar los valores que retornaron y saldra UNDEFINED a los campos que no tienen valor<br><br>\r\n                    3. la tercera es la manera correcta de hacer el trabajo, esto es un objeto completamente nuevo con la linea <strong>12</strong> hacemos una copia de un obejto ya existente y a los campos precio le aplicamos nuestra operacion <br>\r\n                </td>\r\n                <td>1.\r\n                    <img src=\"../../../../../assets/FrontEnd/JavaScript/returnEarly.png\" alt=\"\"> <br><br>\r\n                    2.\r\n                    <img src=\"../../../../../assets/FrontEnd/JavaScript/wrongReturn.png\" alt=\"\"><br><br>\r\n                    3.\r\n                    <img src=\"../../../../../assets/FrontEnd/JavaScript/CorrectWay.png\" alt=\"\"><br><br>\r\n                </td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td><strong>.map()</strong></td>\r\n                <td>1. Asignamos a un array los valores devultos de .map</td>\r\n                <td>\r\n                    1.\r\n                    <img\r\n                    src=\"../../../../../assets/FrontEnd/JavaScript/map2.png\"\r\n                    alt=\"map2\"\r\n                    title=\"map2\"><br><br>\r\n                </td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td><strong>.filter()</strong></td>\r\n                <td>\r\n                    Este nos ayuda a crear un nuevo array con nuevos elementos apartir de uno ya existente <strong>PERO</strong> configurando un filtro para seleccionar de acuerdo a X condiciones <br><br>Para este ejemplo la funcion anonima se declara como predicado en otra variable y la variable es llamada como parametro. <br><br>En la imagen 2 sacamos en caso contrario <br><br>3. Tambien es usado para sacar los elementos repetidos de un array aprovechando su tercer parametro del predicado <br><br>a = variable x para nombrar a los elementos. <br>b = la posicion en caso de querer trabajar con una posicion especial si es de esta manera y no interesa llamar a los elementos se puede usar \"_\" guion bajo. <br>c= El nombre del array que queremos trabajar. <br><br> indexOf es usado para asignar un numero de posiciones a los elementos y como la posicion 4 y 5 los valores 3 y 1 ya tienen un indexOf <strong>No son agregados al nuevo array</strong>\r\n                </td>\r\n                <td>1\r\n                    <img src=\"../../../../../assets/FrontEnd/JavaScript/filter.png\" alt=\"\"><br><br>\r\n                    2\r\n                    <img src=\"../../../../../assets/FrontEnd/JavaScript/filter2.png\" alt=\"\"><br><br>\r\n                    3\r\n                    <img src=\"../../../../../assets/FrontEnd/JavaScript/filter3.png\" alt=\"\"><br><br>\r\n                </td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td><strong><a href=\"https://platzi.com/clases/1814-basico-javascript/26308-metodos-de-recorridos-de-arrays/\">.filter()</a></strong></td>\r\n                <td>\r\n                    1. filtrar del array del objetos original saco uno o varios empleamos a una varaible <strong>tambien de tipo array</strong> con filter()\r\n\r\n                </td>\r\n                <td>\r\n                    1.\r\n                    <img\r\n                    src=\"../../../../../assets/FrontEnd/JavaScript/filter4.png\"\r\n                    alt=\"filter4\"\r\n                    title=\"filter4\"><br><br>\r\n                    1.\r\n                    <img\r\n                    src=\"../../../../../assets/FrontEnd/JavaScript/filter5.png\"\r\n                    alt=\"filter5\"\r\n                    title=\"filter5\"><br><br>\r\n                </td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td><strong>Reduce</strong></td>\r\n                <td>\r\n                    Funciona como prensa: requiere un valor inicial y con cada interaccion el array se va haciendo mas pequeño hasta reducirlo a un solo elemento\r\n                    <br><br><strong>la funcion reduce recibe 2 parametros(la funcion anonima, el valor del acumulador)</strong>\r\n                    <br><br>El valor inicial puede ser 0 pero si no lo indica va a tonar el valor de la primera posicion del array que en este caso es 3 <br><br>2. forma corta <br><br>3. Tambien podemos poner como predicado la funcion anonima en una variable para despues llamarala como argumento o parametro del filter<br><br>4. Si el array esta vacio da error para que el programa no de error al ejecutarlo declaramos un <strong>if ternario que en caso de estar vacio el array asigne un 0 y al final el filter da 0 y el programa no se continua</strong>\r\n                </td>\r\n                <td>1\r\n                    <img src=\"../../../../../assets/FrontEnd/JavaScript/reduce.png\" alt=\"\"><br><br>\r\n                    2\r\n                    <img src=\"../../../../../assets/FrontEnd/JavaScript/reduce2.png\" alt=\"\"><br><br>\r\n                    3\r\n                    <img src=\"../../../../../assets/FrontEnd/JavaScript/reduce3.png\" alt=\"\"><br><br>\r\n                    4\r\n                    <img src=\"../../../../../assets/FrontEnd/JavaScript/reduce4.png\" alt=\"\"><br><br>\r\n                </td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td><strong>.find()</strong></td>\r\n                <td>Encontrar un elemento dentro de un array</td>\r\n                <td>\r\n                    <img src=\"../../../../../assets/FrontEnd/JavaScript/find.png\" alt=\"\"><br><br>\r\n                </td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td><strong>.find()</strong></td>\r\n                <td>\r\n                    Encontrar un elemento dentro de un array si existe se carga dentro de la variable si no pues la varaible no se va a cargar recordar que todo lo que devulven estas funciones son nuevos arrays\r\n                </td>\r\n                <td>\r\n                    <img src=\"../../../../../assets/FrontEnd/JavaScript/find2.png\" alt=\"\"><br><br>\r\n                </td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td><strong><a href=\"https://www.youtube.com/watch?v=o3c8cW73weQ&list=PLvq-jIkSeTUZ6QgYYO3MwG9EMqC-KoLXA&index=12\">.ForEach()</a></strong></td>\r\n                <td>\r\n                    No genera un nuevo array, no modifica el array original, ademas empleamos el <strong>index</strong> del for  <br><br>\r\n                    <img\r\n                    src=\"../../../../../assets/FrontEnd/JavaScript/forEach2.png\"\r\n                    alt=\"forEach2\"\r\n                    title=\"forEach2\"><br><br>\r\n                </td>\r\n                <td>\r\n                    <img\r\n                    src=\"../../../../../assets/FrontEnd/JavaScript/forEach.png\"\r\n                    alt=\"forEach\"\r\n                    title=\"forEach\"><br><br>\r\n                </td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td><strong>.some()</strong></td>\r\n                <td>\r\n                    Retorna verdadero o falso de acuerdo a una validacion a elementos del objeto <br><br>\r\n                    Si alguno de los elementos cumple con la condicion retorno true sino false\r\n                </td>\r\n                <td>\r\n                    <img\r\n                    src=\"../../../../../assets/FrontEnd/JavaScript/some.png\"\r\n                    alt=\"some\"\r\n                    title=\"some\"><br><br>\r\n                </td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td><strong><a href=\"https://www.youtube.com/watch?v=9h5hyh_wDjo&list=PLvq-jIkSeTUZ6QgYYO3MwG9EMqC-KoLXA&index=15\">if</a></strong></td>\r\n                <td>\r\n                    Operador Ternario\r\n                </td>\r\n                <td>\r\n                    <img\r\n                    src=\"../../../../../assets/FrontEnd/JavaScript/operadorTernario.png\"\r\n                    alt=\"operadorTernario\"\r\n                    title=\"operadorTernario\"><br><br>\r\n                </td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td><strong><a href=\"https://www.youtube.com/watch?v=9h5hyh_wDjo&list=PLvq-jIkSeTUZ6QgYYO3MwG9EMqC-KoLXA&index=15\">Switch</a></strong></td>\r\n                <td>\r\n\r\n                </td>\r\n                <td>\r\n                    <img\r\n                    src=\"../../../../../assets/FrontEnd/JavaScript/switch.png\"\r\n                    alt=\"switch\"\r\n                    title=\"switch\"><br><br>\r\n                </td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td><strong><a href=\"https://www.youtube.com/watch?v=AapgtR0Rwk0&list=PLvq-jIkSeTUZ6QgYYO3MwG9EMqC-KoLXA&index=16\">for</a></strong></td>\r\n                <td>\r\n                    1. for simple <br>\r\n                    2. for mejorado (<strong>for in</strong> y <strong>for of</strong>)o simplificados. <br>\r\n                </td>\r\n                <td>1.\r\n                    <img\r\n                    src=\"../../../../../assets/FrontEnd/JavaScript/for1.png\"\r\n                    alt=\"for1\"\r\n                    title=\"for1\"><br><br>\r\n                    2.\r\n                    <img\r\n                    src=\"../../../../../assets/FrontEnd/JavaScript/for2.png\"\r\n                    alt=\"for2\"\r\n                    title=\"for2\"><br><br>\r\n                </td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td><strong><a href=\"https://www.youtube.com/watch?v=AapgtR0Rwk0&list=PLvq-jIkSeTUZ6QgYYO3MwG9EMqC-KoLXA&index=16\">for in</a></strong></td>\r\n                <td>\r\n                    <strong>for in: </strong> me permite recorrer un objeto <br><br>\r\n                    Ahora podemos ver la definicion de un objeto y empleando un ciclo for of podemos sacar por pantalla sus <strong>llave y valor.....PEROOOOO</strong> precisamente la razon por la cual se muestra la imagen A y B es para mostrar que en este caso con la notacion del punto no es posible sacar el valor de la llave y es por ello que es necesario emplear la notacion de los <strong>[ ]</strong><br><br>\r\n                </td>\r\n                <td>\r\n                    A.\r\n                    <img\r\n                    src=\"../../../../../assets/FrontEnd/JavaScript/forOf1.png\"\r\n                    alt=\"forOf1\"\r\n                    title=\"forOf1\"><br><br>\r\n                    B.\r\n                    <img\r\n                    src=\"../../../../../assets/FrontEnd/JavaScript/forOf2.png\"\r\n                    alt=\"forOf2\"\r\n                    title=\"forOf2\"><br><br>\r\n                </td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td><strong><a href=\"https://www.youtube.com/watch?v=AapgtR0Rwk0&list=PLvq-jIkSeTUZ6QgYYO3MwG9EMqC-KoLXA&index=16\">for of</a></strong></td>\r\n                <td>\r\n                    <strong>for of: </strong> me permite recorrer cualquier valiable que sea interable, incluso si es primitivo como un string <br><br>\r\n                </td>\r\n                <td>\r\n                    <img\r\n                    src=\"../../../../../assets/FrontEnd/JavaScript/forOfString.png\"\r\n                    alt=\"forOfString\"\r\n                    title=\"forOfString\"><br><br>\r\n                </td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td><strong><a href=\"https://www.youtube.com/watch?v=AapgtR0Rwk0&list=PLvq-jIkSeTUZ6QgYYO3MwG9EMqC-KoLXA&index=16\">while</a></strong></td>\r\n                <td>\r\n                    <img\r\n                    src=\"../../../../../assets/FrontEnd/JavaScript/while2.png\"\r\n                    alt=\"while2\"\r\n                    title=\"while2\"><br><br>\r\n                </td>\r\n                <td>\r\n                    <img\r\n                    src=\"../../../../../assets/FrontEnd/JavaScript/while.png\"\r\n                    alt=\"while\"\r\n                    title=\"while\"><br><br>\r\n                </td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td><strong><a href=\"https://www.youtube.com/watch?v=AapgtR0Rwk0&list=PLvq-jIkSeTUZ6QgYYO3MwG9EMqC-KoLXA&index=16\">Do while</a></strong></td>\r\n                <td></td>\r\n                <td>\r\n                    <img\r\n                    src=\"../../../../../assets/FrontEnd/JavaScript/doWhile.png\"\r\n                    alt=\"doWhile\"\r\n                    title=\"doWhile\"><br><br>\r\n                </td>\r\n            </tr>\r\n\r\n\r\n            <tr>\r\n                <td><strong><a href=\"https://www.youtube.com/watch?v=4xig5UPRC00&list=PLvq-jIkSeTUZ6QgYYO3MwG9EMqC-KoLXA&index=14\">Objeto</a></strong></td>\r\n                <td>\r\n                    1. Definicion de un objeto <br>\r\n                    2. Definicion de su constructor y la instanciacion o ejemplificacion del objeto.<br> <br><br>\r\n                    <img\r\n                    src=\"../../../../../assets/FrontEnd/JavaScript/Object2.png\"\r\n                    alt=\"Object2\"\r\n                    title=\"Object2\"><br><br>\r\n                    console.log(jon.pasatiempos[1]); //Hacer ejercicio <br>\r\n                    console.log(jon.contacto.twitter); //@jonmicrcha <br>\r\n                    jon.saludar(); //Hola:) <br><br><br><strong>\r\n                    console.log(Obejct.keys(jon)); //lista las propiedades del objeto<br>\r\n                    console.log(Obejct.values(jon)); //pone en un array las propiedades del objeto<br>\r\n                    console.log(jon.hasOwnProperty(\"nombre\")); //Da true or false si tiene esta propiedad el objeto<br>\r\n                    </strong>\r\n                </td>\r\n                <td>\r\n                    1.\r\n                    <img\r\n                    src=\"../../../../../assets/FrontEnd/JavaScript/objeto.png\"\r\n                    alt=\"objeto\"\r\n                    title=\"objeto\"><br><br>\r\n                    2.\r\n                    <img\r\n                    src=\"../../../../../assets/FrontEnd/JavaScript/objeto2.png\"\r\n                    alt=\"objeto2\"\r\n                    title=\"objeto2\"><br><br>\r\n                </td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td>localStore</td>\r\n                <td>\r\n                  Guarda data en el navegador, sin importar que se apague el equipo, se cierre la session. <br><br>\r\n                  * localStorage.getItem{{abreParentesis}}<strong>'nombreDeMiObjetoJSon'</strong> {{cierraParentesis}} //Obtener<br><br>\r\n                  * localStorage.setItem{{abreParentesis}}<strong>'nombreDeMiObjetoJSon', 'valorDeObjetoJSon'</strong>{{cierraParentesis}}. //definir<br><br>\r\n                  * localStorage.removeItem{{abreParentesis}}<strong>'nombreDeMiObjetoJSon'</strong>{{cierraParentesis}}. //definir<br><br>\r\n                </td>\r\n                <td>\r\n                  <img\r\n                  src=\"../../../../../assets/FrontEnd/JavaScript/localStorage1.PNG\"\r\n                  alt=\"localStorage1\"\r\n                  title=\"localStorage1\"><br><br>\r\n                  <img\r\n                  src=\"../../../../../assets/FrontEnd/JavaScript/localStorage2.PNG\"\r\n                  alt=\"localStorage2\"\r\n                  title=\"localStorage2\"><br><br>\r\n                </td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td><strong><a href=\"https://www.youtube.com/watch?v=K4vCTeKKCkU\">CustomHooks</a></strong></td>\r\n                <td>\r\n                    * Deben de empezar con la palabra <strong>use</strong>XXXXX. <br><br>\r\n                    * la idea es que dentro de esta funcion se maneje el estado y NO el otro componente. <br><br>\r\n                <img\r\n                  src=\"../../../../../assets/FrontEnd/JavaScript/CustonHooksAntes.PNG\"\r\n                  alt=\"CustonHooksAntes\"\r\n                  title=\"CustonHooksAntes\"><br><br>\r\n                </td>\r\n                <td>\r\n                    <img\r\n                    src=\"../../../../../assets/FrontEnd/JavaScript/CustonHooksDespues.PNG\"\r\n                    alt=\"CustonHooksDespues\"\r\n                    title=\"CustonHooksDespues\"><br><br>\r\n                </td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n\r\n        </tbody>\r\n    </table>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}